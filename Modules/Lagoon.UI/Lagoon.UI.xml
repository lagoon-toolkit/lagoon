<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Lagoon.UI</name>
    </assembly>
    <members>
        <member name="T:Lagoon.UI.Application.Auth.ArrayClaimsPrincipalFactory`1">
            <summary>
            / when a user belongs to multiple roles, IS4 returns a single claim with a serialised array of values this class improves the original factory by deserializing the claims in the correct way
            </summary>
            <typeparam name="TAccount"></typeparam>
        </member>
        <member name="M:Lagoon.UI.Application.Auth.ArrayClaimsPrincipalFactory`1.#ctor(Microsoft.AspNetCore.Components.WebAssembly.Authentication.Internal.IAccessTokenProviderAccessor)">
            <summary>
            Initialise new instance.
            </summary>
            <param name="accessor"></param>
        </member>
        <member name="M:Lagoon.UI.Application.Auth.ArrayClaimsPrincipalFactory`1.CreateUserAsync(`0,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationUserOptions)">
            <summary>
            Create ClaimsPrincipal from account
            </summary>
            <param name="account">User informations</param>
            <param name="options">Authentication options</param>
            <returns>ClaimsPrincipal</returns>
        </member>
        <member name="T:Lagoon.UI.Application.Auth.OfflineAccountClaimsPrincipalFactory">
            <summary>
            Allow an authenticated user to go Offline with it's actual claims
            </summary>
        </member>
        <member name="F:Lagoon.UI.Application.Auth.OfflineAccountClaimsPrincipalFactory.services">
            <summary>
            Service provider used to retrieve DI services
            </summary>
        </member>
        <member name="F:Lagoon.UI.Application.Auth.OfflineAccountClaimsPrincipalFactory._claimsKey">
            <summary>
            Local storage key
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.Auth.OfflineAccountClaimsPrincipalFactory.#ctor(System.IServiceProvider,Microsoft.AspNetCore.Components.WebAssembly.Authentication.Internal.IAccessTokenProviderAccessor,Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Initialization
            </summary>
            <param name="services">To retrieve services injected by DI</param>
            <param name="accessor">For base contructor</param>
            <param name="js">IJSRuntime</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Application.Auth.OfflineAccountClaimsPrincipalFactory.CreateUserAsync(Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteUserAccount,Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationUserOptions)">
            <summary>
            When an building user claims:
            - if online, saved current user claims to localStorage
            - if offline try to load claims from localStorage
            </summary>
            <param name="account">User</param>
            <param name="options">Options</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Application.Auth.OfflineAccountClaimsPrincipalFactory.ClearOfflineUserAsync">
            <summary>
            Remove old authentication data
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.Auth.OfflineAccountClaimsPrincipalFactory.SaveUserToLocalStorageAsync(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Save user claims to localStorage
            </summary>
            <param name="user">Claims to save</param>
        </member>
        <member name="M:Lagoon.UI.Application.Auth.OfflineAccountClaimsPrincipalFactory.LoadUserFromLocalStorageAsync">
            <summary>
            Try to local user claims from localstorage and if not available return an empty claim (no authenticated user) 
            </summary>
        </member>
        <member name="T:Lagoon.UI.Application.Auth.OfflineAccountClaimsPrincipalFactory.ClaimData">
            <summary>
            Claim storage infos
            </summary>
        </member>
        <member name="T:Lagoon.UI.Application.LgApplication">
            <summary>
            Application configuration endpoint
            </summary>
        </member>
        <member name="F:Lagoon.UI.Application.LgApplication._windowInformation">
            <summary>
            Browser window information.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgApplication.BehaviorConfiguration">
            <summary>
            Lagoon configuration for the application.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgApplication.WindowInformation">
            <summary>
            Gets the browser window information.
            </summary>
        </member>
        <member name="E:Lagoon.UI.Application.LgApplication.OnWindowResize">
            <summary>
            Event raise when the size of the application window change.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.LgApplication.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.LgApplication.Init(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            LgApplication initialization.
            </summary>
            <param name="loggerFactory">Logger factory.</param>
            <param name="configuration">AppSettings configuration.</param>
        </member>
        <member name="M:Lagoon.UI.Application.LgApplication.LoadBehaviorConfiguration">
            <summary>
            Load lagoon configuration.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.LgApplication.LoadConfiguration(Lagoon.UI.Application.LoadConfigurationEventArgs)">
            <summary>
            Method to override in client app to customize Lagoon libraries parameters
            </summary>
            <param name="e">Application configuration parameters</param>
        </member>
        <member name="M:Lagoon.UI.Application.LgApplication.GetRoutableComponentsAssemblies">
            <summary>
            Return a list of assemblies (linked to the current assembly) which contain routable component
            </summary>
            <returns>Assemblies with routable components</returns>
        </member>
        <member name="E:Lagoon.UI.Application.LgApplication.OnLanguageChanged">
            <summary>
            Event triggered when language has changed. cf. SetLanguage()
            Rq: Protected because this event should not be handled by client app
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.LgApplication.SetLanguage(System.Globalization.CultureInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Application.LgApplication.LoadLanguages(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.String}})">
            <summary>
            Add additionnal dictionnary or overload existing key at runtime and notify ui
            </summary>
            <param name="additionnalDico"></param>
        </member>
        <member name="M:Lagoon.UI.Application.LgApplication.OnInitCulture(System.Globalization.CultureInfo)">
            <summary>
            Culture intialization.
            </summary>
            <param name="culture">Culture to use.</param>
        </member>
        <member name="M:Lagoon.UI.Application.LgApplication.SetWindowInformation(Lagoon.UI.Components.WindowInformationData)">
            <summary>
            Keep window information data.
            </summary>
            <param name="data">window information data</param>
        </member>
        <member name="M:Lagoon.UI.Application.LgApplication.WindowResizeAsync(Lagoon.UI.Components.WindowInformationData)">
            <summary>
            Method called when the browser window resizing.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="E:Lagoon.UI.Application.LgApplication.OnShowToastr">
            <summary>
            Event triggered when a toastr is displayed
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.LgApplication.ShowToastr(System.String,System.String,Lagoon.UI.Components.Level,System.Boolean)">
            <summary>
            Show the toastr
            </summary>
            <param name="message">Message</param>
            <param name="title">Title</param>
            <param name="level">Level</param>
            <param name="escapeHtml">Indicate if the message and the title are using raw text or HTML format.</param>
        </member>
        <member name="E:Lagoon.UI.Application.LgApplication.OnShowScreenReaderInformation">
            <summary>
            Event trigger when Sr information must be displayed
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.LgApplication.ShowScreenReaderInformation(System.String)">
            <summary>
            Display information for screen reader only
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="E:Lagoon.UI.Application.LgApplication.OnShowConfirm">
            <summary>
            Event triggered when a confirmation modal is displayed
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.LgApplication.ShowConfirmAsync(System.String,System.Func{System.Threading.Tasks.Task},System.String)">
            <summary>
            Show the confirmation modal
            </summary>
            <param name="confirmationMessage">Confirmation message</param>
            <param name="callback">Confirmation callback</param>
            <param name="title">Title of the window.</param>
        </member>
        <member name="E:Lagoon.UI.Application.LgApplication.OnShowModal">
            <summary>
            Event triggered when a confirmation modal is displayed
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.LgApplication.ShowModal(System.String)">
            <summary>
            Show the confirmation modal
            </summary>
            <param name="route">Page url</param>
        </member>
        <member name="T:Lagoon.UI.Application.LgApplicationCriticalException">
            <summary>
            Génrère une erreur critique masquant le contenu de l'application.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.LgApplicationCriticalException.#ctor(System.Exception)">
            <summary>
            New instance.
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:Lagoon.UI.Application.LgApplicationCriticalException.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Application.LgBehaviorConfiguration">
            <summary>
            Global Lagoon configuration
            </summary>
        </member>
        <member name="F:Lagoon.UI.Application.LgBehaviorConfiguration._colors">
            <summary>
            Color list
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.AliasMessages">
            <summary>
            Friendly message list to replace original messages.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.ToolbarButtonSize">
            <summary>
            Gets or sets the default button size for toolbar buttons.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.FrameToolbarButtonSize">
            <summary>
            Gets or sets the default button size for toolbar buttons in frames.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.ActionPanelToolbarButtonSize">
            <summary>
            Gets or sets the default button size for toolbar buttons in panel action.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.Toastr">
            <summary>
            Toaster options
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.IsTabbed">
            <summary>
            Define if the application is in tabbed navigation
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.UseServiceWorker">
            <summary>
            Gets or sets the service-worker activation state. Default is false 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.ServiceWorkerAutoInstall">
            <summary>
            Get or sets if the service worker auto install when application is launched.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.RequireEulaConsent">
            <summary>
            Define if the application must require eula consent
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.EulaFromServer">
            <summary>
            Define if the application should retrieve eula content from server (or locally in Dico.xml)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.UseAppSettings">
            <summary>
            Gets or sets a value which activate the dowload of "App" Node from appsettings.json (server side)
            </summary>
            <value><c>true</c> by default</value>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.RgaaSupport">
            <summary>
            Define if the application is Rgaa
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.PostLogoutUri">
            <summary>
            Optional. Define the uri to call after successfully disconnected from the application.
            Can be usefull to disconnect from SSO when disconnecting from the application.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.PostLogoutMode">
            <summary>
            Specify the behavior of post logout
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.Logger">
            <summary>
            Logger configuration
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.EditForm">
            <summary>
            Gets or sets LgEditForm behavior
            </summary>
            <returns>LgEditFrom defaults options</returns>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.ServiceWorkerEnabled">
            <summary>
            Gets or sets the service-worker activation state. Default is false 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.Select">
            <summary>
            Gets or sets the LgSelect and LgSelectMultiple configuration
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.SharedProfileAdministratorPolicy">
            <summary>
            Gets or sets the name of policy authorizing the management of shared profiles in the grids.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.ExportProviderManager">
            <summary>
            Gets the default export provider manager.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LgBehaviorConfiguration.ColorPalette">
            <summary>
            Gets or sets the list of color available in the palette.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.LgBehaviorConfiguration.#ctor(System.Boolean)">
            <summary>
            Initialize a new behavior configuration.
            </summary>
            <param name="serviceWorkerEnabled">The service-worker activation state.</param>
        </member>
        <member name="M:Lagoon.UI.Application.LgBehaviorConfiguration.GetDefaultColors">
            <summary>
            Color list
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.LgBehaviorConfiguration.GetLegacyDefaultColors">
            <summary>
            Get the legacy color list.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Application.LoadConfigurationEventArgs">
            <summary>
            Lagoon gloabl configuration loading event arguments.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.LoadConfigurationEventArgs.Configuration">
            <summary>
            Application behavioral configuration.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.LoadConfigurationEventArgs.#ctor(Lagoon.UI.Application.LgBehaviorConfiguration)">
            <summary>
            Initialize new instance.
            </summary>
            <param name="configuration">Application behavioral configuration.</param>
        </member>
        <member name="T:Lagoon.UI.Application.Logging.LgExceptionLogger">
            <summary>
            Represents a type used to perform logging.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.Logging.LgExceptionLogger.LOCALDB_ERRORKEY">
            <summary>
            Key used to store errors in local db storage
            </summary>
        </member>
        <member name="F:Lagoon.UI.Application.Logging.LgExceptionLogger._httpClient">
            <summary>
            HttpClient used to send the error to the server controlleur
            </summary>
        </member>
        <member name="F:Lagoon.UI.Application.Logging.LgExceptionLogger._localStorage">
            <summary>
            LocalStorage used to store errors that could not be sent to the server
            </summary>
        </member>
        <member name="F:Lagoon.UI.Application.Logging.LgExceptionLogger._loggerOptions">
            <summary>
            Current LgApplication configuration instance
            </summary>
        </member>
        <member name="F:Lagoon.UI.Application.Logging.LgExceptionLogger._navManager">
            <summary>
            Used to redirect the user to the error page
            </summary>
        </member>
        <member name="F:Lagoon.UI.Application.Logging.LgExceptionLogger._timer">
            <summary>
            Timer used to check periodically if there is local error to send to the server
            </summary>
        </member>
        <member name="F:Lagoon.UI.Application.Logging.LgExceptionLogger._asyncLock">
            <summary>
            Used to synchronize log write / delete
            </summary>
        </member>
        <member name="F:Lagoon.UI.Application.Logging.LgExceptionLogger._resendErrorCount">
            <summary>
            Number of failed error sync attempts
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.Logging.LgExceptionLogger.#ctor(Lagoon.UI.Application.Logging.LgExceptionLoggerOptions,Microsoft.Extensions.Configuration.IConfiguration,System.Net.Http.HttpClient,Blazored.LocalStorage.ILocalStorageService,Microsoft.AspNetCore.Components.NavigationManager,Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Initialization of a new logger
            </summary>
            <param name="options">Options.</param>
            <param name="configuration">Configuration.</param>
            <param name="httpClient">HttpClient used to send errors to server controlleur</param>
            <param name="localStorage">LocalStorage used to store errors when server controlleur is not available</param>
            <param name="nav">Navigation manager.</param>
            <param name="js">Used to retrieve application base path</param>
        </member>
        <member name="M:Lagoon.UI.Application.Logging.LgExceptionLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            Only errors and above level are sent to the server
            </summary>
            <param name="logLevel">Current configuration</param>
            <returns>True if log enable, false otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Application.Logging.LgExceptionLogger.Microsoft#Extensions#Logging#ILogger#Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <summary>
            If trace is enable, send the client-side exception to LogErrorControlleur (server-side)
            Unhandled exceptions (and explicity Logger.call) will call this method
            </summary>
            <param name="logLevel">Error type (Error, Warning, Trace, ...)</param>
            <param name="eventId">Optional EventId</param>
            <param name="state">Additional message on the exception</param>
            <param name="exception">Exception to trace</param>
            <param name="formatter">Function to format the exception</param>
        </member>
        <member name="M:Lagoon.UI.Application.Logging.LgExceptionLogger.DoNotLogException(System.Exception)">
            <summary>
            Check if an exception should be excluded from logging
            </summary>
            <param name="ex">Exception to check</param>
            <returns>True if exception should not be traced, false otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Application.Logging.LgExceptionLogger.SendErrorToServerAsync(Lagoon.Core.LgException.ApiError)">
            <summary>
            Send error to the server
            </summary>
            <param name="error">Error to send</param>
            <returns>True if the error successfully send, false otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Application.Logging.LgExceptionLogger.GetLocalErrorsAsync">
            <summary>
            Return the list of error stored locally 
            </summary>
            <returns>List of error to send to the server</returns>
        </member>
        <member name="M:Lagoon.UI.Application.Logging.LgExceptionLogger.ClearLocalErrorsAsync">
            <summary>
            Clear the error cache
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Application.Logging.LgExceptionLogger.SaveErrorLocallyAsync(Lagoon.Core.LgException.ApiError)">
            <summary>
            Save an error to localDB
            </summary>
            <param name="error">Error to save</param>
        </member>
        <member name="M:Lagoon.UI.Application.Logging.LgExceptionLogger.CheckLocalErrorsAsync(System.Object)">
            <summary>
            Check if there is local error to send to the server, and if so try to send them
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.Logging.LgExceptionLogger.Microsoft#Extensions#Logging#ILogger#BeginScope``1(``0)">
            <summary>
             Begins a logical operation scope.
            </summary>
            <typeparam name="TState">TState: The type of the state to begin scope for..</typeparam>
            <param name="state">The identifier for the scope.</param>
            <returns>An System.IDisposable that ends the logical operation scope on dispose.</returns>
        </member>
        <member name="M:Lagoon.UI.Application.Logging.LgExceptionLogger.Dispose">
            <summary>
            Free resources
            </summary>
        </member>
        <member name="T:Lagoon.UI.Application.Logging.LgExceptionLoggerOptions">
            <summary>
            Exception handling options.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.Logging.LgExceptionLoggerOptions.SyncErrorDelay">
            <summary>
            Delay (in seconds) between two attempts to send local errors to the server.
            Default value : 30 minutes.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.Logging.LgExceptionLoggerOptions.MaxResendErrorAttempts">
            <summary>
            If this counter is reach, a message will warn the user.
            Default value : 10 times.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Application.Logging.LgExceptionLoggerOptions.MaxLocalErrorsCount">
            <summary>
            Max number of errors stored on the client side.
            Default value : 200.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Application.Logging.LgLoggerProvider">
            <summary>
            Logger provider.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Application.Logging.LgLoggerProvider._logger">
            <summary>
            Client logger
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.Logging.LgLoggerProvider.#ctor(Lagoon.UI.Application.Logging.LgExceptionLoggerOptions,Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.DependencyInjection.ServiceProvider)">
            <summary>
            Initialization client side logger.
            </summary>
            <param name="options">Logger options.</param>
            <param name="configuration">Configuration.</param>
            <param name="services">Register services.</param>
        </member>
        <member name="M:Lagoon.UI.Application.Logging.LgLoggerProvider.CreateLogger(System.String)">
            <summary>
            Return the initialized logger
            </summary>
        </member>
        <member name="M:Lagoon.UI.Application.Logging.LgLoggerProvider.Dispose">
            <summary>
            Free resources
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.WindowInformation">
            <summary>
            Browser informations.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WindowInformation.Height">
            <summary>
            Browser window height (change when the keyboard is opened on mobile devices).
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WindowInformation.Width">
            <summary>
            Browser window height (change when the keyboard is opened on mobile devices).
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WindowInformation.MediaOrientation">
            <summary>
            Orientation "Landscape" or "Portrait".
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WindowInformation.MediaType">
            <summary>
            Media type detected.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.WindowInformation.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.WindowInformationData">
            <summary>
            Browser informations.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WindowInformationData.Height">
            <summary>
            Browser window inner height.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WindowInformationData.Width">
            <summary>
            Browser window inner width.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WindowInformationData.Mobile">
            <summary>
            Device type "Mobile" else "Desktop".
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WindowInformationData.Portrait">
            <summary>
            Orientation "Portrait" else "Landscape".
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgAccordion">
            <summary>
            Accordion frames component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgAccordion.ActiveItem">
            <summary>
            Gets or sets active pane
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgAccordion.ChildContent">
            <summary>
            Gets or sets accordion content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgAccordion.CssClass">
            <summary>
            Gets or sets css class of the container
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgAccordion.Items">
            <summary>
            Gets or sets list of panes
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgAccordion.AddItem(Lagoon.UI.Components.LgAccordionPane)">
            <summary>
            Add new items inside Accordion
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Lagoon.UI.Components.LgAccordion.HandleClick(Lagoon.UI.Components.LgAccordionPane)">
            <summary>
            Attached event on the open/close bouton click
            </summary>
            <param name="activeItem"></param>
        </member>
        <member name="M:Lagoon.UI.Components.LgAccordion.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgAccordionPane">
            <summary>
            Accordion pane.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgAccordionPane.Container">
            <summary>
            Gets or sets accordion pane container
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgAccordionPane.#ctor">
            <summary>
            Initialize new instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgAccordionPane.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgAccordionPane.SetCollapse(System.Boolean)">
            <summary>
            Define if the state is opened or closed
            </summary>
            <param name="state"></param>
        </member>
        <member name="T:Lagoon.UI.Components.Authenticate">
            <summary>
            Authentication management
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Authenticate.Action">
            <summary>
            Current authentication step
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.Authenticate.AuthenticationState">
            <summary>
            Used to retrieve current authentication state
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.Authenticate.BehaviorConfiguration">
            <summary>
            Configuration by the developper.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Authenticate.Configuration">
            <summary>
            Configuration from the appsettings.json file.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Authenticate.OfflineAuth">
            <summary>
            Used to check if we are in offline config, and if so to clean claims stored on disconnection
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.Authenticate.Js">
            <summary>
            Javascript interop
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Authenticate.OnLogOutSucceededAsync">
            <summary>
            On Logout, clear authentication elements
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Authenticate.OnParametersSetAsync">
            <summary>
            On Action paramter set
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.DisplayNotAuthorized">
            <summary>
            Handle the unauthize page access.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.DisplayNotAuthorized.AppComponent">
            <summary>
            LgApp instance.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.DisplayNotAuthorized.AuthenticationState">
            <summary>
            Gets or sets the authentication state.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.DisplayNotAuthorized.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.DisplayNotAuthorized.IsAuthenticated">
            <summary>
            Gets a value that indicates whether the user has been authenticated.
            </summary>
            <returns>A value that indicates whether the user has been authenticated.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgGlobalSearch">
            <summary>
            A suggest box component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgGlobalSearch.CssClass">
            <summary>
            Gets or sets the CSS classes.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgGlobalSearch.Items">
            <summary>
            Gets or sets the items.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgGlobalSearch.Placeholder">
            <summary>
            Gets or sets the input placeholder
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgGlobalSearch.SearchUri">
            <summary>
            Gets or sets the items.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgGlobalSearch.Tooltip">
            <summary>
            Gets or sets the tooltip.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgGlobalSearch.ElementId">
            <summary>
            Gets the DOM element id.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgGlobalSearch.NavigationManager">
            <summary>
            Gets or sets the navigation manager service.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgGlobalSearch.DatalistId">
            <summary>
            Gets the Datalist id.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgGlobalSearch.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ILgCheckBox`1.CssClass">
            <summary>
            Gets or sets the CSS class.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ILgCheckBox`1.Tooltip">
            <summary>
            Gets or sets the tooltip.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ILgCheckBox`1.ElementId">
            <summary>
            Gets the DOM element id.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ILgCheckBox`1.Disabled">
            <summary>
            Component is disabled.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ILgCheckBox`1.Value">
            <summary>
            Value bound.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ILgCheckBox`1.Text">
            <summary>
            Checkbox description.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ILgCheckBox`1.CheckedText">
            <summary>
            Checkbox Checked description.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ILgCheckBox`1.IndeterminateText">
            <summary>
            Checkbox Indeterminate description.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ILgCheckBox`1.UncheckedText">
            <summary>
            Checkbox Unchecked description.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.ILgCheckBox`1.OnRenderComponent(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},Microsoft.AspNetCore.Components.EventCallback,Lagoon.UI.Components.DisplayOrientation,Lagoon.UI.Components.CheckBoxKind,Lagoon.UI.Components.CheckBoxTextPosition,System.Boolean,System.Action{Microsoft.AspNetCore.Components.ElementReference},System.String,System.String)">
            <summary>
            Render the list item component.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.EnumListDataSourceBase`2">
            <summary>
            Create a data source from an Enum declaration. Use the [Display("#sample")] attribute on enumeration values
            to define the text.
            </summary>
            <typeparam name="TItem">The enum type to use.</typeparam>
            <typeparam name="TValue">The enum potentially nullable.</typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.EnumListDataSourceBase`2.EnumListItemData.Order">
            <summary>
            The order weight of the column.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.EnumListDataSourceBase`2.#ctor">
            <summary>
            New instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.EnumListDataSourceBase`2.OnLanguageChanged(Lagoon.UI.Components.LanguageChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.EnumListDataSourceBase`2.LoadItems">
            <summary>
            Load enum display names.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.EnumListDataSourceBase`2.GetEnumValues">
            <summary>
            Return the enum values.
            </summary>
            <returns>The enum values.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.EnumListDataSourceBase`2.GetItemDataList">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.EnumListDataSourceBase`2.GetItemText(`0)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.EnumListDataSourceBase`2.GetValueItem(`1)">
            <inheritdoc/>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ListItemData`1.CssClass">
            <summary>
            Gets the CSS classes for the item.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ListItemData`1.Disabled">
            <summary>
            Gets if the item is disabled.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ListItemData`1.IconName">
            <summary>
            Gets the icon name for the item.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ListItemData`1.Text">
            <summary>
            Geth the display text for the item.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ListItemData`1.Tooltip">
            <summary>
            Get the tooltip for the item.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ListItemData`1.Value">
            <summary>
            Get the item value.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.ListItemData`1.#ctor">
            <summary>
            New instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.ListItemData`1.#ctor(Lagoon.UI.Components.IListItemData{`0})">
            <summary>
            New instance.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.ListItemData`1.#ctor(`0,System.String)">
            <summary>
            New instance.
            </summary>
            <param name="value">Value.</param>
            <param name="text">Text.</param>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.AsyncLoadState`1._isLoading">
            <summary>
            Asynchrone data loading is pending.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.AsyncLoadState`1.HasLoadingError">
            <summary>
            Indicate if the last call ended with an error.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.AsyncLoadState`1.IsPending">
            <summary>
            Gets ors sets that an async load need to be done.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.AsyncLoadState`1.IsLoading">
            <summary>
            Asynchrone data loading is pending.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.AsyncLoadState`1.Progress">
            <summary>
            Indicate the loading progression.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.AsyncLoadState`1.CancellationTokenSource">
            <summary>
            Cancellation token for the asynchrone loading.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.AsyncLoadState`1.LoadAndProcessItemsAsync(Lagoon.UI.Components.LgComponentBase,System.Func{System.Collections.Generic.List{`0},System.String,System.Threading.CancellationToken,Lagoon.Helpers.Progress,System.Threading.Tasks.Task},System.Nullable{Microsoft.AspNetCore.Components.EventCallback{Lagoon.UI.Components.FilterChangeEventArgs}},System.String,System.Collections.Generic.List{`0})">
            <summary>
            Call the async method to load items.
            </summary>
            <returns>The async method to load items.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.AsyncLoadState`1.LoadItemsForCancellationTokenAsync(System.Threading.CancellationToken,System.Func{System.Collections.Generic.List{`0},System.String,System.Threading.CancellationToken,Lagoon.Helpers.Progress,System.Threading.Tasks.Task},System.Nullable{Microsoft.AspNetCore.Components.EventCallback{Lagoon.UI.Components.FilterChangeEventArgs}})">
            <summary>
            Call the items loading with a specific cancellation token. 
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="onLoadItemsAsync">The method to load items.</param>
            <param name="onFilterChange">The "OnFilterChange" EventCallBack.</param>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.ILgSelect`1">
            <summary>
            Interface to expose the LgSelect property
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ILgSelect`1.HasCheckBoxes">
            <summary>
            Indicate if the dropdown list has checkboxes.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ILgSelect`1.ReadOnly">
            <summary>
            Gets if select is in readonly.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.ILgSelect`1.ValueEqualityComparer">
            <summary>
            Gets the value equality comparer.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.ILgSelect`1.AddItem(Lagoon.UI.Components.LgOptionListItem{`0})">
            <summary>
            Add an item to the current selected item list
            </summary>
            <param name="item">item</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.ILgSelect`1.RemoveItem(Lagoon.UI.Components.LgOptionListItem{`0})">
            <summary>
            Remove an item to the current selected item list
            </summary>
            <param name="item">item</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.ILgSelect`1.UpdateItem(Lagoon.UI.Components.LgOptionListItem{`0},`0,`0)">
            <summary>
            Update an item to the current selected item list
            </summary>
            <param name="item">item</param>
            <param name="oldValue">previous item value</param>
            <param name="newValue">new item value</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.ILgSelect`1.SelectItemAsync(Lagoon.UI.Components.LgOptionListItem{`0})">
            <summary>
            Call from LgOptionListItem: item selection
            </summary>
            <param name="item">selected item</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.ILgSelect`1.IsDropdownItemVisible(Lagoon.UI.Components.LgOptionListItem{`0})">
            <summary>
            Does item is visible into dropdown list ?
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.ILgSelect`1.InitItemSelection(Lagoon.UI.Components.LgOptionListItem{`0})">
            <summary>
            item is selected ?
            </summary>
            <param name="item">item</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.ILgSelect`1.OnClickItemAsync(Lagoon.UI.Components.OptionEventArgs{`0})">
            <summary>
            on click selected item (multiple only)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgSelectAll`2">
            <summary>
            Component to select all items in the drop down list.
            </summary>
            <typeparam name="TValue">The type for list of values.</typeparam>
            <typeparam name="TItemValue">The type of values.</typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectAll`2.SelectionGuid">
            <summary>
            Guid to force OnParameterSet and update the selection.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectAll`2.Select">
            <summary>
            Gets the parent LgSelectBase component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectAll`2.VisibleItems">
            <summary>
            Gets the visible items in the list.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectAll`2.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectAll`2.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectAll`2.GetSelectAllState">
            <summary>
            Get the current selection state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectAll`2.ToggleSelectAllAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Determine the new state of the items available in dropdown.
            Checkbox SelectAll is false => unselect all items
            Checkbox SelectAll is true => select all items
            If Checkbox SelectAll is null => select all items that are not already selected and set checkbox to checked
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgSelectBase`2">
            <summary>
            Base class for LgSelect and LgSelectMultiple component
            </summary>
            <typeparam name="TValue">Select type</typeparam>
            <typeparam name="TItemValue">Item value type</typeparam>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectBase`2._showList">
            <summary>
            Display or not the items list
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectBase`2._wasOpen">
            <summary>
            Gets or sets the last state.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectBase`2._canAssignNull">
            <summary>
            Determined by the linked property (if the property can't be null, we should hide the reset button)
            </summary>
            <value></value>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectBase`2._searchText">
            <summary>
            Text searched into items list
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectBase`2._tokenDropdown">
            <summary>
            Hide / Show items list token
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectBase`2._resetButtonText">
            <summary>
            Reset button text
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectBase`2._resetButtonAriaLabel">
            <summary>
            Reset button arialabel
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectBase`2._autoDS">
            <summary>
            Data source from enumeration.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectBase`2._focus">
            <summary>
            Rise focus JS 
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectBase`2._focusLast">
            <summary>
            Rise focus JS on last option 
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectBase`2._focusFirst">
            <summary>
            Rise focus JS on first option 
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectBase`2._dotnetRef">
            <summary>
            DotNet object reference
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.ButtonContent">
            <summary>
            Dropdown button content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.Select">
            <summary>
            Gets or sets select render
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.ShowList">
            <summary>
            Display or not the items list
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.ElementRef">
            <summary>
            Gets or sets the DOM element reference.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.OptionItems">
            <summary>
            Options item list (in dropdown)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.WorkingItems">
            <summary>
            List of the items from the source.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.WorkingDataSource">
            <summary>
            Data source from enum or from parameter.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.HasAsyncLoading">
            <summary>
            Gets if the data are loaded when the tray is openned.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.HasCheckBoxes">
            <summary>
            Indicate if the dropdown list has checkboxes.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.ReadOnlyAsBubble">
            <summary>
            Indicate if the readonly mode is text.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.ValueEqualityComparer">
            <summary>
            Method to compare two values.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.HasUnknownValues">
            <summary>
            Indicate if a selected value is unknown.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.SelectionGuid">
            <summary>
            Guid for tacking selection changes.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.Multiple">
            <summary>
            Gets indicator of multiple selection
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.SelectAllManager">
            <summary>
            Gets the number of selected and unselected items in the list.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.DataSourceItems">
            <summary>
            Gets or set the items of the list.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.Items">
            <summary>
            Gets or sets the items.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.Placeholder">
            <summary>
            Gets or sets the select placeholder
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.OnChange">
            <summary>
            Gets or sets a callback that updates the bound value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.ResetButton">
            <summary>
            Display Clear button if true 
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.OnFilterChange">
            <summary>
            Fire when the user do a search
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.OnReset">
            <summary>
            Fire when the user click on reset button
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.MinSearchCharacter">
            <summary>
            Minimal input length before 'OnFilterChanged' is fired (used in LoadOnDemand mode)
            </summary>
            <value>3 by default</value>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.ShowSearchBox">
            <summary>
            Disaply/Hide the search box which allow filter items
            </summary>
            <value><c>true</c> if activated (the default), <c>false</c> otherwise</value>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.SearchBoxCssClass">
            <summary>
            CSS class to add to search box.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.InputMask">
            <summary>
            Gets or sets the input mask
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.InputMaskKind">
            <summary>
            Gets or sets the input mask kind
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectBase`2.InputMaskPlaceholder">
            <summary>
            Gets or sets the input mask
            </summary>
        </member>
        <member name="E:Lagoon.UI.Components.Internal.LgSelectBase`2.OnUpdateSelection">
            <summary>
            Event called when the extra-informations about the selected items are loaded (Text, IconName, ...)
            </summary>
        </member>
        <member name="E:Lagoon.UI.Components.Internal.LgSelectBase`2.OnReloadItemsContent">
            <summary>
            Event called when the select refreshed and selected items don't have the "Text" value. 
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnAddItem(Lagoon.UI.Components.LgOptionListItem{`1})">
            <summary>
            Add an item to the current selected item list
            </summary>
            <param name="item">item</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnRemoveItem(Lagoon.UI.Components.LgOptionListItem{`1})">
            <summary>
            Remove an item to the current selected item list
            </summary>
            <param name="item">item</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnUpdateItem(Lagoon.UI.Components.LgOptionListItem{`1},`1,`1)">
            <summary>
            Update an item to the current selected item list
            </summary>
            <param name="item">item</param>
            <param name="oldValue">previous item value</param>
            <param name="newValue">new item value</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnSelectItemAsync(Lagoon.UI.Components.LgOptionListItem{`1})">
            <summary>
            Call from LgOptionListItem: item selection
            </summary>
            <param name="item">selected item</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.IsDropdownItemVisible(Lagoon.UI.Components.LgOptionListItem{`1})">
            <summary>
            Does item is visible into dropdown list ?
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnInitItemSelection(Lagoon.UI.Components.LgOptionListItem{`1})">
            <summary>
            item is selected ?
            </summary>
            <param name="item">item</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnClickItemAsync(Lagoon.UI.Components.OptionEventArgs{`1})">
            <summary>
            on click selected item (multiple only)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnGetSelectionGuid(System.Boolean)">
            <summary>
            Get the GUID corresponding the current version of selected values.
            </summary>
            <param name="trackUpdate">Check if the selection have been updated.</param>
            <returns>The GUID corresponding the current version of selected values.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnInitialized">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnAfterRender(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnLanguageChangedAsync(Lagoon.UI.Components.LanguageChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.InitCanAssignNull">
            <summary>
            Gets if the select can be reset.
            </summary>
            <returns>Return if the select can be reset.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.ShowResetButton">
            <summary>
            Return <c>true</c> if the Reset button should be displayed. <c>false</c> otherwise
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.GetRenderingDataItems">
            <summary>
            Gets the items to be rendered.
            </summary>
            <returns>Items to be rendered.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnKeepItemsData(System.Collections.Generic.List{`1})">
            <summary>
            Gets the selected items extra informations (Title, IconName, ...)
            </summary>
            <param name="unknownValues">The values without additional informations.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.GetItemsFiltredByValue(System.Collections.Generic.List{`1})">
            <summary>
            Load the list of items corresponding to the argument filter.
            </summary>
            <param name="unknownValues">The values without additional informations.</param>
            <returns>The loaded list.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnKeepItemsDataAsync(System.Collections.Generic.List{`1},System.String,System.Threading.CancellationToken,Lagoon.Helpers.Progress)">
            <summary>
            Gets the selected items extra informations (Title, IconName, ...)
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnLoadItemsAsync(System.Collections.Generic.List{`1},System.String,System.Threading.CancellationToken,Lagoon.Helpers.Progress)">
            <summary>
            Gets the items to be rendered.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.LoadItemsAsync(System.Collections.Generic.List{`1},System.String,System.Threading.CancellationToken,Lagoon.Helpers.Progress)">
            <summary>
            Gets the items to be rendered.
            </summary>
            <returns>Items to be rendered.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.KeepItemData(Lagoon.UI.Components.IListItemData{`1})">
            <summary>
            Keep item additional informations.
            </summary>
            <param name="item">Item with it's additionnal informations.</param>
            <returns><c>true</c> if the Value is in selection.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.GetUnknownValues">
            <summary>
            Gets the value with unknown extra informations (Title, IconName, ...)
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.GetResetButtonAttributes">
            <summary>
            Get the list of additional attributes to add to reset button.
            </summary>
            <returns>The list of additional attributes to add to component.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.IsItemDropdownVisible(Lagoon.UI.Components.LgOptionListItem{`1})">
            <summary>
            Check if an item is visible into list
            </summary>
            <param name="item">item tested</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.IsItemMatchFilter(Lagoon.UI.Components.LgOptionListItem{`1})">
            <summary>
            Check if the item match the searched text.
            </summary>
            <param name="item">The item.</param>
            <returns><c>true</c> if the item match the searched text.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.HasActiveLabel">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.CloseDropdownAsync">
            <summary>
            Toggle items list
            </summary> 
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.ToggleListAsync">
            <summary>
            Toggle items list
            </summary> 
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.ToggleListAsync(System.Boolean)">
            <summary>
            Toggle items list
            </summary> 
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.KeepListOpen">
            <summary>
            Try to hide item list
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.TryCloseListAsync">
            <summary>
            Hide item list
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnSearch(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Call on searching value into select
            </summary>
            <param name="e">Event on change argument</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnResetValueAsync">
            <summary>
            Call during onclick reset button
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnResetAsync">
            <summary>
            Call on click reset button
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnKeyDownAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Capture the key pressed events.
            </summary>
            <param name="args">Key pressed informations.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.ReloadItemsContent">
            <summary>
            Ask for the "Items" render fragment to re-render.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.GetSelectedItemsText">
            <summary>
            Return list of the options selected text
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.ChangeSelectionAsync(System.Collections.Generic.IEnumerable{Lagoon.UI.Components.LgOptionListItem{`1}},System.Boolean)">
            <summary>
            Change the selection state for the item list.
            </summary>
            <param name="optionItems">List of items to update.</param>
            <param name="select">The new selection state</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.OnRenderComponent(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectBase`2.TryParseValueFromString(System.String,`0@,System.String@)">
            <inheritdoc />
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgSelectButton`2">
            <summary>
            Button of a Select commponent.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectButton`2._unknownValues">
            <summary>
            Value with unknown extra informations (Title, IconName, ...)
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectButton`2._lastUnknownValues">
            <summary>
            The last unknown value list.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectButton`2._loadState">
            <summary>
            State of the async load items method.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectButton`2.ChildContent">
            <summary>
            Content of the button.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectButton`2.ReadOnlyContent">
            <summary>
            Content of the readonly button.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectButton`2.ILgSelect">
            <summary>
            Gets the ILgSelect interface.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectButton`2.Select">
            <summary>
            Gets the parent LgSelectBase component.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectButton`2.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectButton`2.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectButton`2.OnUpdateSelection">
            <summary>
            Refreshing the selection when it's change.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectButton`2.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectButton`2.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectButton`2.LoadItemsAsync">
            <summary>
            Call the async method to load items.
            </summary>
            <returns>The async method to load items.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgSelectItemsLoader`2">
            <summary>
            Component to handle the items load from render fragment.
            </summary>
            <typeparam name="TValue">Select "Value" type.</typeparam>
            <typeparam name="TItemValue">Item "Value" type.</typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectItemsLoader`2.Select">
            <summary>
            Gets the parent LgSelectBase component.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectItemsLoader`2.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectItemsLoader`2.Dispose">
            <summary>
            Unregister event listener.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectItemsLoader`2.ShouldRender">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectItemsLoader`2.OnAfterRender(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectItemsLoader`2.OnReloadItemsContent">
            <summary>
            Redo the Items.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgSelectTray`2">
            <summary>
            Content of the dropdown list for a select.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectTray`2._wasOpen">
            <summary>
            Gets or sets the last state.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectTray`2._loadState">
            <summary>
            State of the async load items method.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectTray`2._lastSearchText">
            <summary>
            Last text searched.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectTray`2._msgIconName">
            <summary>
            Message icon name.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectTray`2._msgDescription">
            <summary>
            Message description.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectTray`2._isOpening">
            <summary>
            Is opening the dropdown list
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgSelectTray`2._isClosing">
            <summary>
            Is closing the dropdown list
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectTray`2.ILgSelect">
            <summary>
            Gets the ILgSelect interface.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectTray`2.IsOpen">
            <summary>
            Gets or sets if the bar is opened.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectTray`2.SearchText">
            <summary>
            Gets or sets the filter text.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgSelectTray`2.Select">
            <summary>
            Gets the parent LgSelectBase component.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectTray`2.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectTray`2.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectTray`2.LoadItemsAsync">
            <summary>
            Call the async method to load items.
            </summary>
            <returns>The async method to load items.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectTray`2.ShouldRender">
            <summary>
            Cancel the rendering (except the first one) if the list is not visible.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectTray`2.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgSelectTray`2.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgOptionBubble`1">
            <summary>
            Option bubble render
            </summary>
            <typeparam name="TItemValue"></typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgOptionBubble`1.Value">
            <summary>
            Gets or sets the item value
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgOptionBubble`1.IconName">
            <summary>
            Gets or sets the item icon name
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgOptionBubble`1.Text">
            <summary>
            Gets or sets the item text
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgOptionBubble`1.IsReadOnly">
            <summary>
            Gets or sets the item readonly indicator
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgOptionBubble`1.Tooltip">
            <summary>
            Gets or sets the item tooltip
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgOptionBubble`1.OnRemove">
            <summary>
            Fire when the user click on the remove icon
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgOptionBubble`1.ILgSelect">
            <summary>
            Get LgSelect interface
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgOptionBubble`1.OnClickAsync">
            <summary>
             Fire when the user click on the item
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgOptionBubble`1.OnRemoveAsync">
            <summary>
            Remove item event
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.NavigateToEventArgs.RouteData">
            <summary>
            Information about the page to be displayed.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.NavigateToEventArgs.Uri">
            <summary>
            Target URI.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.NavigateToEventArgs.#ctor(System.String,Microsoft.AspNetCore.Components.RouteData)">
            <summary>
            Initialise a new instance.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.NavigatingToEventArgs.Cancel">
            <summary>
            Indicate if the navigation must be cancelled.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.NavigatingToEventArgs.Uri">
            <summary>
            Target URI.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.NavigatingToEventArgs.#ctor(System.String)">
            <summary>
            Initialise a new instance.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgEula">
            <summary>
            Component used to display End User Licence Agreement
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgEula.OnInitialized">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgEula.AcceptCguAsync">
            <summary>
            Accept EULA
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgPageAuthorizeRouteView">
            <summary>
            Displays the content of a route by checking the user's rights.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgPageAuthorizeRouteView.AppComponent">
            <summary>
            LgApp instance.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgPageAuthorizeRouteView.RouteData">
            <summary>
            Information about the page to display.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgRouter">
            <summary>
            Lagoon router
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgRouter.LoggerFactory">
            <summary>
            Property to perform logging.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgRouter.NavigationManager">
            <summary>
            Gets or sets the navigation manager service.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgRouter.NavigationInterception">
            <summary>
            Gets or sets navigation interception dependency
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgRouter.RouteManager">
            <summary>
            Gets or sets route manager dependency
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgRouter.App">
            <summary>
            Gets or sets current application dependency
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgRouter.AppComponent">
            <summary>
            LgApp instance.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgRouter.ChildContent">
            <summary>
            Gets or sets found content
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgRouter.Microsoft#AspNetCore#Components#IComponent#Attach(Microsoft.AspNetCore.Components.RenderHandle)">
            <summary>
            Attaches the router to a Microsoft.AspNetCore.Components.RenderHandle.
            </summary>
            <param name="renderHandle">A Microsoft.AspNetCore.Components.RenderHandle that allows the component to be rendered.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgRouter.Dispose">
            <summary>
            Remove router events
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgRouter.Microsoft#AspNetCore#Components#IHandleAfterRender#OnAfterRenderAsync">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgRouter.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <summary>
            Sets parameters supplied by the component's parent in the render tree.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>A System.Threading.Tasks.Task that completes when the component has finished updating and rendering itself.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgRouter.HandleLocationChangedAsync(System.Object,Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs)">
            <summary>
            Call when location has changed
            </summary>
            <param name="sender">Sender</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgRouter.NavigateToAsync(System.String)">
            <summary>
            Define route and tab parameters
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgRouter.GenerateTabKey(System.String,System.String)">
            <summary>
            Build tab key from the route uri.
            </summary>
            <param name="uri">URI to open in the tab.</param>
            <param name="prefix">Prefix to add.</param>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgCustomMenuItem">
            <summary>
            Base class for LgMenuItem, LgMenuTitle and LgMenuSeparator.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomMenuItem.ParentMenuItem">
            <summary>
            Parent menu item.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomMenuItem.Level">
            <summary>
            Level of the menu item.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomMenuItem.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgCustomMenuSet">
            <summary>
            Customizable menu set.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomMenuSet.MenuConfiguration">
            <summary>
            LgMenuConfiguration application instance
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomMenuSet.Id">
            <summary>
            To uniquely identify a menu set
            </summary>
            <value></value>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomMenuSet.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomMenuSet.Dispose(System.Boolean)">
            <summary>
            Disposing resources.
            </summary>
            <param name="disposing">if resource must be released.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomMenuSet.Dispose">
            <summary>
            Disposing resources.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomMenuSet.GetContent">
            <summary>
            Gets the content of the menu set.
            </summary>
            <returns>The content of the menu set</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomMenuSet.ShouldRender">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgMenuRender">
            <summary>
            Component to deport the menu rendering.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgMenuRender._content">
            <summary>
            Content of the menu.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgMenuRender._maxSupportedLevel">
            <summary>
            Maximum level supported by the menu.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgMenuRender._hasUnsupportedLevel">
            <summary>
            Indicate if the menu contains too much level for sub items.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgMenuRender.MenuService">
            <summary>
            Menu service.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgMenuRender.MenuPosition">
            <summary>
            Menu position (MenuTop, MenuToolbar, MenuSidebar, MenuAppTabContainer)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgMenuRender.HideRootLevelText">
            <summary>
            Gets or sets if the label are hidden.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgMenuRender.HideDropDownArrow">
            <summary>
            Gets or sets if the dropdown menu arrow are hidden.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgMenuRender.HideSeparatorItems">
            <summary>
            Gets or sets if the menu items separators are hidden.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgMenuRender.HideTitleItems">
            <summary>
            Gets or sets if the title menu items are hidden.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgMenuRender.ShowTextAsTooltip">
            <summary>
            Gets or sets if the menu item text is shown in tooltip.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuRender.#ctor">
            <summary>
            Initialize a new instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuRender.#ctor(System.Int32)">
            <summary>
            Initialize a new instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuRender.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuRender.OnMenuDataChange">
            <summary>
            Refresh the menu render.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuRender.GetDropDownMenuCssClass(System.Int32)">
            <summary>
            Get the dropdown menu additional CSS class.
            </summary>
            <param name="level">Level of the dropdown menu item.</param>
            <returns>The dropdown menu additional CSS class.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuRender.GetNavItemCssClass(System.Int32)">
            <summary>
            Get the dropdown menu item CSS class.
            </summary>
            <param name="level">Level of the dropdown menu item.</param>
            <returns>The dropdown menu item CSS class.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuRender.GetAdditionnalContent">
            <summary>
            Return an additional content specified by an overriding class.
            </summary>
            <returns>An additional content specified by an overriding class.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgMenuSidebarRender">
            <summary>
            Render the application toolbar.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgMenuSidebarRender.Collapsed">
            <summary>
            Menu is collapsed ? (Used for mobile mode with hamburger menu mode)
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuSidebarRender.#ctor">
            <summary>
            Create a new instance of <see cref="T:Lagoon.UI.Components.Internal.LgMenuTopRender"/>
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuSidebarRender.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgMenuTabContainerRender">
            <summary>
            Render the application tab container menu.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuTabContainerRender.#ctor">
            <summary>
            Create a new instance of <see cref="T:Lagoon.UI.Components.Internal.LgMenuTopRender"/>
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuTabContainerRender.GetDropDownMenuCssClass(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuTabContainerRender.GetNavItemCssClass(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgMenuToolbarRender">
            <summary>
            Render the application toolbar.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuToolbarRender.#ctor">
            <summary>
            Create a new instance of <see cref="T:Lagoon.UI.Components.Internal.LgMenuTopRender"/>
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuToolbarRender.GetDropDownMenuCssClass(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuToolbarRender.GetNavItemCssClass(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgMenuTopRender">
            <summary>
            Render the top menu.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgMenuTopRender.Collapsed">
            <summary>
            Menu is collapsed ? (Used for mobile mode with hamburger menu mode)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgMenuTopRender.DisableWrap">
            <summary>
            Gets or sets if menu item that overflow the menu content are moved to a sub menu.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuTopRender.#ctor">
            <summary>
            Create a new instance of <see cref="T:Lagoon.UI.Components.Internal.LgMenuTopRender"/>
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuTopRender.GetAdditionnalContent">
            <summary>
            Add the menu wrapper item.
            </summary>
            <returns>RenderFragment with the menu wrapper item.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuTopRender.OnAfterRender(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuTopRender.GetCssClassAttribute">
            <summary>
            Gets CSS classes for this component.
            </summary>
            <returns>CSS classes for this component.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgMenuTopRender.GetNavItemCssClass(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgComponentGroup">
            <summary>
            Container used to declare component list in variable.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgComponentGroup.ChildContent">
            <summary>
            Content of the component.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgPageContext">
            <summary>
            Layout adding a LgPageWaitingContextProvider as cascading parameter aroud the page content.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgPageContext.DefaultLayoutProvider">
            <summary>
            LgApp instance.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgPageContext.ParentFormTrackerHandler">
            <summary>
            Parent "FormTrackerHandler".
            </summary>
        </member>
        <member name="E:Lagoon.UI.Components.Internal.LgPageContext.OnGetNewWaitingContext">
            <summary>
            Event called when a new waiting context is asked.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgPageContext.Lagoon#UI#Components#IWaitingContextProvider#GetNewWaitingContext">
            <summary>
            Return a new waiting context with a cancellation token source.
            </summary>
            <returns>A new waiting context with a cancellation token source.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.IPageCloser.ClosePageAsync(Lagoon.UI.Components.LgPage,System.Boolean)">
            <summary>
            Method called when the "Close" method of the page is called.
            </summary>
            <param name="page">Page to close.</param>
            <param name="force">Indicate if we must bypass user confirmations.</param>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.IPageDefaultLayoutProvider">
            <summary>
            Component that provide a page default layout.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.IPageDefaultLayoutProvider.GetDefaultLayout">
            <summary>
            Return the default layout to use.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Lagoon.UI.Components.Internal.IPageManager.OnRaiseActivatedEventAsync">
            <summary>
            Event called when the tab is selected.
            </summary>
        </member>
        <member name="E:Lagoon.UI.Components.Internal.IPageManager.OnRaiseClosingEventAsync">
            <summary>
            Event called when the tab is closing.
            </summary>
        </member>
        <member name="E:Lagoon.UI.Components.Internal.IPageManager.OnRaiseCloseEventAsync">
            <summary>
            Event called when the tab is closed.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.IPageReloader.ReloadPageAsync(Lagoon.UI.Components.LgPage,System.Boolean)">
            <summary>
            Method called when the method "Reload" is called in a LgPage.
            </summary>
            <param name="page">Page.</param>
            <param name="force">Indicate if we must bypass user confirmations.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.IPageTitleHandler.SetPageTitleAsync(Lagoon.UI.Components.LgPage)">
            <summary>
            Method called by page when title or icon change.
            </summary>
            <param name="page">Page instance.</param>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgAppTabContainerLayout">
            <summary>
            Overload of TabContainer for tabbed application
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgAppTabContainerLayout.TABHOMEKEY">
            <summary>
            Key of the default tab
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgAppTabContainerLayout._fullScreenPageContainer">
            <summary>
            Container for full screen pages.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgAppTabContainerLayout._startupTabs">
            <summary>
            List of page tab top open when application is launched.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgAppTabContainerLayout._defaultUri">
            <summary>
            Uri of page to open when application is openned with the default URL.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgAppTabContainerLayout.AppComponent">
            <summary>
            LgApp instance.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgAppTabContainerLayout.PageTitleHandler">
            <summary>
            Class handling the SetTitle method.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgAppTabContainerLayout.#ctor">
            <summary>
            Change parameter default values
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgAppTabContainerLayout.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgAppTabContainerLayout.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgAppTabContainerLayout.NavigateToAsync(Lagoon.UI.Components.Internal.NavigateToEventArgs)">
            <summary>
            Load the page from the route data.
            </summary>
            <param name="e">Informstions about the page to display.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgAppTabContainerLayout.OpenInTabOrFullScreenAsync(System.String,Microsoft.AspNetCore.Components.RouteData)">
            <summary>
            Open tab by its URI and routeData.
            </summary>
            <param name="uri">URI of the page to open</param>
            <param name="routeData">Informations to display the page.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgAppTabContainerLayout.OpenTabAsync(System.String,Microsoft.AspNetCore.Components.RouteData,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgAppTabContainerLayout.GoToTabAsync(Lagoon.UI.Components.Internal.LgTabRenderData)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgAppTabContainerLayout.OnPageSetTitleAsync(Lagoon.UI.Components.LgPage)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgAppTabContainerLayout.LoadStartupPages">
            <summary>
            Load the list of the pages to open when application start.
            </summary>
            <returns>The list of pages to open when application start.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgAppTabContainerLayout.AddStartupPage(System.Boolean,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Register a page to always open when application start.
            </summary>
            <param name="active">Indicate that this page will be active when application start on the root URL.</param>
            <param name="uri">URI of the page.</param>
            <param name="title">Title of the tab.</param>
            <param name="iconName">Icon name of the tab.</param>
            <param name="closable">Indicate if the tab can be closed.</param>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgCustomTab">
            <summary>
            Custom component to declare a tab.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTab.Tab">
            <summary>
            Get the state data of the tab.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTab.TabContainer">
            <summary>
            Gets or sets tab container parent
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTab.ChildContent">
            <summary>
            Gets or sets tab included in tabs container
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTab.Disabled">
            <summary>
            Gets or sets if the tab is enabled
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTab.IconName">
            <summary>
            Gets or sets icon name
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTab.Key">
            <summary>
            Gets or sets unique key
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTab.Link">
            <summary>
            Gets or sets direct link
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTab.PreloadContent">
            <summary>
            Gets or sets if tab content must be preload when created. Else tab content is load on first activation.
            if undifined, use the "PreloadTabContent" property of the parent "TabContainer".
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTab.RefreshOnActivate">
            <summary>
            Gets or sets if the tab content is reloaded when it's activate
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTab.Title">
            <summary>
            Gets or sets the title
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTab.Tooltip">
            <summary>
            Gets or sets the tooltip
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTab.Uri">
            <summary>
            Gets or sets Uri of the content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTab.UseIFrame">
            <summary>
            Gets or sets the content in an IFrame.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTab.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTab.OnInitTabData(Lagoon.UI.Components.Internal.LgTabData)">
            <summary>
            Initialise tab data from parameters.
            </summary>
            <param name="tabData">Tab state data.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTab.OnRegisterTab(Lagoon.UI.Components.Internal.LgTabRenderData)">
            <summary>
            Register the new tab pane.
            </summary>
            <param name="tab">Tab</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTab.OnUnregisterTab(Lagoon.UI.Components.Internal.LgTabRenderData)">
            <summary>
            Unregister the tab pane.
            </summary>
            <param name="tab">Tab.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTab.OnTabButtonClickAsync">
            <summary>
            Open the side tab
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTab.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgCustomTabContainer">
            <summary>
            Custom tab container
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.ApplicationInformation">
            <summary>
            Get the current application informations.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgCustomTabContainer._activeTab">
            <summary>
            Active tab
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.IsLoading">
            <summary>
            Indicate if the tab constainer is still loading is data.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.IsLoaded">
            <summary>
            Indicate if the tab constainer has loaded is data.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.TabDataUpdateState">
            <summary>
            Determines an unique identifier for each tab data changes.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.DebugState">
            <summary>
            ShowDebug informations
            </summary>
            <returns>Return debug informations.</returns>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.ChildContent">
            <summary>
            Gets or sets content of the tab container
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.ActiveTabKey">
            <summary>
            Gets or sets Active tab
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.ActiveTabKeyChanged">
            <summary>
            Allow binding on "ActiveTabKey".
            This allows the developer to manage the tab to select by manipulating the ActiveTabKey property
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.Id">
            <summary>
            Gets or sets tab container id
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.DefaultActiveTabKey">
            <summary>
            Gets or sets the tab activated by default.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.CssClass">
            <summary>
            Gets or sets css class of the tab container
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.PreloadTabContent">
            <summary>
            Gets or sets if tab contents must be preload by default.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.TooltipPosition">
            <summary>
            Tooltip position.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.DefaultLayout">
            <summary>
            Gets or sets the type of a layout to be used if the page does not declare any layout.
            If specified, the type must implement IComponent and accept a parameter named Body.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.OnActivateTab">
            <summary>
            Gets or sets event rise when tab is activated
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.OnClosingTab">
            <summary>
            Gets or sets event rise before tab is removed
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.OnCloseTab">
            <summary>
            Gets or sets event rise when tab is removed
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.ReloadEnabled">
            <summary>
            Get or sets if a new clic on the selected tab reload the tab content.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.OnRefreshHeader">
            <summary>
            Gets or sets event rise when header must be refresh
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.OnRefreshBody">
            <summary>
            Gets or sets event rise when header must be refresh
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.RouteManager">
            <summary>
            Gets or sets route manager dependency
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgCustomTabContainer.JSRuntime">
            <summary>
            Gets or sets javascript runtime dependency
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.Lagoon#UI#Components#Internal#IPageDefaultLayoutProvider#GetDefaultLayout">
            <summary>
            Return the default layout to use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.ShouldRender">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.GetLoadedTabs">
            <summary>
            Return tab list if loaded
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.OpenTabAsync(System.String,Microsoft.AspNetCore.Components.RouteData,System.Boolean)">
            <summary>
            Open component in an tab
            </summary>
            <param name="uri">URI of the page to open.</param>
            <param name="routeData">Informations to display the page.</param>
            <param name="closable">Indicate if the table is closable.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.OpenTabAsync(Lagoon.UI.Components.Internal.LgTabData,Microsoft.AspNetCore.Components.RouteData)">
            <summary>
            Add new tab used by children.
            </summary>
            <param name="tabData">Tab informations.</param>
            <param name="routeData">Informations to display the page.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.TryRegisterTabComponent(Lagoon.UI.Components.Internal.LgTabData,System.String,Microsoft.AspNetCore.Components.RouteData,Lagoon.UI.Components.Internal.LgTabRenderData@)">
            <summary>
            Register the new tab component and activate it if its necessary
            </summary>
            <param name="tabData">Tab informations.</param>
            <param name="defaultKey"></param>
            <param name="routeData">Informations to display the page.</param>
            <param name="tabRenderData"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.RegisterTabWithUri(Lagoon.UI.Components.Internal.LgTabData,Microsoft.AspNetCore.Components.RouteData)">
            <summary>
            Add new tab used by children.
            </summary>
            <param name="tabData">Tab informations.</param>
            <param name="routeData">Informations to display the page.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.TryRegisterTab(Lagoon.UI.Components.Internal.LgTabData,System.String,Microsoft.AspNetCore.Components.RouteData,Lagoon.UI.Components.Internal.LgTabRenderData@)">
            <summary>
            Add new tab used by children.
            </summary>
            <param name="tabData">Tab informations.</param>
            <param name="defaultKey">Key to use if it's can't be generated from URI.</param>
            <param name="routeData">Informations to display the page.</param>
            <param name="tabRenderData">Tab render informations.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.UnregisterTab(Lagoon.UI.Components.Internal.LgTabRenderData)">
            <summary>
            Remove the tab data from the collection.
            </summary>
            <param name="tabRenderData">Tab to remove.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.GetOpenTabsKeys">
            <summary>
            Return a list key of all opened tabs
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.GoToTabAsync(Lagoon.UI.Components.Internal.LgTabRenderData)">
            <summary>
            Ask the selection of a a specific tab.
            </summary>
            <param name="tab">Tab.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.ActivateTabAsync(System.String)">
            <summary>
            Activate tab by its key
            </summary>
            <param name="key">tab id</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.ActivateTabAsync(Lagoon.UI.Components.Internal.LgTabRenderData)">
            <summary>
            Activate the tab and refresh display.
            </summary>
            <param name="toActivateTab">Tab to activate.</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.OnTabButtonClickAsync(Lagoon.UI.Components.Internal.LgTabRenderData)">
            <summary>
            Change active tab
            </summary>
            <param name="tab">Tab.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.Lagoon#UI#Components#Internal#IPageReloader#ReloadPageAsync(Lagoon.UI.Components.LgPage,System.Boolean)">
            <summary>
            Method called when the method "Reload" is called in a LgPage.
            </summary>
            <param name="page">Page.</param>
            <param name="force">Indicate if we must bypass user confirmations.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.ReloadTabAsync(Lagoon.UI.Components.Internal.LgTabRenderData,System.Boolean)">
            <summary>
            Reload the content page in the tab.
            </summary>
            <param name="tab">Tab.</param>
            <param name="force">Bypass the OnClosingTab event.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.Lagoon#UI#Components#Internal#IPageCloser#ClosePageAsync(Lagoon.UI.Components.LgPage,System.Boolean)">
            <summary>
            Method called when the method "Close" is called in a LgPage.
            </summary>
            <param name="page">Page to close.</param>
            <param name="force">Indicate if we must bypass user confirmations.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.CloseTabAsync(Lagoon.UI.Components.Internal.LgTabRenderData,System.Boolean)">
            <summary>
            Remove tab by its id
            </summary>
            <param name="tab">Tab.</param>
            <param name="force">Bypass the OnClosingTab event.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.ExecuteAfterClosingAsync(Lagoon.UI.Components.PageClosingSourceEvent,System.Func{System.Threading.Tasks.Task},Lagoon.UI.Components.Internal.LgTabRenderData,System.Boolean)">
            <summary>
            Execute the action after the closing is confirmed.
            </summary>
            <param name="sourceEvent">Source indicator for the "OnClosing" event.</param>
            <param name="action">Action to execute.</param>
            <param name="tab">Tab selected.</param>
            <param name="force">If <c>true</c>, bypass the confirmation.</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.IsClosingConfirmedAsync(Lagoon.UI.Components.PageClosingSourceEvent,System.Func{System.Threading.Tasks.Task},Lagoon.UI.Components.Internal.LgTabRenderData,System.Boolean)">
            <summary>
            Get the tab data if the page can be closed.
            </summary>
            <param name="sourceEvent">Event source.</param>
            <param name="confirmationMethod">Method to call when the closing is confirmed.</param>
            <param name="tab">Tab.</param>
            <param name="force">Bypass the OnClosingTab event.</param>
            <returns>The tab to close.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.ReloadTab(Lagoon.UI.Components.Internal.LgTabRenderData)">
            <summary>
            Reload the content of the tab.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.PinTab(Lagoon.UI.Components.PinTabEventArgs)">
            <summary>
            Change the spin state of an tab
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.Lagoon#UI#Components#Internal#IPageTitleHandler#SetPageTitleAsync(Lagoon.UI.Components.LgPage)">
            <summary>
            Method called when page title is defined.
            </summary>
            <param name="page">Page instance.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgCustomTabContainer.OnPageSetTitleAsync(Lagoon.UI.Components.LgPage)">
            <summary>
            Method called when page title is defined.
            </summary>
            <param name="page">Page instance.</param>
            <returns><c>false</c> if the tab is not found.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgFullScreenPageContainer">
            <summary>
            Component to open URL that should not be in a tab.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgFullScreenPageContainer.RouteData">
            <summary>
            Route informations about the page to show.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgFullScreenPageContainer.Refresh(Microsoft.AspNetCore.Components.RouteData)">
            <summary>
            Raise a state has changed event.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgTabContainerBody">
            <summary>
            Tab content.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabContainerBody.AppComponent">
            <summary>
            LgApp instance.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabContainerBody.TabContainer">
            <summary>
            Gets or sets tab container
            </summary>
            <value></value>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerBody.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerBody.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerBody.ShouldRender">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerBody.OnRefresh">
            <summary>
            Called when the header need to be render.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerBody.GetTabPaneCssClass(Lagoon.UI.Components.Internal.LgTabRenderData)">
            <summary>
            Return the CSS classes for the tab pane.
            </summary>
            <returns>The CSS classes for the tab pane.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgTabContainerHeader">
            <summary>
            Tab container header
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Internal.LgTabContainerHeader._draggedTab">
            <summary>
            Key of the dragged tab
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabContainerHeader.TabContainer">
            <summary>
            Gets or sets tab container
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabContainerHeader.ShowTabList">
            <summary>
            Show in the toolbar, the dropdown menu of the list of openned tabs.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabContainerHeader.Toolbar">
            <summary>
            Gets or sets the frame toolbar
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabContainerHeader.AllowDragDrop">
            <summary>
            Gets or sets if the drag and drop is active
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabContainerHeader.AllowClose">
            <summary>
            Gets or sets if the closing tab is active
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabContainerHeader.OnDropTab">
            <summary>
            Drop tab event
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabContainerHeader.OnPinTab">
            <summary>
            Pin tab event
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerHeader.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerHeader.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerHeader.ShouldRender">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerHeader.OnRefresh">
            <summary>
            Called when the header need to be render.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerHeader.ChangeTabAsync(Lagoon.UI.Components.Internal.LgTabRenderData)">
            <summary>
            Rise change tab event
            </summary>
            <param name="tab">Tab.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerHeader.CloseTabAsync(Lagoon.UI.Components.Internal.LgTabRenderData)">
            <summary>
            Rise remove tab event
            </summary>
            <param name="tab">Tab.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerHeader.PinTab(System.String)">
            <summary>
            Rise pin tab event
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerHeader.IsDraggable(Lagoon.UI.Components.Internal.LgTabRenderData)">
            <summary>
            Indicate if an tab is draggable
            </summary>
            <param name="tab"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerHeader.HandleDragStart(Microsoft.AspNetCore.Components.Web.DragEventArgs,System.String)">
            <summary>
            Drag and drop start
            </summary>
            <param name="args"></param>
            <param name="key"></param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerHeader.HandleDrop(Lagoon.UI.Components.Internal.LgTabRenderData)">
            <summary>
            Drag and drop drop
            </summary>
            <param name="tab"></param>
        </member>
        <member name="T:Lagoon.UI.Components.Internal.LgTabContainerLoader">
            <summary>
            Component to load the tab list.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabContainerLoader.TabContainer">
            <summary>
            Gets or sets tab container
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabContainerLoader.ChildContent">
            <summary>
            Gets or sets content of the tab container
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerLoader.ShouldRender">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabContainerLoader.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabData.AriaLabel">
            <summary>
            Gets or sets aria label
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabData.Closable">
            <summary>
            Gets or sets if the tab is closable
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabData.Disabled">
            <summary>
            Gets or sets if the tab is enabled
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabData.Draggable">
            <summary>
            Gets or sets if the tab can be moved
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabData.IconName">
            <summary>
            Gets or sets the tab icon name.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabData.Key">
            <summary>
            Gets or sets the tab unique identifier.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabData.PanelContent">
            <summary>
            Gets or sets the tab panel content.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabData.Pinned">
            <summary>
            Gets or sets if the tab can be pinned at the begining of the tab list
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabData.PreloadContent">
            <summary>
            Gets or sets if tab content must be preload when created. Else tab content is load on first activation.
            if undifined, use the "PreloadTabContent" property of the parent "TabContainer".
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabData.RefreshOnActivate">
            <summary>
            Gets or sets if the tab content is reloaded when it's activate
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabData.Title">
            <summary>
            Gets or sets the tab title.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabData.FixedTitleAndIconName">
            <summary>
            Gets or sets if the tab title or an icon has been set without a link.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabData.Tooltip">
            <summary>
            Gets or sets the tab tooltip.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabData.Uri">
            <summary>
            Gets or sets Uri of the content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabData.UseIFrame">
            <summary>
            Gets or sets the content in an IFrame.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabData.CssClass">
            <summary>
            Get or set the Css class applied to the tab
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.ButtonElementId">
            <summary>
            DOM element ID for the tab button.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.ContentElementId">
            <summary>
            DOM element ID for the content of the tab.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.IsActive">
            <summary>
            Gets or sets if the tab is active
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.IsTabContentLoaded">
            <summary>
            Gets or sets if component must be render even if it's already rendered.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.PageIconName">
            <summary>
            Gets or sets the tab icon name initialized by the page.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.PageTitle">
            <summary>
            Gets or sets the tab title initialized by the page.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.RouteData">
            <summary>
            Route handler for the uri.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.TabData">
            <summary>
            Tab informations.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.DynamicRenderKey">
            <summary>
            Gets or sets unique key used to refresh tab
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.AriaLabel">
            <summary>
            Gets or sets aria label
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.Closable">
            <summary>
            Gets if the tab is closable
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.Disabled">
            <summary>
            Gets if the tab is enabled
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.Draggable">
            <summary>
            Gets if the tab can be moved
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.HasRoute">
            <summary>
            Gets if tab content is loaded from route.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.IconName">
            <summary>
            Gets the tab icon name.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.Key">
            <summary>
            Gets the tab unique identifier.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.PanelContent">
            <summary>
            Gets the tab panel content.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.Pinned">
            <summary>
            Gets if the tab can be pinned at the begining of the tab list
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.PreloadContent">
            <summary>
            Gets or sets if tab content must be preload when created. Else tab content is load on first activation.
            if undifined, use the "PreloadTabContent" property of the parent "TabContainer".
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.RefreshOnActivate">
            <summary>
            Gets if the tab content is reloaded when it's activate
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.Title">
            <summary>
            Gets the tab title.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.Tooltip">
            <summary>
            Get the tab tooltip.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.Uri">
            <summary>
            Gets Uri of the content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderData.UseIFrame">
            <summary>
            Gets the content in an IFrame.
            </summary>
        </member>
        <member name="E:Lagoon.UI.Components.Internal.LgTabRenderData.OnStateChanged">
            <summary>
            Event called when the tab is leaving for another tab.
            </summary>
        </member>
        <member name="E:Lagoon.UI.Components.Internal.LgTabRenderData.OnRaiseActivatedEventAsync">
            <summary>
            Event called when the tab is selected.
            </summary>
        </member>
        <member name="E:Lagoon.UI.Components.Internal.LgTabRenderData.OnRaiseClosingEventAsync">
            <summary>
            Event called when the tab is closing.
            </summary>
        </member>
        <member name="E:Lagoon.UI.Components.Internal.LgTabRenderData.OnRaiseCloseEventAsync">
            <summary>
            Event called when the tab is closed.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabRenderData.TabContentHasChanged">
            <summary>
             Notifies the tab content has changed. When applicable, this will
              cause the tab content to be re-loaded.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabRenderData.GetButtonAdditionalAttributes(System.Boolean,Lagoon.UI.Components.TooltipPosition,System.Boolean)">
            <summary>
            Return the tootip and Aria aditional attributes.
            </summary>
            <param name="ignoreAria">If <c>true</c>, the ARIA attributes aren't added.</param>
            <param name="tooltipPosition">Tooltip position.</param>
            <param name="ignoreTooltip">If <c>true</c>, the tooltip attributes aren't added.</param>
            <returns>The attribute collection.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabRenderData.GetButtonAriaAttributes(System.Boolean)">
            <summary>
            Get the list of Aria attributes to add to render.
            </summary>
            <param name="ignoreAria">If <c>true</c> the method do nothing.</param>
            <returns>The list of Aria attributes to add to render a tooltip.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabRenderData.#ctor(Lagoon.UI.Components.Internal.LgTabData)">
            <summary>
            Initialize new instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabRenderData.#ctor(System.String,System.String,Microsoft.AspNetCore.Components.RenderFragment)">
            <summary>
            Initialize new instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabRenderData.RaiseActivatedEventAsync">
            <summary>
            Methods called when the tab is activated
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabRenderData.Leave">
            <summary>
            Methods called when the tab is leaving for a new tab.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabRenderData.RaiseClosingEventAsync(Lagoon.UI.Components.PageClosingSourceEvent,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Indicate if a tab can be closed.
            </summary>
            <param name="sourceEvent">Event source of the closing event.</param>
            <param name="confirmationMethod">Method to call when the closing is confirmed.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabRenderData.RaiseCloseEventAsync">
            <summary>
            Raise the page "OnClose" event.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderDataCollection.TabsOrder">
            <summary>
            Gets or sets tabs order list
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgTabRenderDataCollection.Tabs">
            <summary>
            Gets or sets tabs list
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabRenderDataCollection.ContainsKey(System.String)">
            <summary>
            Determines whether the specified key is already registred.
            </summary>
            <param name="key">Tab key</param>
            <returns>true if the specified key is already registred.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabRenderDataCollection.GetKeys">
            <summary>
            Return a list key of all opened tabs
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabRenderDataCollection.GetTabs">
            <summary>
            Return a ordered list of tabs.
            </summary>
            <returns>A ordered list of tabs.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabRenderDataCollection.TryGet(System.String,Lagoon.UI.Components.Internal.LgTabRenderData@)">
            <summary>
            Try to retrieve the render data for tab key.
            </summary>
            <param name="key">Tab key</param>
            <param name="tabRenderData">Tab render data.    </param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabRenderDataCollection.Add(System.String,Lagoon.UI.Components.Internal.LgTabRenderData)">
            <summary>
            Add new tab in container
            </summary>
            <param name="key"></param>
            <param name="tab"></param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabRenderDataCollection.Remove(System.String)">
            <summary>
            Remove tab by its id
            </summary>
            <param name="key">Tab id</param>
        </member>
        <member name="M:Lagoon.UI.Components.Internal.LgTabRenderDataCollection.PinTab(System.String)">
            <summary>
            Change the spin state of an tab
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgToastrCustomOptions.EscapeHtml">
            <summary>
            Escape the HTML text if it's not a markup string.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgToastrErrorOptions.TimeOut">
            <summary>
            Prevent message from auto-close after delay.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Internal.LgToastrErrorOptions.ExtendedTimeOut">
            <summary>
            Prevent message from auto-close after hover.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.RedirectToLogin">
            <summary>
            Redirect to login page component
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.RedirectToLogin.ROUTE">
            <summary>
            Route for user connection.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.RedirectToLogin.NavigationManager">
            <summary>
            Navigation manager.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.RedirectToLogin.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.RedirectToLogin.Navigate(Microsoft.AspNetCore.Components.NavigationManager,System.String)">
            <summary>
            Navigate to the connect page.
            </summary>
            <param name="navigationManager"></param>
            <param name="returnUri"></param>
        </member>
        <member name="T:Lagoon.UI.Components.RedirectToLogout">
            <summary>
            Signout current user and redirect to logout page.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.RedirectToLogout.ROUTE">
            <summary>
            Route to disconnect user.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.RedirectToLogout.NavigationManager">
            <summary>
            Navigation manager.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.RedirectToLogout.LocalStorage">
            <summary>
            Browser local storage.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.RedirectToLogout.SignOutManager">
            <summary>
            Sign out session state manager.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.RedirectToLogout.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LgBanner">
            <summary>
            Banner.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBanner.Closable">
            <summary>
            Gets or sets if the banner is closable.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBanner.AdditionalAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will be applied to the
            created element.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBanner.ChildContent">
            <summary>
            Banner content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBanner.CssClass">
            <summary>
            Gets or sets the alert Class css
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBanner.Kind">
            <summary>
            Gets or sets the kind of the banner
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBanner.IconName">
            <summary>
            Gets or sets the button icon
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBanner.Show">
            <summary>
            Gets or sets modal display
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgBanner.displayBanner">
            <summary>
            Display banner
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgBanner.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.BreadcrumbTrailItem">
            <summary>
            Data to create a breadcrum trail item.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.BreadcrumbTrailItem.IconName">
            <summary>
            Gets or sets the button icon name
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.BreadcrumbTrailItem.Link">
            <summary>
            Informations to create link to specific page.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.BreadcrumbTrailItem.OnClick">
            <summary>
            Gets or sets OnClick action.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.BreadcrumbTrailItem.Text">
            <summary>
            Gets or sets the button label
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.BreadcrumbTrailItem.Uri">
            <summary>
            The page URI to open when button is clicked.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.BreadcrumbTrailItemList">
            <summary>
            List of menu item.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.BreadcrumbTrailItemList.Items">
            <summary>
            Get breadcrumb items.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.BreadcrumbTrailItemList.Add(Lagoon.UI.Components.LgPageLink)">
            <summary>
            Add a new menu item into the items collection
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.BreadcrumbTrailItemList.Add(System.String,System.String)">
            <summary>
            Add a new menu item into the items collection
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.BreadcrumbTrailItemList.AddUri(System.String,System.String,System.String)">
            <summary>
            Add a new menu item into the items collection
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.BreadcrumbTrailItemList.Add(Lagoon.UI.Components.BreadcrumbTrailItem)">
            <summary>
            Add a new menu item into the items collection
            </summary>
            <param name="item">BreadcrumbTrailItem object</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.BreadcrumbTrailItemList.AddAction(System.Action,System.String,System.String)">
            <summary>
            Add a new menu item into the items collection
            </summary>
            <param name="onClickHandler">Menu ation callback</param>
            <param name="text">Menu label</param>
            <param name="icon">Menu icon</param>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgBreadcrumbTrail">
            <summary>
            Breadcrumb component
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrail.ChildContent">
            <summary>
            Content of the breadcrumb.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrail.CssClass">
            <summary>
            CSS classes.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrail.Items">
            <summary>
            Sublist of MenuCustomItem.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrail.Data">
            <summary>
            Sublist of MenuCustomItem.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgBreadcrumbTrail.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgBreadcrumbTrailItem">
            <summary>
            Breadcrumb trail item.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrailItem.AdditionalAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will be applied to the created element.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrailItem.OnClick">
            <summary>
            Gets or sets the button Onclick eventCallback
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrailItem.ConfirmationMessage">
            <summary>
            Gets or sets the confirmation message to show before doing the action.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrailItem.CssClass">
            <summary>
            Gets or sets the CSS class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrailItem.IconName">
            <summary>
            Gets or sets the button icon name
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrailItem.IsActive">
            <summary>
            Gets or sets the BreadcrumbTrailItem object is active.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrailItem.Link">
            <summary>
            Informations to create link to specific page.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrailItem.Target">
            <summary>
            Gets or sets the target window name to navigate to.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrailItem.Text">
            <summary>
            Gets or sets the button label
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrailItem.Uri">
            <summary>
            The page URI to open when button is clicked.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrailItem.TextRendering">
            <summary>
            Text to display.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrailItem.IconNameRendering">
            <summary>
            Icon name to use.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBreadcrumbTrailItem.UriRendering">
            <summary>
            URI to use.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgBreadcrumbTrailItem.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgBreadcrumbTrailItem.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgButton">
            <summary>
            Component button.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.ButtonSizeRendering">
            <summary>
            Button size to render.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.TextRendering">
            <summary>
            Text to display.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.IconNameRendering">
            <summary>
            Icon name to use.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.AuthenticationState">
            <summary>
            Provides information about the currently authenticated user.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.ParentPolicy">
            <summary>
            Potential policies defined by an ancestor 
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.ChildContent">
            <summary>
            Button custom content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.OnClick">
            <summary>
            Gets or sets the button Onclick eventCallback
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.PreventDefault">
            <summary>
            Gets or sets the button prevent default
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.StopPropagation">
            <summary>
            Gets or sets the button stop propagation
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.Text">
            <summary>
            Gets or sets the button label
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.IconName">
            <summary>
            Gets or sets the button icon name
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.CssClass">
            <summary>
            Gets or sets the CSS class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.Tooltip">
            <summary>
            Gets or sets the tooltip.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.Kind">
            <summary>
            Gets or sets the kind of the button
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.ConfirmationMessage">
            <summary>
            Gets or sets the confirmation message to show before doing the action.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.AdditionalAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will be applied to the created element.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.Uri">
            <summary>
            The page URI to open when button is clicked.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.Url">
            <summary>
            The page URI to open when button is clicked.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.ShortcutKey">
            <summary>
            Gets or sets the character associated with CTRL that trigger the button click.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.ElementId">
            <summary>
            Gets the DOM element id.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.ButtonSize">
            <summary>
            Gets or sets the button size.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.Link">
            <summary>
            Informations to create link to specific page.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.PreventDoubleClick">
            <summary>
            Disable button when executing an action. 
            </summary>
            <value><c>true</c> by default</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.IsSubmit">
            <summary>
            Get or set if the button type is "submit".
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.TooltipPosition">
            <summary>
            Position de la bulle d'aide.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.TooltipWithShortcutKey">
            <summary>
            Gets the tooltip with Shortcut Key
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.NavigationManager">
            <summary>
            Gets or sets the navigation manager service.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.LgModal">
            <summary>
            Gets LgModal parent
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.PolicyVisible">
            <summary>
            Policy required to view the Button
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgButton.PolicyEdit">
            <summary>
            Not implemented for button
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgButton.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgButton.OnParametersSetAsync">
            <summary>
            Update policy
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgButton.ShouldRender">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgButton.GetAdditionalAttributes">
            <summary>
            Get the list of additional attributes to add to component.
            </summary>
            <returns>The list of additional attributes to add to component.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgButton.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgButton.IsDisabled">
            <summary>
            Button should be disabled if explicitly set or by a policy edit
            </summary>
            <returns>true if disabled, false otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgButton.OnClickInternalAsync">
            <summary>
            invoked when on click button
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgButton.OnKeyPressAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Capture the key pressed events.
            </summary>
            <param name="args">Key pressed informations.</param>
        </member>
        <member name="T:Lagoon.UI.Components.CalendarIndicator">
            <summary>
            Calendar indicator
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.CalendarIndicator.Id">
            <summary>
            Gets or sets range Id
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.CalendarIndicator.Label">
            <summary>
            Gets or sets range label
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.CalendarIndicator.Color">
            <summary>
            Gets or sets HTML Color code
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.CalendarIndicator.CssClass">
            <summary>
            Gets or sets Css class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.CalendarIndicator.Ranges">
            <summary>
            Ranges defined for a calendar indicator
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.CalendarIndicatorRangeCollection">
            <summary>
            Calendar indicator collection
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.CalendarIndicatorRange">
            <summary>
            Calendar indicator range definition
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.CalendarIndicatorRange.StartDate">
            <summary>
            Range start date
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.CalendarIndicatorRange.EndDate">
            <summary>
            Range end date
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.ClickDayEventArgs">
            <summary>
            Calendar day click event args.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ClickDayEventArgs.Date">
            <summary>
            Datetime 
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.ClickDayEventArgs.#ctor(Lagoon.UI.Components.WaitingContext,System.DateTime)">
            <summary>
            Initialise a new argument instance.
            </summary>
            <param name="waitingContext">Waiting context.</param>
            <param name="date">Date of the clicked day.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgCalendar">
            <summary>
            Calendar component
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCalendar.Id">
            <summary>
            Gets or sets the list view Id
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCalendar.CssClass">
            <summary>
            Gets or sets the CSS classes.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCalendar.StartDate">
            <summary>
            Gets or sets the calendar start date
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCalendar.EndDate">
            <summary>
            Gets or sets the calendar end date
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCalendar.Indicators">
            <summary>
            List of indicator which be displayed on calendar
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCalendar.DayContent">
            <summary>
            Get or seets the item template (card for example)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCalendar.OnDayClick">
            <summary>
            Gets or sets the button Onclick OnClickDayEventArgs
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgCalendar.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgCalendar.MonthsBetween(System.DateTime,System.DateTime)">
            <summary>
            Get list of month with associated year between two date
            </summary>
            <param name="startDate">Start date</param>
            <param name="endDate">End date</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgCalendar.CellClickAsync(System.DateTime)">
            <summary>
            On cell day click
            </summary>
            <param name="date">Clicked date</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgCard">
            <summary>
            LgCard component
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCard.CssClass">
            <summary>
            Gets or sets card css class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCard.ChildContent">
            <summary>
            Gets or sets child card content 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCard.OnClick">
            <summary>
            Gets or sets the card Onclick eventCallback
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCard.StopPropagation">
            <summary>
            Gets or sets the card stop propagation
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCard.Uri">
            <summary>
            Gets or sets the card uri navigation
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCard.Active">
            <summary>
            Gets or sets active card state
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCard.Tooltip">
            <summary>
            Gets or sets the tooltip.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCard.ConfirmationMessage">
            <summary>
            Gets or sets the confirmation message to show before doing the action.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgCard.ElementContentRef">
            <summary>
            Gets or sets the DOM element reference.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCard.NavigationManager">
            <summary>
            Gets or sets the navigation manager service.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgCard.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Remark ElementReference will be available only after OnAfterRender/OnAfterRenderAsync
            </summary>
            <param name="firstRender">Is it the first render for this component ?</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgCard.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgCard.OnCardClickAsync">
            <summary>
            invoked when on click card
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgCardSeparator">
            <summary>
            LgCardSeparator (vertical) component for LgCard
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCardSeparator.CssClass">
            <summary>
            Gets or sets css class
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgCardSeparator.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgColorBar">
            <summary>
            LgColorBar (left border with or without icon) component for LgCard
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColorBar.CssClass">
            <summary>
            Gets or sets css class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColorBar.Color">
            <summary>
            Gets or sets the color for color bar
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColorBar.IconName">
            <summary>
            Gets or sets the button icon name
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColorBar.Tooltip">
            <summary> 
            Gets or sets the tooltip. 
            </summary> 
        </member>
        <member name="M:Lagoon.UI.Components.LgColorBar.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.ColumnOption">
            <summary>
            Column option class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ColumnOption.ElementId">
            <summary>
            Gets the DOM element id.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ColumnOption.Key">
            <summary>
            Gets or sets column id
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ColumnOption.Title">
            <summary>
            Gets or sets title
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ColumnOption.IsRemovable">
            <summary>
            Gets or sets if the column is removable
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ColumnOption.IsVisible">
            <summary>
            Gets or sets if the column is displayed
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ColumnOption.IsMovable">
            <summary>
            Gets or sets if the column is displayed
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ColumnOption.IsFrozen">
            <summary>
            Gets or sets if the column is frozen.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgColumnOptions">
            <summary>
            Component ColumnOptions.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgColumnOptions._draggedColumn">
            <summary>
            the dragged Column
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgColumnOptions._lgModal">
            <summary>
            Lg Modal ref
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgColumnOptions._dotnetRef">
            <summary>
            DotNet object reference
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColumnOptions.Columns">
            <summary>
            Gets or sets list of columns
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColumnOptions.DisplayedColumnsByOrder">
            <summary>
            Gets or sets list of displayed Columns by order
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColumnOptions.AllowDragDrop">
            <summary>
            Gets or sets if the drag and drop is active
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColumnOptions.AllowFrozen">
            <summary>
            Gets or sets if the frozen is active
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColumnOptions.AllowVisibility">
            <summary>
            Gets or sets if the visibility managment is active
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColumnOptions.OnSave">
            <summary>
            Gets or sets on close modal event
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColumnOptions.OnClose">
            <summary>
            Gets or sets on close modal event
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColumnOptions.DisableAddButton">
            <summary>
            Return true if user cannot add column
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lagoon.UI.Components.LgColumnOptions.DisableSaveButton">
            <summary>
            Return true if user cannot save
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgColumnOptions.RemoveColumn(Lagoon.UI.Components.ColumnOption)">
            <summary>
            Remove the column
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:Lagoon.UI.Components.LgColumnOptions.FreezeColumn(Lagoon.UI.Components.ColumnOption)">
            <summary>
            Freeze the column
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:Lagoon.UI.Components.LgColumnOptions.AddColumn">
            <summary>
            Add a column
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgColumnOptions.OnColumnChange(Microsoft.AspNetCore.Components.ChangeEventArgs,Lagoon.UI.Components.ColumnOption)">
            <summary>
            On column change event
            </summary>
            <param name="args"></param>
            <param name="column"></param>
        </member>
        <member name="M:Lagoon.UI.Components.LgColumnOptions.GetAvailableColumns(Lagoon.UI.Components.ColumnOption)">
            <summary>
            Get a list of available columns
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgColumnOptions.SaveColumnOptionsAsync">
            <summary>
            Save column options
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgColumnOptions.GetItemCssClass(Lagoon.UI.Components.ColumnOption)">
            <summary>
            Get a column line CSS class.
            </summary>
            <param name="columnOption">The column.</param>
            <returns>The CSS class.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgColumnOptions.HandleDragStart(Microsoft.AspNetCore.Components.Web.DragEventArgs,Lagoon.UI.Components.ColumnOption)">
            <summary>
            Drag and drop start
            </summary>
            <param name="args"></param>
            <param name="draggedColumn"></param>
        </member>
        <member name="M:Lagoon.UI.Components.LgColumnOptions.HandleDrop(Lagoon.UI.Components.ColumnOption)">
            <summary>
            Drag and drop drop
            </summary>
            <param name="column"></param>
        </member>
        <member name="F:Lagoon.UI.Components.LgColumnOptions.columnOptionToFocus">
            <summary>
            Flag used to focus moved  column after Render
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgColumnOptions.KeyPress(System.String,System.Int32)">
            <summary>
            Invoked when user uses the keyboard shortcuts
            </summary>
            <param name="key"></param>
            <param name="colIndex"></param>
            <returns></returns>        
        </member>
        <member name="M:Lagoon.UI.Components.LgColumnOptions.KeyPressDelete(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs,Lagoon.UI.Components.ColumnOption)">
            <summary>
            Remove column on key Enter and Space
            </summary>
            <param name="args">Arguments</param>
            <param name="column">Column selected</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgColumnOptions.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgColumnOptions.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Remark ElementReference will be available only after OnAfterRender/OnAfterRenderAsync
            </summary>
            <param name="firstRender">Is it the first render for this component ?</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgColumnOptions.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgColumnOptions.ShowAsync">
            <summary>
            invoked to display modal
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.SaveColumnOptionsEventArgs">
            <summary>
            Contains save 'column options' event data.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.SaveColumnOptionsEventArgs.#ctor(System.Collections.Generic.List{Lagoon.UI.Components.ColumnOption})">
            <summary>
            Constructor
            </summary>
            <param name="displayedColumnsByOrder">list of displayed Columns by order</param>
        </member>
        <member name="P:Lagoon.UI.Components.SaveColumnOptionsEventArgs.DisplayedColumnsByOrder">
            <summary>
            Gets list of displayed Columns by order
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgCssClassBuilder">
            <summary>
            Helper to concatenate CSS classes.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgCssClassBuilder.cssClasses">
            <summary>
            The collection of CSS classes.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgCssClassBuilder.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Lagoon.UI.Components.LgCssClassBuilder"/> class.
            </summary>
            <param name="cssClasses">The collection of CSS classes to add.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgCssClassBuilder.Add(System.String[])">
            <summary>
            Add new class to class attribute.
            </summary>
            <param name="cssClasses">New CSS classes to add.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgCssClassBuilder.AddIf(System.Boolean,System.String)">
            <summary>
            Add new class to class attribute.
            </summary>
            <param name="condition">Indicate if the following classes must be added.</param>
            <param name="trueCssClass">New CSS classes to add.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgCssClassBuilder.AddIf(System.Boolean,System.String,System.String)">
            <summary>
            Add new class to class attribute.
            </summary>
            <param name="condition">Indicate if the following classes must be added.</param>
            <param name="trueCssClass">New CSS classes to add if condition is true.</param>
            <param name="falseCssClass">New CSS classes to add if condition is false.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgCssClassBuilder.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LgDropDown">
            <summary>
            Dropdown
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgDropDown._showList">
            <summary>
            Display or not the items list
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgDropDown._dotNetObjectReference">
            <summary>
            Blazor component reference
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgDropDown._showChanged">
            <summary>
            Indicate show state has changed
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgDropDown._previousReadOnly">
            <summary>
            Read only indicator
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgDropDown._hasChanged">
            <summary>
            Indicate parameter change
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDropDown.Multiple">
            <summary>
            Gets or sets if the content can select multiple item
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDropDown.Role">
            <summary>
            Gets or sets aria role
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDropDown.CssClass">
            <summary>
            Gets or sets css class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDropDown.Disabled">
            <summary>
            Gets or set disable indicator
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDropDown.ReadOnly">
            <summary>
            Gets or set read only indicator
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDropDown.Visibility">
            <summary>
            Gets or sets visibility state
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDropDown.VisibilityChanged">
            <summary>
            Gets or sets visibility state change event
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDropDown.DropDownContent">
            <summary>
            Gets or sets dropdown render content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDropDown.ControlContent">
            <summary>
            Gets or sets dropdown linked control render
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDropDown.ElementId">
            <summary>
            Gets the DOM element id.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDropDown.ElementRef">
            <summary>
            Gets or sets the DOM element reference.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgDropDown.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgDropDown.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgDropDown.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgDropDown.ToggleListAsync(System.Boolean,System.Boolean)">
            <summary>
            Change dropdown list visibility
            </summary>
            <param name="showList"></param>
            <param name="propagateChanged"></param>
            <returns></returns>        
        </member>
        <member name="M:Lagoon.UI.Components.LgDropDown.CloseDropdownAsync">
            <summary>
            Toggle items list
            </summary> 
        </member>
        <member name="M:Lagoon.UI.Components.LgDropDown.ToggleListAsync">
            <summary>
            Toggle item list
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgDropDown.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgDropDown.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LgFinder">
            <summary>
            Finder component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFinder.CssClass">
            <summary>
            Gets or sets the CSS classes.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFinder.ResultContent">
            <summary>
            Result content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFinder.FilterContent">
            <summary>
            Filter content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFinder.Title">
            <summary>
            Gets or sets the title
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFinder.ButtonResultLabel">
            <summary>
            Gets or sets the button label when the results are shown
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFinder.ButtonFilterLabel">
            <summary>
            Gets or sets the button label when the filters are shown
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFinder.TitleCssClass">
            <summary>
            Gets or sets the title css
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFinder.OnFilter">
            <summary>
            Gets or sets a callback when switch from filters to results.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgFinder.buttonLabel">
            <summary>
            Button Label
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgFinder.showFilters">
            <summary>
            Weither the filters content is shown or not
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgFinder.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgFinder.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgFinder.ToggleContentAsync">
            <summary>
            Content toggle between results and filters
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.IFormTrackerHandler">
            <summary>
            Interface to handle the modifications in FormTracker.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.IFormTrackerHandler.FormTrackerList">
            <summary>
            List of the FormTracker.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.IFormTrackerHandler.ParentFormTracker">
            <summary>
            Form tracker of the previous level.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.IFormTrackerHandler.RegisterFormTracker(Lagoon.UI.Components.LgFormTracker)">
            <summary>
            Register a new FormTracker in the FormTrackerHandler.
            </summary>
            <param name="formTracker"></param>
        </member>
        <member name="M:Lagoon.UI.Components.IFormTrackerHandler.UnregisterFormTracker(Lagoon.UI.Components.LgFormTracker)">
            <summary>
            Unregister a new FormTracker in the FormTrackerHandler.
            </summary>
            <param name="formTracker"></param>
        </member>
        <member name="M:Lagoon.UI.Components.IFormTrackerHandler.HasModification">
            <summary>
            Gets if one of the FormTracker contains a pending modification.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgEditForm">
            <summary>
            Based on branch release/5.0 --> https://github.com/dotnet/aspnetcore/blob/release/5.0/src/Components/Web/src/Forms/EditForm.cs
            Renders a form element that cascades an <see cref="P:Lagoon.UI.Components.LgEditForm.EditContext"/> to descendants.
            
            Lagoon modifications:
                - Add DataAnnotationValidator and LgValidatorSummary in the BuildRenderTree
                - DRAFT Add OnEditStateChanged event 
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgEditForm._validator">
            <summary>
            Validator to use for displaying errors message associated to 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEditForm.CssClass">
            <summary>
            Gets or sets the CSS classes.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEditForm.AdditionalAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEditForm.EditContext">
            <summary>
            Supplies the edit context explicitly. If using this parameter, do not
            also supply <see cref="P:Lagoon.UI.Components.LgEditForm.Model"/>, since the model value will be taken
            from the <see cref="P:Microsoft.AspNetCore.Components.Forms.EditContext.Model"/> property.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEditForm.Model">
            <summary>
            Specifies the top-level model object for the form. An edit context will
            be constructed for this model. If using this parameter, do not also supply
            a value for <see cref="P:Lagoon.UI.Components.LgEditForm.EditContext"/>.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEditForm.ChildContent">
            <summary>
            Specifies the content to be rendered inside this <see cref="T:Microsoft.AspNetCore.Components.Forms.EditForm"/>.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEditForm.OnSubmit">
             <summary>
             A callback that will be invoked when the form is submitted.
            
             If using this parameter, you are responsible for triggering any validation
             manually, e.g., by calling <see cref="M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate"/>.
             </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEditForm.OnValidSubmit">
            <summary>
            A callback that will be invoked when the form is submitted and the
            <see cref="P:Lagoon.UI.Components.LgEditForm.EditContext"/> is determined to be valid.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEditForm.OnInvalidSubmit">
            <summary>
            A callback that will be invoked when the form is submitted and the
            <see cref="P:Lagoon.UI.Components.LgEditForm.EditContext"/> is determined to be invalid.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEditForm.ValidationErrorMessage">
            <summary>
            If set replace the default error message (#lgEditFormValidation)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEditForm.Validator">
            <summary>
            Get the validator instance to show errors manually 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEditForm.ErrorsDisplayOptions">
            <summary>
            Get or set optionnal error display option (if not set, application configuration will be used)
            </summary>    
        </member>
        <member name="P:Lagoon.UI.Components.LgEditForm.RequiredInputDisplayMode">
            <summary>
            Get or set the display mode of mandory and optional fields
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEditForm.UseValidationComplexModel">
            <summary>
            Active a ObjectGraphDataAnnotationsValidator instead of a simple DataAnnotationsValidator (required when you have nested properties with DataAnnotation)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEditForm.FormTracker">
            <summary>
            Potential form tracker defined by an ancestor 
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.LgEditForm.IgnoreFormTracking">
            <summary>
            Ignore form from tracking modifications.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgEditForm.#ctor">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Components.Forms.EditForm"/>.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgEditForm.OnInitialized">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgEditForm.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgEditForm.OnParametersSet">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgEditForm.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgEditForm.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgEditForm.GetCascadingConfiguration">
            <summary>
            Get error display options => local => cascading => application configuration
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgEditForm.HandleSubmitAsync">
            <summary>
            Handled form submission according to context (OnSubmit || (OnValidSubmit and OnInvalidSubmit))
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgEditForm.ClearValidationMessages(System.Boolean,System.Boolean)">
            <summary>
            Clear all validation message
            </summary>
            <param name="revalidate">if true context will be validated</param>
            <param name="markAsUnmodified">if true all field will be marked as unmodified</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgEditFormConfiguration">
            <summary>
            Edit form behaviours.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEditFormConfiguration.ErrorsDisplayOptions">
            <summary>
            Gets or sets how errors are displayed in forms.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEditFormConfiguration.RequiredInputDisplayMode">
            <summary>
            Customize if required and/or optional input fields are indicated.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgFormTracker">
            <summary>
            Component used to track edit contexts modifications 
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgFormTracker._editForms">
            <summary>
            List of LgEditForm found by the FormTracker
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFormTracker.FormTrackerHandler">
            <summary>
            Handler for FormTrackers.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFormTracker.ChildContent">
            <summary>
            Get or set the CascadingPolicy content
            </summary>
            <value>Renderfragment</value>
        </member>
        <member name="M:Lagoon.UI.Components.LgFormTracker.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgFormTracker.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgFormTracker.RegisterEditForm(Lagoon.UI.Components.LgEditForm)">
            <summary>
            Add EditForm to the monitoring list.
            </summary>
            <param name="editForm">EditForm.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgFormTracker.UnregisterEditForm(Lagoon.UI.Components.LgEditForm)">
            <summary>
            Remove EditForm from the monitoring list.
            </summary>
            <param name="editForm">EditForm.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgFormTracker.IsModified">
            <summary>
            Check if one form into formtracker is modified ?
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.FilterFrameViewMoreEventArgs">
            <summary>
            "View More" action event arguments.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.FilterFrameViewMoreEventArgs.ShowViewMore">
            <summary>
            View more State 
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.FilterFrameResetEventArgs">
            <summary>
            reset filter frame event arguments.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgFilterFrame">
            <summary>
            Filter frame component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFilterFrame.ChildListViewContent">
            <summary>
            Gets or sets the frame child content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFilterFrame.ChildContentViewMore">
            <summary>
            Gets or sets the frame child content view more
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFilterFrame.OnResetFilters">
            <summary>
            Gets or sets the reset filters toolbar button action
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFilterFrame.OnViewMoreFilters">
            <summary>
            Gets or sets the reset filters toolbar button action
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgFilterFrame._showViewMore">
            <summary>
            View more state
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgFilterFrame._lblBtnViewMore">
            <summary>
            Toolbar label item 'view more'
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgFilterFrame._iconBtnViewMore">
            <summary>
            Toolbar icon item 'view more'
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgFilterFrame.RenderToolbarContent">
            <summary>
            Toolbar render
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgFilterFrame.RenderBodyContent">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgFilterFrame.GetViewMoreLabelIcon">
            <summary>
            View more button label and icon
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgFilterFrame.ResetFilters">
            <summary>
            Reset filters action
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgFilterFrame.ViewMoreFilters">
            <summary>
            View more action (toolbar)
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgFrame">
            <summary>
            Frame
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.AdditionalAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will be applied to the created element.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.Title">
            <summary>
            Gets or sets the frame title
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.IconName">
            <summary>
            Gets or sets the frame icon name
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.Toolbar">
            <summary>
            Gets or sets the frame toolbar
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.HeaderContent">
            <summary>
            Gets or sets the header (render)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.FooterContent">
            <summary>
            Gets or sets the footer(render)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.ChildContent">
            <summary>
            Gets or sets the content (render)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.SummaryContent">
            <summary>
            Gets or sets the summmary content (render)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.DefaultCollapsable">
            <summary>
            Gets or sets if the frame can be collapsed (OBSOLETE)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.Collapsable">
            <summary>
            Gets or sets if the frame can be collapsed
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.Collapsed">
            <summary>
            Gets or sets the frame state (true for collapsed)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.CollapsedChanged">
            <summary>
            Handle the binding of the frame collapsed.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.DefaultCollapsed">
            <summary>
            Gets or sets the default collapsed value for the frame
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.CssClass">
            <summary>
            Gets or sets the frame css class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.HeaderCssClass">
            <summary>
            Gets or sets the header class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.ChildCssClass">
            <summary>
            Gets or sets the child content class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.Kind">
            <summary>
            Gets or sets the kind of the frame
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.OnToggle">
            <summary>
            Event callable on toggle frame for client app
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.ShowHeader">
            <summary>
            Gets or sets the frame collapsable value
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgFrame.ButtonSize">
            <summary>
            Gets or sets the frame state (true for collapsable)
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgFrame._cssCursor">
            <summary>
            Css class for header cursor
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgFrame._tooltipTitle">
            <summary>
            Frame tooltip displayed on the "collapse" icon
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgFrame._collapseIcon">
            <summary>
            Gets or sets the arrow icon (collapse / expand icon)
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgFrame._toolbarButtonSize">
            <summary>
            Gets or sets the toolbar frame button size
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgFrame.ElementHeaderContentRef">
            <summary>
            Gets or sets the DOM element reference.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgFrame.OnInitialized">
            <summary>
            Custom frame initialisation
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgFrame.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Remark ElementReference will be available only after OnAfterRender/OnAfterRenderAsync
            </summary>
            <param name="firstRender">Is it the first render for this component ?</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgFrame.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgFrame.RenderToolbarContent">
            <summary>
            Frame Toolbar render
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgFrame.RenderHeaderContent">
            <summary>
            Frame header render
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgFrame.RenderBodyContent">
            <summary>
            Frame body render
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgFrame.RenderFooterContent">
            <summary>
            Frame footer render
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgFrame.RenderSummaryContent">
            <summary>
            Frame summary render
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgFrame.ToggleFrameAsync">
            <summary>
            Toggle frame
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgFrame.SetFrameCollapseTooltip">
            <summary>
            Return the collapse tooltip depending on the frame state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgFrame.SetIconState">
            <summary>
            Define the icon and tooltip following opening state
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.ToggleFrameEventArgs">
            <summary>
            Toggle frame event args.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ToggleFrameEventArgs.Collapsed">
            <summary>
            Gets or sets the frame is collasped value
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgGlobalSearchItem">
            <summary>
            A Global Search item.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgGlobalSearchItem.Uri">
            <summary>
            Gets or sets the Uri.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgGlobalSearchItem.Text">
            <summary>
            Gets or sets the Text.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgGlobalSearchItemCollection">
            <summary>
            A Global Search item list.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgGlobalSearchItemCollection.Add(System.String,System.String)">
            <summary>
            Add new item to the collection
            </summary>
            <param name="uri"></param>
            <param name="text"></param>
        </member>
        <member name="T:Lagoon.UI.Components.HtmlEditorOptions">
            <summary>
            HTML editor options.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.Disabled">
            <summary>
            Change the disabled state of the editor
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.Readonly">
            <summary>
            Change the readOnly state of the editor
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.TextIcons">
            <summary>
            Buttons in toolbar without SVG - only texts
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.Inline">
            <summary>
            Inline editing mode
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.Toolbar">
            <summary>
            Whether the toolbar should be shown
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.Spellcheck">
            <summary>
            Options specifies whether the editor is to have its spelling and grammar checked or not
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.Height">
            <summary>
            Set Html editor height. It automatically will add resize handle.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.AllowResizeX">
            <summary>
            Allow disable/enable horizintal resizing
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.AllowResizeY">
            <summary>
            Allow disable/enable vertical resizing
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.Language">
            <summary>
            Language by default. if `auto` language set by document.documentElement.lang 
            || (navigator.language and navigator.language.substr(0, 2))
            || (navigator.browserLanguage and navigator.browserLanguage.substr(0, 2)) || 'en'
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.Placeholder">
            <summary>
            Gets or sets the input placeholder
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.ToolbarAdaptive">
            <summary>
            Adaptative mode can cause problem inside a bootstrap tab. So disabled by default
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.AutoFocus">
            <summary>
            To disable status bar
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.ShowCharsCounter">
            <summary>
            To disable status bar
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.ShowWordsCounter">
            <summary>
            To disable status bar
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.ShowXPathInStatusbar">
            <summary>
            To disable status bar
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.HtmlEditorOptions.Buttons">
            <summary>
            The list of buttons that appear in the editor's toolbar on large places (≥ options.sizeLG). Note - this is not the width of the device, the width of the editor
            For example :  "source", "bold", "italic", "underline", "strikethrough", "eraser", "superscript", "subscript", "ul", "ol", "indent", "outdent", "left", "font", "fontsize", "paragraph", "classSpan".
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgHtmlEditor">
            <summary>
            HTML editor component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHtmlEditor.TextIcons">
            <summary>
            Replace SVG icons to text
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHtmlEditor.Inline">
            <summary>
            Inline editing mode
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHtmlEditor.Toolbar">
            <summary>
            Whether the toolbar should be shown
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHtmlEditor.Spellcheck">
            <summary>
            Options specifies whether the editor is to have its spelling and grammar checked or not
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHtmlEditor.Language">
            <summary>
            Language by default. if `auto` language set by document.documentElement.lang 
            || (navigator.language and navigator.language.substr(0, 2))
            || (navigator.browserLanguage and navigator.browserLanguage.substr(0, 2)) || 'en'
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHtmlEditor.Height">
            <summary>
            Set Html editor height. It automatically will add resize handle.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHtmlEditor.AllowResizeX">
            <summary>
            Allow disable/enable horizintal resizing
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHtmlEditor.AllowResizeY">
            <summary>
            Allow disable/enable vertical resizing
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHtmlEditor.Placeholder">
            <summary>
            Gets or sets the input placeholder
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHtmlEditor.Buttons">
            <summary>
            The list of buttons that appear in the editor's toolbar on large places (≥ options.sizeLG). Note - this is not the width of the device, the width of the editor
            For example :  "source", "bold", "italic", "underline", "strikethrough", "eraser", "superscript", "subscript", "ul", "ol", "indent", "outdent", "left", "font", "fontsize", "paragraph", "classSpan".
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHtmlEditor.OnInput">
            <summary>
            Gets or sets a callback that updates the bound value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHtmlEditor.OnChange">
            <summary>
            Gets or sets a callback that updates the bound value.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgHtmlEditor.ElementRef">
            <summary>
            Gets or sets the DOM element reference.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgHtmlEditor._elementObject">
            <summary>
            Js Object 
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgHtmlEditor.OnAfterRenderAsync(System.Boolean)">
            <summary> Remark ElementReference will be available only after OnAfterRender/OnAfterRenderAsync  </summary>
            <param name="firstRender">Is it the first render for this component ?</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgHtmlEditor.GetContentAsync">
            <summary> Get the html data from the editor  </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgHtmlEditor.TryParseValueFromString(System.String,System.String@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgHtmlEditor.OnRenderComponent(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgHtmlEditor.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgHtmlEditor.HasActiveLabel">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgHtmlEditor.OnInputAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Invoked when input content change
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgHtmlEditor.OnChangeAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Invoked when content change (lost focus)
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgHyperlink">
            <summary>
            Navigate link for the LgRouter
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHyperlink.ChildContent">
            <summary>
            Gets or sets the child content of the component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHyperlink.NavigationManager">
            <summary>
            Gets or sets the navigation manager service.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHyperlink.AdditionalAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will be added to the generated
            <c>a</c> element.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHyperlink.CssClass">
            <summary>
            Gets or sets the CSS class.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHyperlink.ConfirmationMessage">
            <summary>
            Gets or sets the confirmation message to show before doing the action.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHyperlink.Uri">
            <summary>
            Gets or sets the URI to navigate to.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHyperlink.Target">
            <summary>
            Gets or sets the target window name to navigate to.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgHyperlink.OnClick">
            <summary>
            Gets or sets the link Onclick eventCallback
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgHyperlink.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgHyperlink.OnClickInternalAsync">
            <summary>
            Invoked when link clicked
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgHyperlink.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LgNavLink">
            <summary>
            Navigate link for the LgRouter
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgNavLink.Href">
            <summary>
            Gets or sets the URI to navigate to. (Synonym of "Uri" property)
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgNavLink.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgNavLink.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgNavLink.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgNavLink.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LgIcon">
            <summary>
            Component to show icon from library.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgIcon.AdditionalAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will be applied to the created element.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgIcon.OnClick">
            <summary>
            Gets or sets the icon Onclick eventCallback
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgIcon.IconName">
            <summary>
            Gets or sets the icon name
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgIcon.CssClass">
            <summary>
            Gets or sets the icon class css
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgIcon.Tooltip">
            <summary>
            Gets or sets the icon tooltip.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgIcon.IconNameRendering">
            <summary>
            Gets or sets the icon name to be rendered.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgIcon.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgIcon.OnLanguageChangedAsync(Lagoon.UI.Components.LanguageChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgIcon.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgIcon.GetSvgUse">
            <summary>
            Gets the SVG content.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgIcon.GetSvgUse(System.String)">
            <summary>
            Return then "use" part to include into SVG node.
            </summary>
            <param name="iconName"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgIcon.OnClickInternalAsync">
            <summary>
            Handler the icon click.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgCheckBox`1">
            <summary>
            A checkbox component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBox`1.Lagoon#UI#Components#Internal#ILgCheckBox{TValue}#ElementId">
            <summary>
            Checkbox Client ID.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBox`1.Lagoon#UI#Components#Internal#ILgCheckBox{TValue}#CssClass">
            <summary>
            CssClass is already rendered by LgInputRenderBase.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBox`1.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBox`1.CheckedText">
            <summary>
            Gets or sets the checked text.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBox`1.IndeterminateText">
            <summary>
            Gets or sets the indeterminate text.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBox`1.UncheckedText">
            <summary>
            Gets or sets the unchecked text.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgCheckBox`1.stateValues">
            <summary>
            The different states values for the supported types.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgCheckBox`1.ElementRef">
            <summary>
            Gets or sets the DOM element reference.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgCheckBox`1.StateValues">
            <summary>
            The different state values.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBox`1.OnChange">
            <summary>
            Gets or sets a callback called on the OnChange event.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBox`1.AllowIndeterminateState">
            <summary>
            Gets or sets the flag specifying the use of the indeterminate attribute.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBox`1.CheckBoxKind">
            <summary>
            Gets or sets the checkbox type.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBox`1.TextPosition">
            <summary>
            Gets or sets the label's position.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBox`1.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBox`1.SetElementPropertyAsync``1(System.String,``0)">
            <summary>
            Sets a JavaScript property of the HTML element.
            </summary>
            <param name="property">The property to set.</param>
            <param name="value">The value of the property.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBox`1.OnValueChangeAsync">
            <summary>
            Invoked when the value is changed.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBox`1.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBox`1.OnRenderComponent(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBox`1.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBox`1.HasActiveLabel">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBox`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LgCheckBoxList`1">
            <summary>
            A checkbox list component.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgCheckBoxList`1._items">
            <summary>
            The collection of items.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBoxList`1.CheckBoxKind">
            <summary>
            Gets or sets the checkbox type.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBoxList`1.TextPosition">
            <summary>
            Gets or sets the label's position.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBoxList`1.DisplayOrientation">
            <summary>
            Gets or sets the display's orientation.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBoxList`1.Items">
            <summary>
            Gets or sets the items.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBoxList`1.AddItem(Lagoon.UI.Components.LgCheckBoxListItem{`0})">
            <summary>
            Adds an items to the collection.
            </summary>
            <param name="item">The items to add.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBoxList`1.RemoveItem(Lagoon.UI.Components.LgCheckBoxListItem{`0})">
            <summary>
            Removes an item from the collection.
            </summary>
            <param name="item">The item to remove.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBoxList`1.IsItemSelected(Lagoon.UI.Components.LgCheckBoxListItem{`0})">
            <summary>
            Tests whether an item is selected.
            </summary>
            <param name="item">The item to test.</param>
            <returns><c>true</c> if the item is selected; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBoxList`1.SelectItemAsync(Lagoon.UI.Components.LgCheckBoxListItem{`0})">
            <summary>
            Selects an item.
            </summary>
            <param name="item">The item to select.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBoxList`1.OnRenderComponent(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBoxList`1.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBoxList`1.HasActiveLabel">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBoxList`1.TryParseValueFromString(System.String,System.Collections.Generic.IEnumerable{`0}@,System.String@)">
            <inheritdoc />
        </member>
        <member name="T:Lagoon.UI.Components.LgCheckBoxListItem`1">
            <summary>
            A checkbox list item component.
            </summary>
            <typeparam name="TValue">The value's type.</typeparam>
        </member>
        <member name="F:Lagoon.UI.Components.LgCheckBoxListItem`1._checkBoxList">
            <summary>
            The reference to the checkbox list parent.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBoxListItem`1.CssClass">
            <summary>
            Gets or sets the CSS class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBoxListItem`1.Tooltip">
            <summary>
            Gets or sets the tooltip.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBoxListItem`1.ElementId">
            <summary>
            Gets the DOM element id.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBoxListItem`1.Lagoon#UI#Components#Internal#ILgCheckBox{TValue}#ElementId">
            <summary>
            Gets the identifier.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBoxListItem`1.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBoxListItem`1.CheckedText">
            <summary>
            Gets or sets the checked text.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBoxListItem`1.IndeterminateText">
            <summary>
            Gets or sets the indeterminate text.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBoxListItem`1.UncheckedText">
            <summary>
            Gets or sets the unchecked text.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBoxListItem`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBoxListItem`1.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCheckBoxListItem`1.CheckBoxList">
            <summary>
            Gets or sets the reference to the parent's checkbox list.
            </summary>
            <remarks>Serves as an entrypoint to the registration of the component in the parent's items collection.</remarks>
        </member>
        <member name="M:Lagoon.UI.Components.LgCheckBoxListItem`1.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Lagoon.UI.Components.LgColorPickerBox">
            <summary>
            ColorPickerBox Component
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColorPickerBox.Palette">
            <summary>
            Palette of availlabled colors.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColorPickerBox.ShowInput">
            <summary>
            Show input if true
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColorPickerBox.OnChange">
            <summary>
            Gets or sets a callback that updates the bound value.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgColorPickerBox.OnRenderComponent(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgColorPickerBox.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgColorPickerBox.HasActiveLabel">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgColorPickerBox.TryParseValueFromString(System.String,System.String@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgColorPickerBox.OpenMyColor">
            <summary>
            Open color modal
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgColorPickerBox.CloseMyColorAsync(System.String)">
            <summary>
            Close color modal
            </summary>
            <param name="value">The selected value.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgColorPickerBox.OnChangeAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            invoked when content change (lost focus)
            </summary>
            <param name="args"></param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.IFileListEntry">
            <summary>
            Describe a file from an HTMLInputElement
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.IFileListEntry.LastModified">
            <summary>
            Get or set the last modification date
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.IFileListEntry.Name">
            <summary>
            Get or set the file name
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.IFileListEntry.Size">
            <summary>
            Get or set the file size
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.IFileListEntry.Type">
            <summary>
            Get or set the file content type
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.IFileListEntry.RelativePath">
            <summary>
            Get or set the original file path
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.IFileListEntry.Data">
            <summary>
            Access to the underlying file stream
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.IFileListEntry.ToImageFileAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Create a new file as image with the specified format and dimension
            </summary>
            <param name="format">Content Type</param>
            <param name="maxWidth">Desired max width</param>
            <param name="maxHeight">Desired max height</param>
            <returns>A new file entry as image</returns>
        </member>
        <member name="M:Lagoon.UI.Components.IFileListEntry.ToBlobUrl">
            <summary>
            Create a local blob url for this file entry
            </summary>
            <returns></returns>
        </member>
        <member name="E:Lagoon.UI.Components.IFileListEntry.OnDataRead">
            <summary>
            Event fired when data are readed
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgInputFile">
            <summary>
            A file input component.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgInputFile.State.ReadyToUpload">
            <summary>
            The component is ready to upload files
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgInputFile.State.Uploading">
            <summary>
            Upload in progress
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgInputFile.State.Error">
            <summary>
            An error occured while uploading selected files
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.AcceptAttribute">
            <summary>
            Gets the accept attribute that will be passed through to the input html element.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.IsDraggedOver">
            <summary>
            The flag defining if something is currently dragged over the zone.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgInputFile._state">
            <summary>
            Track component state
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgInputFile.currentProgress">
            <summary>
            The current progress.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgInputFile.progressKind">
            <summary>
            The kind of progress bar.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgInputFile._baseInputFile">
            <summary>
            The InputFile component used by this component
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgInputFile.dotnetRef">
            <summary>
            This component reference used by JS to incoke C#
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgInputFile._selectedFiles">
            <summary>
            The collection of selected files.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgInputFile._linkedFiles">
            <summary>
            List of file which can be downloaded / deleted
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgInputFile._progressionLabel">
            <summary>
            The progression label used when upload in progress
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgInputFile._downloadInProgress">
            <summary>
            To track file download progression
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.InstructionMessage">
            <summary>
            Gets the instruction message.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.IAccessTokenProvider">
            <summary>
            Used to retireve the bearer token to use in the POST request
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.ElementId">
            <summary>
            Gets the DOM element identifier.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.CssClass">
            <summary>
            Gets or sets the CSS class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.UploadUri">
            <summary>
            Gets or sets the upload URL endpoint.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.LinkedFilesUri">
            <summary>
            Gets or sets the linkef files URL.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.FileListLabel">
            <summary>
            Get or set the text used before the file list (default is lgFileUploadLinkedFileList dictionnary key)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.AllowMultipleFiles">
            <summary>
            Gets or sets the flag allowing multiple files upload.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.AllowDirectories">
            <summary>
            Gets or sets the flag allowing the directories' selection.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.AllowedFileExtensions">
            <summary>
            Gets or sets a list of allowed file extensions.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.AllowedFileTypes">
            <summary>
            Gets or sets a list of allowed file types.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.ShowFileList">
            <summary>
            Gets or sets the flag used to display the file list.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.FileCardTemplate">
            <summary>
            Gets or sets the file card template used to display selected files to upload.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.MaxUploadSize">
            <summary>
            Gets or sets the maximum total size in bytes for a each upload.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.ActionMessage">
            <summary>
            Gets or sets the action message.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.DragAndDropMessage">
            <summary>
            Gets or sets the drag and drop message.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.DropMessage">
            <summary>
            Gets or sets the drop message.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.Label">
            <summary>
            Gets or sets the label.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.LabelContent">
            <summary>
            Gets or sets the render fragment to customize the label.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.UploadingMessage">
            <summary>
            Gets or sets the uploading message.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.UploadedSuccessMessage">
            <summary>
            Gets or sets the uploaded message for success.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.UploadedFailureMessage">
            <summary>
            Gets or sets the uploaded message for failure.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.OnChange">
            <summary>
            Gets or sets the onchange event callback.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.OnUploadComplete">
            <summary>
            Event fired when file are successfully uploaded to the server
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.OnDeleteComplete">
            <summary>
            Event fired when a file is successfully deleted from the server
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.OnErrorHandling">
            <summary>
            Event fired when an error occurs when file are uploaded
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.UploadMode">
            <summary>
            Upload behavior (default is Automatic). <see cref="P:Lagoon.UI.Components.LgInputFile.UploadMode" /> enum.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.Authenticate">
            <summary>
            If set to true (the default) then the POST request will integrate the authorization header with a bearer token. 
            If false no authorization header will be sent.
            </summary>
            <remarks>
            If you don't handle the <see cref="P:Lagoon.UI.Components.LgInputFile.OnTokenRequested"/>, the token will be retrived with an <see cref="P:Lagoon.UI.Components.LgInputFile.IAccessTokenProvider"/>
            </remarks>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.OnTokenRequested">
            <summary>
            Get or set a callback to provide a token to used in the http request authorization header
            </summary>
            <remarks>
            Only called if <see cref="P:Lagoon.UI.Components.LgInputFile.Authenticate"/> is set to <c>true</c>
            </remarks>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.ShowUploadSpeed">
            <summary>
            Get or set the flag used to display upload speed progression
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputFile.ShowUpload">
            <summary>
            Get or set the flag used to active / desactive the upload functionnality
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.OnInitialized">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.OnInitializedAsync">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.UploadProgressionAsync(System.Int32,System.Int32)">
            <summary>
            Upload progression callback
            </summary>
            <param name="progression">Progression in %</param>
            <param name="bytesPerSecond">Progression speed</param>
            <returns>Task</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.DownloadProgressionAsync(System.String,System.Int32)">
            <summary>
            Upload progression callback
            </summary>
            <param name="fileId">File identifier</param>
            <param name="progression">Download progression (%)</param>
            <returns>Task</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.UploadCompleteAsync">
            <summary>
            Upload complete callback
            </summary>
            <returns>Task</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.UploadFailedAsync(System.Int32,System.String,System.Boolean)">
            <summary>
            Upload/Download failed callback
            </summary>
            <param name="statusCode">HttpStatusCode</param>
            <param name="errorMessage">Raw server response</param>
            <param name="download">false if upload, true if download</param>
            <returns>Task</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.DoUploadAsync">
            <summary>
            Start to upload selected files
            </summary>
            <returns><c>true</c> if files successfully uploaded, <c>false</c> if no file selected or upload cancelled or upload failed</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.CancelUploadAsync">
            <summary>
            Cancels an upload and reset files selection
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.RefreshFilesListAsync">
            <summary>
            Load the list of file attached
            </summary>
            <returns>Task</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.GetTotalSizeToUpload">
            <summary>
            Compute the size of the POST
            </summary>
            <returns>Sum of selected file size</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.CheckUploadSize">
            <summary>
            Return true if the size of all selected file is under the <see cref="P:Lagoon.UI.Components.LgInputFile.MaxUploadSize"/>
            </summary>
            <returns>true if under <see cref="P:Lagoon.UI.Components.LgInputFile.MaxUploadSize"/>, false otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.HandleSelectionAsync(Lagoon.UI.Components.IFileListEntry[])">
            <summary>
            Handles the selection of file.
            </summary>
            <param name="files">The collection of files.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.RemoveFileAsync(Lagoon.UI.Components.IFileListEntry)">
            <summary>
            Removes the specified file.
            </summary>
            <param name="file">The file to remove.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.DownloadFileListAsync">
            <summary>
            Download the linked file list if a <see cref="P:Lagoon.UI.Components.LgInputFile.UploadUri"/> is provided
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.SendDeleteFileRequestAsync(Lagoon.UI.Components.LinkedFile)">
            <summary>
            Send a delete request to the LinkedFilesUrl 
            </summary>
            <param name="file">File to delete</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.SendDownloadFileRequestAsync(Lagoon.UI.Components.LinkedFile)">
            <summary>
            Start to download a dile
            </summary>
            <param name="file">File to download</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.CancelDownload(Lagoon.UI.Components.LinkedFile)">
            <summary>
            Cancel the download
            </summary>
            <param name="file">File for which we want to abort the download</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.GetTokenAsync">
            <summary>
            If <see cref="P:Lagoon.UI.Components.LgInputFile.Authenticate"/> is set to true a token must be sent with all http request
            </summary>
            <returns>A token or null if no Authentication</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputFile.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Lagoon.UI.Components.LgInputRadio`1">
            <summary>
            Input radio component.
            </summary>
            <typeparam name="TValue">Values type.</typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadio`1.AdditionalAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will be applied to the input element.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadio`1.Value">
            <summary>
            Gets or sets the value of this input.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadio`1.Name">
            <summary>
            Gets or sets the name of the parent input radio group.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadio`1.Text">
            <summary>
            Gets or sets the radio button label
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadio`1.Disabled">
            <summary>
            Gets or sets the input disabled attribute
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadio`1.CssClass">
            <summary>
            Gets or sets the radio button Class css
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadio`1.Tooltip">
            <summary>
            Gets or sets the tooltip.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadio`1.ElementId">
            <summary>
            Gets the DOM element id.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadio`1.ChildContent">
            <summary>
             Gets or sets the radio button label content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadio`1.Context">
            <summary>
            Gets context for this <see cref="T:Lagoon.UI.Components.LgInputRadio`1"/>.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputRadio`1.OnParametersSet">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgInputRadio`1.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgInputRadioContext">
            <summary>
            Describes context for an <see cref="T:Lagoon.UI.Components.LgInputRadio`1"/> component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadioContext.GroupName">
            <summary>
            Gets the name of the input radio group.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadioContext.CurrentValue">
            <summary>
            Gets the current selected value in the input radio group.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadioContext.FieldClass">
            <summary>
            Gets a css class indicating the validation state of input radio elements.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadioContext.CssClass">
            <summary>
            Gets or sets the input css class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadioContext.Disabled">
            <summary>
            Gets or sets the input disabled attribute
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadioContext.DisplayOrientation">
            <summary>
            Display Orientation
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadioContext.DisplayKind">
            <summary>
            Gets or sets the radio button display kind 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadioContext.ReadOnly">
            <summary>
            Gets or sets the radio button readonly attribute
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadioContext.ChangeEventCallback">
            <summary>
            Gets the event callback to be invoked when the selected value is changed.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputRadioContext.#ctor(Lagoon.UI.Components.LgInputRadioContext,System.String,System.Object,System.String,Microsoft.AspNetCore.Components.EventCallback{Microsoft.AspNetCore.Components.ChangeEventArgs})">
            <summary>
            Instantiates a new <see cref="T:Lagoon.UI.Components.LgInputRadioContext" />.
            </summary>
            <param name="parentContext">The parent <see cref="T:Lagoon.UI.Components.LgInputRadioContext" />.</param>
            <param name="groupName">The name of the input radio group.</param>
            <param name="currentValue">The current selected value in the input radio group.</param>
            <param name="fieldClass">The css class indicating the validation state of input radio elements.</param>
            <param name="changeEventCallback">The event callback to be invoked when the selected value is changed.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputRadioContext.FindContextInAncestors(System.String)">
            <summary>
            Finds an <see cref="T:Lagoon.UI.Components.LgInputRadioContext"/> in the context's ancestors with the matching <paramref name="groupName"/>.
            </summary>
            <param name="groupName">The group name of the ancestor <see cref="T:Lagoon.UI.Components.LgInputRadioContext"/>.</param>
            <returns>The <see cref="T:Lagoon.UI.Components.LgInputRadioContext"/>, or <c>null</c> if none was found.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgInputRadioGroup`1">
            <summary>
            Groups child <see cref="T:Lagoon.UI.Components.LgInputRadio`1"/> components.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadioGroup`1.Items">
            <summary>
            Gets or sets the child content to be rendering inside the <see cref="T:Lagoon.UI.Components.LgInputRadioGroup`1"/>.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadioGroup`1.Name">
            <summary>
            Gets or sets the name of the group.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadioGroup`1.DisplayOrientation">
            <summary>
            Display Orientation
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadioGroup`1.DisplayKind">
            <summary>
            Gets or sets the radio button display kind
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgInputRadioGroup`1.OnChange">
            <summary>
            Gets or sets a callback that updates the bound value.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputRadioGroup`1.OnParametersSet">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgInputRadioGroup`1.OnRenderComponent(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgInputRadioGroup`1.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputRadioGroup`1.HasActiveLabel">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgInputRadioGroup`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <inheritdoc />
        </member>
        <member name="T:Lagoon.UI.Components.Input.Internal.IInputCommonProperties">
            <summary>
            input common properties.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.IInputCommonProperties.Label">
            <summary>
            Title zone
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.IInputCommonProperties.LabelContent">
            <summary>
            Optionnal - To allow full title customisation with a RenderFragment
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.Input.Internal.LgInputBase`1">
            <summary>
            A base class for form input components. This base class automatically
            integrates with an <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext"/>, which must be supplied
            as a cascading parameter.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.EditFormConfiguration">
            <summary>
            Optionnal cascading parameter provided by <see cref="T:Lagoon.UI.Components.LgEditForm" />
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.AuthenticationState">
            <summary>
            Provides information about the currently authenticated user.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.ParentPolicy">
            <summary>
            Potential policies defined by an ancestor
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.AdditionalAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will be applied to the created element.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.Value">
            <summary>
            Gets or sets the value of the input. This should be used with two-way binding.
            </summary>
            <example>
            @bind-Value="model.PropertyName"
            </example>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.ValueChanged">
            <summary>
            Gets or sets a callback that updates the bound value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.ValueExpression">
            <summary>
            Gets or sets an expression that identifies the bound value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.DisplayName">
            <summary>
            Gets or sets the display name for this field.
            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.AriaLabel">
            <summary>
            Gets or sets aria label
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.AriaLabelledBy">
            <summary>
            Gets or sets aria label
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.CssClass">
            <summary>
            Gets or sets the CSS class.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.Disabled">
            <summary>
            Gets or sets the input disabled attribute
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.IsValidatorEnabled">
            <summary>
            Get or set validator state
            </summary>
            <value>True by default</value>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.PolicyVisible">
            <summary>
            Policy required to view the TextBox
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.PolicyEdit">
            <summary>
            Policy required to edit the TextBox
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.ReadOnly">
            <summary>
            Gets or sets the input readonly attribute
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.Required">
            <summary>
            Get or sets if this field is mandatory. If this parameter is <c>null</c> or not defined, the
            value is extracted from the [Required] attribute on the binding property.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.Tooltip">
            <summary>
            Gets or sets the tooltip.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.EditContext">
            <summary>
            Gets the associated <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext"/>.
            This property is uninitialized if the input does not have a parent <see cref="T:Microsoft.AspNetCore.Components.Forms.EditForm"/>.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.HasValidator">
            <summary>
            Get if the component has a validator.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.FieldIdentifier">
            <summary>
            Gets the <see cref="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.FieldIdentifier"/> for the bound value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.CurrentValue">
            <summary>
            Gets or sets the current value of the input.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.CurrentValueAsString">
            <summary>
            Gets or sets the current value of the input, represented as a string.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.InputCssClass">
            <summary>
            Gets a CSS class string that combines the <c>class</c> attribute and and a string indicating
            the status of the field being edited (a combination of "modified", "valid", and "invalid").
            Derived components should typically use this value for the primary HTML element's 'class' attribute.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.IsVisible">
            <summary>
            Check if the user can edit the control according to the applied policy <see cref="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.PolicyVisible"/>
            </summary>
            <value>True if the control should be editable, false otherwise</value>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.IsRequired">
            <summary>
            True if the field binded to the control have an [Require] attribute
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputBase`1.#ctor">
            <summary>
            Constructs an instance of <see cref="T:Microsoft.AspNetCore.Components.Forms.InputBase`1"/>.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputBase`1.FormatValueAsString(`0)">
            <summary>
            Formats the value as a string. Derived classes can override this to determine the formating used for <see cref="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.CurrentValueAsString"/>.
            </summary>
            <param name="value">The value to format.</param>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputBase`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <summary>
            Parses a string to create an instance of <typeparamref name="TValue"/>. Derived classes can override this to change how
            <see cref="P:Lagoon.UI.Components.Input.Internal.LgInputBase`1.CurrentValueAsString"/> interprets incoming values.
            </summary>
            <param name="value">The string value to be parsed.</param>
            <param name="result">An instance of <typeparamref name="TValue"/>.</param>
            <param name="validationErrorMessage">If the value could not be parsed, provides a validation error message.</param>
            <returns>True if the value could be parsed; otherwise false.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputBase`1.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputBase`1.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputBase`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputBase`1.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputBase`1.ConvertToDictionary(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <summary>
            Returns a dictionary with the same values as the specified <paramref name="source"/>.
            </summary>
            <returns>true, if a new dictrionary with copied values was created. false - otherwise.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputBase`1.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputBase`1.GetLabelContent(Microsoft.AspNetCore.Components.RenderFragment)">
            <summary>
            Get the content of label's custom content.
            </summary>
            <param name="labelContent">The label custom content.</param>
            <returns>The content of label's custom content.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputBase`1.GetMandatoryLabel">
            <summary>
            Return the label corresponding to the configuration
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputBase`1.RenderAccessibilityAttribute(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,System.Int32)">
            <summary>
            Add aria attribute for Rgaa support
            </summary>
            <param name="builder">RenderTreeBuilder</param>
            <param name="firstIndex">Index of the first attribute</param>
            <returns>last index value</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputBase`1.IsModelRequired">
            <summary>
            Gets if the bound property have the [Required] attribute.
            </summary>
            <returns><c>true</c> if the bound property have the [Required] attribute; <c>false</c> otherwise.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.Input.Internal.LgInputRenderBase`1">
            <summary>
            Add label management to inputbase component.
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputRenderBase`1.ElementId">
            <summary>
            Gets the DOM element id.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputRenderBase`1.Label">
            <summary>
            Get or set the label
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Input.Internal.LgInputRenderBase`1.LabelContent">
            <summary>
            Get or set the render fragment to customize the label part
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputRenderBase`1.OnRenderComponent(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            Children render
            </summary>
            <param name="builder">RenderTreeBuilder to use to create children component</param>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputRenderBase`1.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            Build a basic structure for children component with :
            - Title
            - ChildrenContent
            - Validator
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputRenderBase`1.HasActiveLabel">
            <summary>
            Check if label must have lblActive class
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputRenderBase`1.HasLabel">
            <summary>
            Check if label must have lbl value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Input.Internal.LgInputRenderBase`1.GetLabelClassAttribute">
            <summary>
            Get label css class
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgDateBox`1">
            <summary>
            Component used to display / modify date type
            </summary>
            <typeparam name="TValue">Must be a DateTime (or DateTime?)</typeparam>
        </member>
        <member name="F:Lagoon.UI.Components.LgDateBox`1.C_S_DATE_FORMAT">
            <summary>
            Date format CurrentValue
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgDateBox`1.C_S_DATE_FORMAT_JS">
            <summary>
            Dateformat  for datepicker librairy
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDateBox`1.DisplayFormat">
            <summary>
            Gets or sets complete input format
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDateBox`1.OnFocus">
            <summary>
            Gets or sets a callback called on the onfocus event.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDateBox`1.OnChange">
            <summary>
            Gets or sets a callback called on the onfocus event.
            </summary>s
        </member>
        <member name="P:Lagoon.UI.Components.LgDateBox`1.Placeholder">
            <summary>
            Gets or sets the input placeholder
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDateBox`1.Max">
            <summary>
            Gets or sets the latest date that may be selected; all later dates will be disabled.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDateBox`1.Min">
            <summary>
            Gets or sets the earliest date that may be selected; all earlier dates will be disabled.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDateBox`1.IsMonthPicker">
            <summary>
            Gets or sets the earliest date that may be selected; all earlier dates will be disabled.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgDateBox`1.DateDisplayFormat">
            <summary>
            Date format for display
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgDateBox`1.DatePickerFormat">
            <summary>
            Datepickerformat attempt
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgDateBox`1.ElementRef">
            <summary>
            Gets or sets the DOM element reference.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDateBox`1.DisplayValueAsString">
            <summary>
            Display value into input.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgDateBox`1._dotNetObjRef">
            <summary>
            Allow c# invokation by JS for the current instance (onChange event is handled by DatePicker)
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgDateBox`1._currentValueAsString">
            <summary>
            Used to detect if the date has been changed directly by the developper without using the datebox ui
            (bind value updated directly)
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgDateBox`1.OnInitialized">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgDateBox`1.OnAfterRenderAsync(System.Boolean)">
            <summary> 
            Remark ElementReference will be available only after OnAfterRender/OnAfterRenderAsync  
            </summary>
            <param name="firstRender">Is it the first render for this component ?</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgDateBox`1.OnRenderComponent(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgDateBox`1.HasActiveLabel">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgDateBox`1.FormatValueAsString(`0)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgDateBox`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgDateBox`1.TryParseDateTime(System.String,`0@)">
            <summary>
            String to DateTime
            </summary>
            <param name="value">String value</param>
            <param name="result">Parsed DateTime value</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgDateBox`1.TryParseDateTimeOffset(System.String,`0@)">
            <summary>
            String to DateTimeOffset
            </summary>
            <param name="value">String value</param>
            <param name="result">Parsed DateTimeOffset value</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgDateBox`1.ClearFormatMonthPicker">
            <summary>
            Clear Diplay format and Datepicker format for month picker
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgDateBox`1.OnLanguageChangedAsync(Lagoon.UI.Components.LanguageChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgDateBox`1.SetDateBoxValueAsync(System.String)">
            <summary>
            Call from LgDateBox.js : get onchange value
            </summary>
            <param name="value">filled value</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgDateBox`1.OnChangeAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Invoked when user fill value without using datepicker
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgDateBox`1.OnFocusAsync(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Invoked when user focus the input
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgDateBox`1.Dispose(System.Boolean)">
            <summary>
            Free event handler(s)
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgNumericBox`1">
            <summary>
            Numeric input box component.
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.LgNumericBox`1.ParsingErrorMessage">
            <summary>
            Gets or sets the error message used when displaying an a parsing error.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgNumericBox`1.OnInput">
            <summary>
            Gets or sets a callback that updates the bound value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgNumericBox`1.OnChange">
            <summary>
            Gets or sets a callback that updates the bound value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgNumericBox`1.OnFocus">
            <summary>
            Gets or sets a callback called on the onfocus event.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgNumericBox`1.OnKey">
            <summary>
            Gets or sets a callback called on the onkey event.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgNumericBox`1.Decimals">
            <summary>
            Gets or sets decimals number input format.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgNumericBox`1.ThousandsSeparator">
            <summary>
            Gets or sets thousands separator input format
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgNumericBox`1.DisplayFormat">
            <summary>
            Gets or sets complete input format
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgNumericBox`1.Placeholder">
            <summary>
            Gets or sets the input placeholder
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgNumericBox`1.Prefix">
            <summary>
            Gets or sets the input prefix.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgNumericBox`1.PrefixType">
            <summary>
            Indicate if prefix is simple text or icon from library.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgNumericBox`1.Suffix">
            <summary>
            Gets or sets the input suffix.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgNumericBox`1.SuffixType">
            <summary>
            Indicate if suffix is simple text or icon from library.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgNumericBox`1.ElementRef">
            <summary>
            Gets or sets the DOM element reference.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgNumericBox`1.OnInitialized">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgNumericBox`1.OnRenderComponent(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgNumericBox`1.HasActiveLabel">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgNumericBox`1.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgNumericBox`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgNumericBox`1.FormatValueAsString(`0)">
            <summary>
            Formats the value as a string. Derived classes can override this to determine the formating used for <c>CurrentValueAsString</c>.
            </summary>
            <param name="value">The value to format.</param>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgNumericBox`1.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgNumericBox`1.OnInputAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Invoked when input content change
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgNumericBox`1.OnChangeAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Invoked when content change (lost focus)
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgNumericBox`1.OnFocusAsync(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Invoked when user focus the input
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgNumericBox`1.OnKeyAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Invoked when user key up into the input
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgTagBox">
            <summary>
            Component to input a list of text values.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgTagBox._reload">
            <summary>
            Reload Tagbox if true
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgTagBox._disposeJS">
            <summary>
            Dispose JS indicator
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgTagBox._currentValue">
            <summary>
            Current value list in string format
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgTagBox._oldValue">
            <summary>
            Old value
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTagBox.Placeholder">
            <summary>
            Gets or sets the select placeholder
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTagBox.TagCssClass">
            <summary>
            Gets or sets the tag CssClass (default : "label label-info")
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTagBox.MaxTags">
            <summary>
            When set, no more than the given number of tags are allowed to add (default: undefined). When maxTags is reached, a class 'bootstrap-tagsinput-max' is placed on the tagsinput element.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTagBox.MaxChars">
            <summary>
            Defines the maximum length of a single tag. (default: undefined)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTagBox.ConfirmKeys">
            <summary>
            Array of keycodes which will add a tag when typing in the input. (default: [13, 59, 44], which are ENTER, semicolon and comma).
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTagBox.Delimiter">
            <summary>
            delimeter used to join values. (default: comma)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTagBox.AllowDuplicates">
            <summary>
            When true, the same tag can be added multiple times. (default: false)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTagBox.NoWrap">
            <summary>
            When true, the input height is fixed. If there is more value tag than possible to display, an horizontal scroll bar is displayed in the tagbox.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgTagBox._dotNetObjRef">
            <summary>
            DotNet Object reference
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTagBox.OnChange">
            <summary>
            Gets or sets a callback when lost focus.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTagBox.InputMaskKind">
            <summary>
            Gets or sets the input mask kind
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTagBox.InputMask">
            <summary>
            Gets or sets the input mask
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTagBox.InputMaskPlaceholder">
            <summary>
            Gets or sets the input mask
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTagBox.AutoUnmask">
            <summary>
            Get or set the flag indicating if value should be returned without the mask.
            </summary>
            <example> phone number with mask '06-05-06-07-08' will ne returned as '0605060708' if <c>AutoUnmask</c> is set to <c>true</c></example>
            <value><c>false</c> by default</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgTagBox.ClearIncomplete">
            <summary>
            Get or set the flag indicating if value should be clear if mask is incomplete.
            </summary>
            <example> phone number with mask '06-05-06-07-' will ne returned as '' if <c>ClearIncomplete</c> is set to <c>true</c></example>
            <value><c>false</c> by default</value>
        </member>
        <member name="M:Lagoon.UI.Components.LgTagBox.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgTagBox.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgTagBox.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgTagBox.OnAfterRenderAsync(System.Boolean)">
            <summary> 
            Remark ElementReference will be available only after OnAfterRender/OnAfterRenderAsync  
            </summary>
            <param name="firstRender">Is it the first render for this component ?</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgTagBox.OnRenderComponent(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgTagBox.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgTagBox.TryParseValueFromString(System.String,System.Collections.Generic.List{System.String}@,System.String@)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgTagBox.OnValueChangeAsync(System.Collections.Generic.List{System.String})">
            <summary>
            Invoked from JS when the value is changed.
            </summary>
            <param name="value">The tag box value</param>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgTextBox">
            <summary>
            Input text box component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.DataList">
            <summary>
            Gets or sets the datalist
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.OnInput">
            <summary>
            Gets or sets a callback that updates the bound value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.OnChange">
            <summary>
            Gets or sets a callback that updates the bound value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.OnFocus">
            <summary>
            Gets or sets a callback called on the onfocus event.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.OnKeyUp">
            <summary>
            Gets or sets a callback called on the onkey event.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.InputMask">
            <summary>
            Gets or sets the input mask
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.InputMaskKind">
            <summary>
            Gets or sets the input mask kind
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.InputMaskPlaceholder">
            <summary>
            Gets or sets the input mask
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.AutoUnmask">
            <summary>
            Get or set the flag indicating if value should be returned without the mask.
            </summary>
            <example> phone number with mask '06-05-06-07-08' will ne returned as '0605060708' if <c>AutoUnmask</c> is set to <c>true</c></example>
            <value><c>false</c> by default</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.ClearIncomplete">
            <summary>
            Get or set the flag indicating if value should be clear if mask is incomplete.
            </summary>
            <example> phone number with mask '06-05-06-07-' will ne returned as '' if <c>ClearIncomplete</c> is set to <c>true</c></example>
            <value><c>false</c> by default</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.TextMode">
            <summary>
            Gets or sets input text mode.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.Placeholder">
            <summary>
            Gets or sets the input placeholder
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.Prefix">
            <summary>
            Gets or sets the input prefix.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.PrefixType">
            <summary>
            Indicate if prefix is simple text or icon from library.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.Suffix">
            <summary>
            Gets or sets the input suffix.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.SuffixType">
            <summary>
            Indicate if suffix is simple text or icon from library.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTextBox.DatalistId">
            <summary>
            Gets the Datalist id.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgTextBox.ElementRef">
            <summary>
            Gets or sets the DOM element reference.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgTextBox._dotNetObjRef">
            <summary>
            Allow c# invokation by JS for the current instance (onChange event is handled by DatePicker)
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgTextBox.OnInitialized">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgTextBox.OnAfterRenderAsync(System.Boolean)">
            <summary> Remark ElementReference will be available only after OnAfterRender/OnAfterRenderAsync  </summary>
            <param name="firstRender">Is it the first render for this component ?</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgTextBox.OnRenderComponent(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            Component rendering
            </summary>
            <param name="builder">Component builder</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgTextBox.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgTextBox.OnInputAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Invoked when input content change
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgTextBox.OnJsOnCompleteInputMaskAsync(System.String)">
            <summary>
            Invoked by js when inputmask is in use
            For input event
            </summary>
            <param name="value">New value</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgTextBox.OnJsChangeAsync(System.String)">
            <summary>
            Invoked by js when inputmask is in use
            </summary>
            <param name="value">New value</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgTextBox.OnChangeAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            invoked when content change (lost focus)
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgTextBox.OnFocusAsync(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Invoked when user focus the input
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgTextBox.OnKeyUpAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Invoked when user key up into the input
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgTextBox.HasActiveLabel">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgTextBox.TryParseValueFromString(System.String,System.String@,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgTextBox.Dispose(System.Boolean)">
            <summary>
            Free resources
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Lagoon.UI.Components.LgTimeBox`1">
            <summary>
            Component used to display / modify time type
            </summary>
            <typeparam name="TValue">Must be a DateTime(?) or a TimeSpan(?)</typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.LgTimeBox`1.OnFocus">
            <summary>
            Gets or sets a callback called on the onfocus event.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTimeBox`1.OnChange">
            <summary>
            Gets or sets a callback called on change event.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTimeBox`1.IgnoreSeconds">
            <summary>
            Gets or sets ignore seconds input format
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTimeBox`1.Placeholder">
            <summary>
            Gets or sets the input placeholder
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgTimeBox`1.TimeFormat">
            <summary>
            Timme format attempt
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgTimeBox`1.ElementRef">
            <summary>
            Gets or sets the DOM element reference.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgTimeBox`1._dotNetObjRef">
            <summary>
            Allow c# invokation by JS for the current instance (onChange event is handled by DatePicker)
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgTimeBox`1.OnInitialized">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgTimeBox`1.OnRenderComponent(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgTimeBox`1.HasActiveLabel">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgTimeBox`1.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgTimeBox`1.FormatValueAsString(`0)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgTimeBox`1.TryParseValueFromString(System.String,`0@,System.String@)">
            <summary>
            Try to convert input in DateTime / TimeSpan
            </summary>
            <param name="value">Input value</param>
            <param name="result">Result typed</param>
            <param name="validationErrorMessage">Parsing error message</param>
            <returns>True if succed, false otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgTimeBox`1.TryParseDateTime(System.DateTime,System.String,`0@)">
            <summary>
            Try to convert string value into DateTime
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgTimeBox`1.TryParseTimeSpan(System.String,`0@)">
            <summary>
            Try Yo convert string value into TimeSpan
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgTimeBox`1.SetTimeBoxValueAsync(System.String)">
            <summary>
            Call from LgTimeBox.js : get ono change value
            </summary>
            <param name="value">filled value</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgTimeBox`1.OnFocusAsync(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
            <summary>
            Invoked when user focus the input
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgTimeBox`1.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Lagoon.UI.Components.AsyncListDataSource`1">
            <summary>
            Provide the list of items to fill a component.
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="T:Lagoon.UI.Components.AsyncListDataSource`2">
            <summary>
            Provide the list of items to fill a component.
            </summary>
            <typeparam name="TItem"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Lagoon.UI.Components.AsyncListDataSource`2.#ctor">
            <summary>
            New instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.AsyncListDataSource`2.OnGetItemsAsync(Lagoon.UI.Components.GetItemsAsyncEventArgs{`1})">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.AsyncListDataSource`2.GetItemsFiltredByTextAsync(Lagoon.UI.Components.GetItemsFiltredByTextAsyncEventArgs{`1})">
            <summary>
            Load the list of items corresponding to the argument filter.
            </summary>
            <param name="e">Event args.</param>
            <returns>The loaded list.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.AsyncListDataSource`2.GetItemsFiltredByValueAsync(Lagoon.UI.Components.GetItemsFiltredByValueAsyncEventArgs{`1})">
            <summary>
            Load the list of items corresponding to the values passed in event args.
            </summary>
            <param name="e">Event args.</param>
            <returns>The loaded list.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.EnumListDataSource`1">
            <summary>
            Create a data source from an Enum declaration. Use the [Display("#sample")] attribute on enumeration values
            to define the text.
            </summary>
            <typeparam name="TEnum">The enum type to use.</typeparam>
        </member>
        <member name="M:Lagoon.UI.Components.EnumListDataSource`1.#ctor">
            <summary>
            New instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.EnumListDataSource`1.GetItemValue(`0)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.NullableEnumListDataSource`1">
            <summary>
            Create a data source from an Enum declaration. Use the [Display("#sample")] attribute on enumeration values
            to define the text.
            </summary>
            <typeparam name="TEnum">The enum type to use.</typeparam>
        </member>
        <member name="M:Lagoon.UI.Components.NullableEnumListDataSource`1.#ctor">
            <summary>
            New instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.NullableEnumListDataSource`1.GetItemValue(`0)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.IListDataSource`1">
            <summary>
            Interface to get items for the LgSelect, LgSelectMultiple, ... components.
            </summary>
            <typeparam name="TItemValue">The type of component <c>Value</c> property.</typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.IListDataSource`1.HasAsyncLoading">
            <summary>
            Indicate if the item list will be from an asynchrone method or a synchrone method.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.IListDataSource`1.GetItems">
            <summary>
            Load the list of items corresponding to the argument filter.
            </summary>
            <returns>The loaded list.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.IListDataSource`1.GetItemsAsync(Lagoon.UI.Components.GetItemsAsyncEventArgs{`0})">
            <summary>
            Load the list of items corresponding to the argument filter.
            </summary>
            <param name="e">Event args.</param>
            <returns>The loaded list.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.IListDataSource`1.OnLanguageChanged(Lagoon.UI.Components.LanguageChangedEventArgs)">
            <summary>
            Method called when UI language is changed.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="T:Lagoon.UI.Components.ListDataSourceBase`2">
            <summary>
            Provide the list of items to fill a component.
            </summary>
            <typeparam name="TItem"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSourceBase`2.#ctor(System.Boolean)">
            <summary>
            New instance from an override.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ListDataSourceBase`2.DisableStartsWithAsFirstResults">
            <summary>
            Push the "StartWith" items on the top of the list after a search.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ListDataSourceBase`2.Lagoon#UI#Components#IListDataSource{TValue}#HasAsyncLoading">
            <summary>
            Indicate if the loading is asynchrone
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSourceBase`2.ValueEquals(`1,`1)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type T to compare.</param>
            <param name="y">The second object of type T to compare.</param>
            <returns>true if the specified objects are equal; otherwise, false.</returns>
            <remarks>WARNING : If ValueEquals is overide, GetValueHashCode must be override too.</remarks>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSourceBase`2.ValueGetHashCode(`1)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="obj">The System.Object for which a hash code is to be returned.</param>
            <returns>A hash code for the specified object.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSourceBase`2.OnLanguageChanged(Lagoon.UI.Components.LanguageChangedEventArgs)">
            <summary>
            Method called when UI language is changed.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSourceBase`2.GetItemList">
            <summary>
            Load the list of items corresponding to the argument filter.
            </summary>
            <returns>The loaded list.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSourceBase`2.GetItemDataListAsync(Lagoon.UI.Components.GetItemsAsyncEventArgs{`1})">
            <summary>
            Load the list of items corresponding to the argument filter.
            </summary>
            <param name="e">Event args.</param>
            <returns>The loaded list.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSourceBase`2.OnGetItemsAsync(Lagoon.UI.Components.GetItemsAsyncEventArgs{`1})">
            <summary>
            Load the list of items corresponding to the argument filter.
            </summary>
            <param name="e">Event args.</param>
            <returns>The loaded list.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSourceBase`2.ToIListItemDataEnumerable(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Wrap each value into a property reader.
            </summary>
            <param name="items">Items.</param>
            <returns>The new enumerable.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSourceBase`2.GetItemValue(`0)">
            <summary>
            Gets the value representing the item.
            </summary>
            <param name="item">The source item.</param>
            <returns>The value representing the item.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSourceBase`2.GetItemText(`0)">
            <summary>
            Gets the text representing the item.
            </summary>
            <param name="item">The source item.</param>
            <returns>The text representing the item.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSourceBase`2.GetItemDisabled(`0)">
            <summary>
            Gets if the item is disabled.
            </summary>
            <param name="item">The source item.</param>
            <returns><c>true</c> if the item is disabled.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSourceBase`2.GetItemTooltip(`0)">
            <summary>
            Gets the tooltip of the item.
            </summary>
            <param name="item">The source item.</param>
            <returns>The tooltip of the item.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSourceBase`2.GetItemCssClass(`0)">
            <summary>
            Gets the CSS classes for the item.
            </summary>
            <param name="item">The source item.</param>
            <returns>The CSS classes for the item.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSourceBase`2.GetItemIconName(`0)">
            <summary>
            Gets the icon name for the item.
            </summary>
            <param name="item">The source item.</param>
            <returns>The icon name for the item.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.ListDataSource`1">
            <summary>
            Provide the list of items to fill a component.
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSource`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            New instance from a preload item list.
            </summary>
            <param name="items">Item list.</param>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSource`1.#ctor">
            <summary>
            New instance from a preload item list.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSource`1.GetItemValue(`0)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.ListDataSource`2">
            <summary>
            Provide the list of items to fill a component.
            </summary>
            <typeparam name="TItem"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.ListDataSource`2.Items">
            <summary>
            Items of the data source.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSource`2.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            New instance from a preload item list.
            </summary>
            <param name="items">Item list.</param>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSource`2.#ctor">
            <summary>
            New instance from a preload item list.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSource`2.GetItemText(`0)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.ListDataSource`2.GetItemList">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.IListItemData`1">
            <summary>
            Interface to read informations about a list item in a list component.
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Lagoon.UI.Components.IListItemData`1.GetCssClass">
            <summary>
            Gets the CSS classes for the item.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.IListItemData`1.GetDisabled">
            <summary>
            Gets if the item is disabled.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.IListItemData`1.GetIconName">
            <summary>
            Gets the icon name for the item.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.IListItemData`1.GetText">
            <summary>
            Geth the display text for the item.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.IListItemData`1.GetTooltip">
            <summary>
            Get the tooltip for the item.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.IListItemData`1.GetValue">
            <summary>
            Get the item value.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.ISimpleListItemData`1">
            <summary>
            Simple implementation of IListItemData with only "Text" and "Value" needed.
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.ISimpleListItemData`1.GetCssClass">
            <summary>
            Gets the CSS classes for the item.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ISimpleListItemData`1.GetDisabled">
            <summary>
            Gets if the item is disabled.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ISimpleListItemData`1.GetIconName">
            <summary>
            Gets the icon name for the item.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ISimpleListItemData`1.GetTooltip">
            <summary>
            Get the tooltip for the item.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.GetItemsAsyncEventArgs`1">
            <summary>
            Event argument for the items loading.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.GetItemsAsyncEventArgs`1.UnknownValues">
            <summary>
            Values with unknown extra informations (Title, IconName, ...)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.GetItemsAsyncEventArgs`1.OnlyUnknown">
            <summary>
            Only selected values are needed.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.GetItemsAsyncEventArgs`1.SearchedText">
            <summary>
            Filter items containing the the search text.
            </summary>
            <remarks>Remark : It can't be null.</remarks>
        </member>
        <member name="P:Lagoon.UI.Components.GetItemsAsyncEventArgs`1.CancellationToken">
            <summary>
            Cancellation token.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.GetItemsAsyncEventArgs`1.Progress">
            <summary>
            The progression manager.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.GetItemsAsyncEventArgs`1.#ctor(System.Collections.Generic.List{`0},System.String,System.Threading.CancellationToken,Lagoon.Helpers.Progress)">
            <summary>
            Initilialise a new instance.
            </summary>
            <param name="unknownValues">If not null, only unknown values are needed, else the searchText value must be used.</param>
            <param name="searchText">Filter items containing the the search text.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <param name="progress">The progression manager.</param>
        </member>
        <member name="T:Lagoon.UI.Components.GetItemsFiltredByTextAsyncEventArgs`1">
            <summary>
            Event argument for the items loading.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.GetItemsFiltredByTextAsyncEventArgs`1.SearchedText">
            <summary>
            Filter items containing the the search text.
            </summary>
            <remarks>Remark : It can't be null ! When they're is no filter, the value is string.empty.</remarks>
        </member>
        <member name="P:Lagoon.UI.Components.GetItemsFiltredByTextAsyncEventArgs`1.CancellationToken">
            <summary>
            Cancellation token.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.GetItemsFiltredByTextAsyncEventArgs`1.Progress">
            <summary>
            The progression manager.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.GetItemsFiltredByTextAsyncEventArgs`1.#ctor(Lagoon.UI.Components.GetItemsAsyncEventArgs{`0})">
            <summary>
            Initilialise a new instance.
            </summary>
            <param name="e">Arguments.</param>
        </member>
        <member name="T:Lagoon.UI.Components.GetItemsFiltredByValueAsyncEventArgs`1">
            <summary>
            Event argument for the items loading.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.GetItemsFiltredByValueAsyncEventArgs`1.SearchedValues">
            <summary>
            Selected values with unknown extra informations (Title, IconName, ...)
            </summary>
            <remarks>Remark: It's cannot be null or empty !</remarks>
        </member>
        <member name="P:Lagoon.UI.Components.GetItemsFiltredByValueAsyncEventArgs`1.CancellationToken">
            <summary>
            Cancellation token.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.GetItemsFiltredByValueAsyncEventArgs`1.Progress">
            <summary>
            The progression manager.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.GetItemsFiltredByValueAsyncEventArgs`1.#ctor(Lagoon.UI.Components.GetItemsAsyncEventArgs{`0})">
            <summary>
            Initilialise a new instance.
            </summary>
            <param name="e">Arguments.</param>
        </member>
        <member name="T:Lagoon.UI.Components.FilterChangeEventArgs">
            <summary>
            Describe the event raised when user type text into search zone in LgSelect
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.FilterChangeEventArgs.CancellationToken">
            <summary>
            The cancellation token.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.FilterChangeEventArgs.Progress">
            <summary>
            The loading progression.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.FilterChangeEventArgs.SearchText">
            <summary>
            The text to use as filter.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.FilterChangeEventArgs.Value">
            <summary>
            Alias to SearchText property.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.FilterChangeEventArgs.#ctor(System.String,System.Threading.CancellationToken,Lagoon.Helpers.Progress)">
            <summary>
            New instance.
            </summary>
            <param name="searchText">The text to use as filter.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <param name="progress">The loading progression.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgOptionListItem`1">
            <summary>
            A checkbox list item component.
            </summary>
            <typeparam name="TItemValue">The value's type.</typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.LgOptionListItem`1.Text">
            <summary>
            Gets or sets the option label.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgOptionListItem`1.Value">
            <summary>
            Gets or sets the option value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgOptionListItem`1.Disabled">
            <summary>
            Gets or sets the disabled attribute.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgOptionListItem`1.IconName">
            <summary>
            Gets or sets the option icon.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgOptionListItem`1.Tooltip">
            <summary>
            Gets or sets the tooltip
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgOptionListItem`1.CssClass">
            <summary>
            Gets or sets the option element Class css
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgOptionListItem`1.ChildContent">
            <summary>
            Gets or sets the option element Class css
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgOptionListItem`1.ILgSelect">
            <summary>
            Get LgSelect interface
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgOptionListItem`1.SelectionGuid">
            <summary>
            Guid to force OnParameterSet and update the selection.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgOptionListItem`1.IsSelected">
            <summary>
            Gets if the current option is selected.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgOptionListItem`1.OptionId">
            <summary>
            Gets or sets the option element Id
            </summary>        
        </member>
        <member name="M:Lagoon.UI.Components.LgOptionListItem`1.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgOptionListItem`1.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgOptionListItem`1.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgOptionListItem`1.Refresh">
            <summary>
            Force resfresh 
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgOptionListItem`1.IsVisible">
            <summary>
            Item is visible into dropdown
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgOptionListItem`1.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgOptionListItem`1.OnSelectOptionAsync">
            <summary>
            Invoked when on click item
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgSelectConfiguration">
            <summary>
            Configuration LgSelect and LgSelectMultiple options
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSelectConfiguration.HideAlwaysResetButton">
            <summary>
            Display or not the reset button
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSelectConfiguration.ResetText">
            <summary>
            Text for reset Button
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSelectConfiguration.ResetTextAriaLabel">
            <summary>
            Aria label associeted to reset button
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgSelectMultiple`1">
            <summary>
            A select multiple component.
            </summary>
            <typeparam name="TValue">Type of value</typeparam>
        </member>
        <member name="F:Lagoon.UI.Components.LgSelectMultiple`1._selectedItemsData">
            <summary>
            Additional informations about the last selecte values.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgSelectMultiple`1._lastValue">
            <summary>
            Value available the last time the list was openned.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgSelectMultiple`1._selectionCounter">
            <summary>
            Gets the number of selected and unselected items in the list.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSelectMultiple`1.OnItemClick">
            <summary>
            Fire when the user click on an item
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.LgSelectMultiple`1.OnItemRemove">
            <summary>
            Fire when the user remove an item
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.LgSelectMultiple`1.HasCheckBoxes">
            <inheritdoc/>
        </member>
        <member name="P:Lagoon.UI.Components.LgSelectMultiple`1.ReadOnlyAsBubble">
            <inheritdoc/>
        </member>
        <member name="P:Lagoon.UI.Components.LgSelectMultiple`1.Multiple">
            <inheritdoc/>
        </member>
        <member name="P:Lagoon.UI.Components.LgSelectMultiple`1.SelectAllManager">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectMultiple`1.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectMultiple`1.OnInitItemSelection(Lagoon.UI.Components.LgOptionListItem{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectMultiple`1.KeepItemData(Lagoon.UI.Components.IListItemData{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectMultiple`1.OnGetSelectionGuid(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectMultiple`1.GetUnknownValues">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectMultiple`1.OnAddItem(Lagoon.UI.Components.LgOptionListItem{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectMultiple`1.OnUpdateItem(Lagoon.UI.Components.LgOptionListItem{`0},`0,`0)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectMultiple`1.OnRemoveItem(Lagoon.UI.Components.LgOptionListItem{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectMultiple`1.OnSelectItemAsync(Lagoon.UI.Components.LgOptionListItem{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectMultiple`1.IsDropdownItemVisible(Lagoon.UI.Components.LgOptionListItem{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectMultiple`1.OnClickItemAsync(Lagoon.UI.Components.OptionEventArgs{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectMultiple`1.OnValueChangeAsync">
            <summary>
            Update selected value
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectMultiple`1.OnRemoveItemAsync(`0)">
            <summary>
            Remove an item from the selection
            </summary>
            <param name="value">selected value</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectMultiple`1.OnResetValueAsync">
            <summary>
            Clear field - remove all selected values
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectMultiple`1.ChangeSelectionAsync(System.Collections.Generic.IEnumerable{Lagoon.UI.Components.LgOptionListItem{`0}},System.Boolean)">
            <summary>
            Change the selection state for the item list.
            </summary>
            <param name="optionItems">List of items to update.</param>
            <param name="select">The new selection state</param>
        </member>
        <member name="T:Lagoon.UI.Components.OptionEventArgs`1">
            <summary>
            Select Option change
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.OptionEventArgs`1.Value">
            <summary>
            option value
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.OptionEventArgs`1.#ctor(`0)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:Lagoon.UI.Components.LgSelect`1">
            <summary>
             A select component.
            </summary>
            <typeparam name="TValue">Type of value</typeparam>
        </member>
        <member name="F:Lagoon.UI.Components.LgSelect`1._selectedItemData">
            <summary>
            Additional informations about the last select value.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgSelect`1._lastValue">
            <summary>
            Value available the last time the list was openned.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelect`1.GetRenderingSelectedItemData">
            <summary>
            Get the items to render.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelect`1.IsSelected(Lagoon.UI.Components.LgOptionListItem{`0})">
            <summary>
            Tests whether an item is selected.
            </summary>
            <param name="item">The item to test.</param>
            <returns><c>true</c> if the item is selected; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelect`1.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelect`1.OnInitItemSelection(Lagoon.UI.Components.LgOptionListItem{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelect`1.KeepItemData(Lagoon.UI.Components.IListItemData{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelect`1.OnGetSelectionGuid(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelect`1.GetUnknownValues">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelect`1.OnAddItem(Lagoon.UI.Components.LgOptionListItem{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelect`1.OnUpdateItem(Lagoon.UI.Components.LgOptionListItem{`0},`0,`0)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelect`1.OnRemoveItem(Lagoon.UI.Components.LgOptionListItem{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelect`1.IsDropdownItemVisible(Lagoon.UI.Components.LgOptionListItem{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelect`1.OnClickItemAsync(Lagoon.UI.Components.OptionEventArgs{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelect`1.OnSelectItemAsync(Lagoon.UI.Components.LgOptionListItem{`0})">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelect`1.OnResetValueAsync">
            <summary>
            Call on click reset button
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelect`1.SelectItemAsync(`0)">
            <summary>
            Call from LgOptionListItem: item selection
            </summary>
            <param name="value">Selected value</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelect`1.OnValueChangeAsync(`0)">
            <summary>
            Update selected value
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgLabel">
            <summary>
            Label component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabel.AdditionalAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will be applied to the created element.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabel.ChildContent">
            <summary>
            Gets or sets the child content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabel.Text">
            <summary>
            Gets or sets the label text
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabel.For">
            <summary>
            Gets or sets the label text
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabel.CssClass">
            <summary>
            Gets or sets the label css class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabel.Tooltip">
            <summary>
            Gets or sets the tooltip.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgLabel.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgLabelAction">
            <summary>
            Label with action component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabelAction.Value">
            <summary>
            Gets or sets the value of this input.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabelAction.Label">
            <summary>
            Gets or sets the label
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabelAction.CssClass">
            <summary>
            Gets or sets the component css class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabelAction.Tooltip">
            <summary>
            Gets or sets the component Tooltip
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabelAction.ButtonKind">
            <summary>
            Gets or sets the kind of the button
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabelAction.ButtonText">
            <summary>
            Gets or sets the button label
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabelAction.ButtonIconName">
            <summary>
            Gets or sets the button icon name
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabelAction.MultiLine">
            <summary>
            Gets or sets input text mode.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabelAction.Disabled">
            <summary>
            Gets or sets the input disabled attribute
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabelAction.ReadOnly">
            <summary>
            Gets or sets the input readonly attribute
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLabelAction.OnClick">
            <summary>
            Gets or sets the button Onclick eventCallback
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgLabelAction.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgTitle">
            <summary>
            Title component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTitle.Text">
            <summary>
            Gets or sets the label text
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTitle.CssClass">
            <summary>
            Gets or sets the label css class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTitle.TitleLevel">
            <summary>
            Gets or sets the title level (size).
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgTitle.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.Layouts.Internal.LgHeader">
            <summary>
            Internal component used to render application header
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Layouts.Internal.LgHeader._applicationName">
            <summary>
            Application name.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Layouts.Internal.LgHeader._environmentName">
            <summary>
            Environment name.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Layouts.Internal.LgHeader._environmentColor">
            <summary>
            Environment color.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Layouts.Internal.LgHeader.ApplicationInformation">
            <summary>
            Get the current application informations.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Layouts.Internal.LgHeader.CollapsedNavMenu">
            <summary>
            Menu is collapsed ? (mobile)
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Layouts.Internal.LgHeader.OnInitialized">
            <summary>
            Initialization
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Layouts.Internal.LgHeader.ToggleNavMenu">
            <summary>
            Navigation menu toggle management
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.Layouts.Internal.LgSimpleLayout">
            <summary>
            Main part of default Lagoon layout.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Layouts.Internal.LgSimpleLayout.AppComponent">
            <summary>
            LgApp instance.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.Layouts.Internal.LgSimpleLayout.RouteData">
            <summary>
            Gets or sets the route data. Contains the information to display a page.
            </summary>
        </member>
        <member name="E:Lagoon.UI.Components.Layouts.Internal.LgSimpleLayout.OnRaiseClosingEventAsync">
            <summary>
            Event called when the page is closing.
            </summary>
        </member>
        <member name="E:Lagoon.UI.Components.Layouts.Internal.LgSimpleLayout.OnRaiseCloseEventAsync">
            <summary>
            Event called when the page is closed.
            </summary>
        </member>
        <member name="E:Lagoon.UI.Components.Layouts.Internal.LgSimpleLayout.Lagoon#UI#Components#Internal#IPageManager#OnRaiseActivatedEventAsync">
            <summary>
            Event called when the tab is selected.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Layouts.Internal.LgSimpleLayout.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Layouts.Internal.LgSimpleLayout.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.Layouts.Internal.LgSimpleLayout.NavigatingToAsync(Lagoon.UI.Components.Internal.NavigatingToEventArgs)">
            <summary>
            Check if the current page can't be close before goind to the next page.
            </summary>
            <param name="arg">Event arguments.</param>
            <returns>The running task.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Layouts.Internal.LgSimpleLayout.NavigateToAsync(Lagoon.UI.Components.Internal.NavigateToEventArgs)">
            <summary>
            Load the page from the route data.
            </summary>
            <param name="e">Informstions about the page to display.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgLayout">
            <summary>
            Application base layout
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgLayout.C_I_MAX_HEIGHT_VERTICAL_SCREEN">
            <summary>
            Define maximal height to determine current media is vertical orientation
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgLayout._lastWindowInformation">
            <summary>
            Last window information used for the display.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgLayout._srInfoAppLoaded">
            <summary>
            Indicator for screen reader information after login
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgLayout._collapseSidebar">
            <summary>
            Menu is collapsed ? (mobile) 
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgLayout._cssClassSidebar">
            <summary>
            Css Class to determine sidebar style and grid template
            for the layout depending on the sidebar
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgLayout._cssClassWrapper">
            <summary>
            Css Class to determine style and grid template
            for the layout
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLayout.MenuService">
            <summary>
            Service used to communicate with the LgMenuConfiguration
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.LgLayout.NavigationManager">
            <summary>
            Used to check policy for the connected user
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLayout.AppComponent">
            <summary>
            Root application component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLayout.ChildContent">
            <summary>
            Entry point for layout configuration
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.LgLayout.IsTabbed">
            <summary>
            Gets or sets if the application use tabbed navigation else the simple page navigation is used.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLayout.ShowHeader">
            <summary>
            Display header into app layout ?
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLayout.ShowSidebar">
            <summary>
            Display sidebar into app layout ?
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLayout.TopContent">
            <summary>
            Gets or sets layout top content
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgLayout.OnInitialized">
            <summary>
            LgLayout initialization
            Init wrapper css class depending on header, siderbar usage
            used to define css grid template
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgLayout.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgLayout.OnAfterRenderAsync(System.Boolean)">
            <summary>
            After first render, inject blazorsize javascript librairie
            </summary>
            <param name="firstRender">Is the first render of LgLayout component ?</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgLayout.Dispose(System.Boolean)">
            <summary>
            Dispose resource
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgLayout.ToggleSidebarHandler(Lagoon.UI.Components.ToggleSidebarEventArgs)">
            <summary>
            Called when Sidebar is collapsed or not
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgLayout.OnWindowResizeAsync(Lagoon.UI.Components.WindowInformation)">
            <summary>
            On window resized, change variable
            which define layout state as mobile, tablet or large size
            </summary>
            <param name="newWI">Window information</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgLayout.ConfigureForCurrentMedia">
            <summary>
            Set wrapper Css classes
            Set sidebar Css classe
            depending on media type and orientation
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgSideBar">
            <summary>
            Left menu shown in sidebar.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSideBar.Collapsed">
            <summary>
            Sidebar is collapsed ? 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSideBar.OnToggleSidebar">
            <summary>
            Event call for mainlayout razor page to notify the  sidebar state change
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSideBar.DefaultCollapsed">
            <summary>
            Gets or sets the Sidebar collapsed state (default value)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSideBar.CssClass">
            <summary>
            Gets or sets the CSS class
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgSideBar.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSideBar.OnCollapseAsync">
            <summary>
            OnCollapse event collapse button
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgSideBar.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgSrInformation">
            <summary>
            Information displayer for screen reader
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgSrInformation._removeTimerValue">
            <summary>
            Gets or sets removing text timer
            </summary>
            <value>timer in millisecond</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgSrInformation.JSRuntime">
            <summary>
            JS Runtime
            </summary>
            <value></value>
        </member>
        <member name="M:Lagoon.UI.Components.LgSrInformation.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSrInformation.ReadTextAsync(System.String)">
            <summary>
            Display text
            </summary>
            <param name="text">Data to add</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgSrInformation.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LanguageChangedEventArgs">
            <summary>
            Language change
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LanguageChangedEventArgs.CultureName">
            <summary>
            Get the new culture name. ("en-GB", fr-FR", ...)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LanguageChangedEventArgs.TwoLetterISOLanguageName">
            <summary>
            Get the new language code. ("en", fr", ...)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LanguageChangedEventArgs.UpdateRender">
            <summary>
            Gets or sets if StateAsChange must be called.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LanguageChangedEventArgs.#ctor(System.Boolean)">
            <summary>
            Initialize new instance.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgApp">
            <summary>
            The App component must be used as the root component of the app. (App.razor)
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgApp._currentTitle">
            <summary>
            Last value set to the document title
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgApp.ApplicationInformation">
            <summary>
            Get the current application informations.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgApp.DefaultLayout">
            <summary>
            Gets or sets the type of a layout to be used if the page does not declare any layout.
            If specified, the type must implement IComponent and accept a parameter named Body.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgApp.IsTabbed">
            <summary>
            Gets or sets if the application use tabbed navigation else the simple page navigation is used.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgApp.ShowHeader">
            <summary>
            Display header into app layout ?
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgApp.ShowSidebar">
            <summary>
            Display sidebar into app layout ?
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgApp.ChildContent">
            <summary>
            The child content.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgApp.StartupTabs">
            <summary>
            The list of <see cref="T:Lagoon.UI.Components.LgStartupTab"/> to define the pages to open when application startup.
            (Only used when the parameter "IsTabbed" is <c>true</c>.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgApp.Authorizing">
            <summary>
            The content that will be displayed while asynchronous authorization is in progress.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgApp.NotAuthorized">
            <summary>
            The content that will be displayed if the user is not authorized.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgApp.NotFound">
            <summary>
            Gets or sets the content to display when no match is found for the requested route.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgApp.CurrentRouteData">
            <summary>
            Gets the last route data where the user navigate to.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgApp.CurrentUri">
            <summary>
            Gets the last URI where the user navigate to.
            </summary>
        </member>
        <member name="E:Lagoon.UI.Components.LgApp.OnNavigatingTo">
            <summary>
            Event called when router navigate to a page.
            </summary>
        </member>
        <member name="E:Lagoon.UI.Components.LgApp.OnNavigateTo">
            <summary>
            Event called when router navigate to a page.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgApp.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgApp.IsRedirectionNeededAsync(System.String)">
            <summary>
            Check if the current URI can be reached, else return the fallback URI.
            </summary>
            <param name="uri">URI to navigate to.</param>
            <returns>The fallback URI if redirection needed, else null.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgApp.NavigateToAsync(System.String,Microsoft.AspNetCore.Components.RouteData)">
            <summary>
            Show page from route in interface.
            </summary>
            <param name="uri">Target URI.</param>
            <param name="routeData">Page render informations.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgApp.Lagoon#UI#Components#Internal#IPageTitleHandler#SetPageTitleAsync(Lagoon.UI.Components.LgPage)">
            <summary>
            Method called when page title is defined.
            </summary>
            <param name="page">Page instance.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgApp.Lagoon#UI#Components#IWaitingContextProvider#GetNewWaitingContext">
            <summary>
            Return a new waiting context with a cancellation token source.
            </summary>
            <returns>A new waiting context with a cancellation token source.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgApp.OnLanguageChangedAsync(Lagoon.UI.Components.LanguageChangedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgApp.Lagoon#UI#Components#Internal#IPageDefaultLayoutProvider#GetDefaultLayout">
            <summary>
            Return the default layout to use.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgMenuConfiguration">
            <summary>
            Component used by the layout to configure application menu
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuConfiguration.MenuService">
            <summary>
            Service allowing communication with the menu.
            Two purposes:
            - Drive the menu rendering component
            - Refresh explicitly called by the developper
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuConfiguration.MenuSetDeclarations">
            <summary>
            Main node for adding <see cref="T:Lagoon.UI.Components.LgMenuSet" />
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuConfiguration.Menu">
            <summary>
            Get or set the menu items for the main menu.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuConfiguration.Sidebar">
            <summary>
            Get or set the menu items for the side menu.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuConfiguration.Toolbar">
            <summary>
            Get or set the menu items for the main toolbar.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuConfiguration.TabContainerToolbar">
            <summary>
            Get or set the menu items for the application tab container.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgMenuConfiguration._menuSets">
            <summary>
            The complete list of <see cref="T:Lagoon.UI.Components.Internal.LgCustomMenuSet" /> inside <see cref="P:Lagoon.UI.Components.LgMenuConfiguration.MenuSetDeclarations"/>
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuConfiguration.OnInitialized">
            <summary>
            When initializing, subcribe to explict menu refresh event
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuConfiguration.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuConfiguration.Dispose(System.Boolean)">
            <summary>
            Unsubscribe event listenner
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuConfiguration.ShouldRender">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuConfiguration.OnAfterRender(System.Boolean)">
            <summary>
            When the <see cref="T:Lagoon.UI.Components.LgMenuConfiguration"/> is fully loaded : Raise an event to ask the rendered.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuConfiguration.RefreshMenu(Lagoon.UI.Components.MenuPosition)">
            <summary>
            Fired by <see cref="P:Lagoon.UI.Components.LgMenuConfiguration.MenuService" /> to update menu explicitly
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuConfiguration.RegisterMenuSet(Lagoon.UI.Components.Internal.LgCustomMenuSet)">
            <summary>
            Used by children to declare itself to the parent element
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuConfiguration.UnregisterMenuSet(Lagoon.UI.Components.Internal.LgCustomMenuSet)">
            <summary>
            Used by children to declare itself to the parent element
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuConfiguration.TryGetMenuSet(System.String)">
            <summary>
            Try to return the menu set with the specified id.
            </summary>
            <param name="menuSetId">Id of the menu set.</param>
            <returns>The menu set with the specified id.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgAboutMenuItem">
            <summary>
            About page menu link
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgAboutMenuItem.WindowManager">
            <summary>
            Window manager
            </summary>
            <value></value>
        </member>
        <member name="M:Lagoon.UI.Components.LgAboutMenuItem.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LgConnectMenuItem">
            <summary>
            Menu item to connect or disconnect user.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgConnectMenuItem.HideRootLevelText">
            <summary>
            By default, the text display depends of the menu container : The text is not displayed in toolbar by default.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgConnectMenuItem.IsConnected">
            <summary>
            Gets if a current user is authenticated.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgConnectMenuItem.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LgDebugMenuItem">
            <summary>
            Item to do a global search.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDebugMenuItem.JS">
            <summary>
            Give access to the JS Runtime
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDebugMenuItem.ChildContent">
            <summary>
            Menu set composition.
            </summary>
            <value></value>
        </member>
        <member name="M:Lagoon.UI.Components.LgDebugMenuItem.ReloadCss">
            <summary>
            Force to reload the application CSS.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgMenuItem">
            <summary>
            Render menu item.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.MenuRender">
            <summary>
            Menu position (MenuTop, MenuToolbar, MenuSidebar, MenuAppTabContainer)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.Header">
            <summary>
            Header component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.ChildContent">
            <summary>
            Get or set the sub menu items inside this menu item. 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.CustomContent">
            <summary>
            Get or set the custom render for this item.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.CssClass">
            <summary>
            Gets or sets the CSS class for the menu item.
            </summary>
            <value>The CSS class for the menu item.</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.AriaLabel">
            <summary>
            Gets or sets label for accessibility
            </summary>
            <value>label</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.Tag">
            <summary>
            Get or set the tag of the menu
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.Text">
            <summary>
            Get or set the text of the menu
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.Uri">
            <summary>
            Get or set the razor page url
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.Url">
            <summary>
            The URL to use to show the page (Obsolete : utiliser "Uri").
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.OnClick">
            <summary>
            Get or set the action executer when user click on the menu
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.IconName">
            <summary>
            Name of the icon.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.Link">
            <summary>
            Direct link
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.HideDropDownArrow">
            <summary>
            Gets or sets if the drown down have an arrow icon.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.HideRootLevelText">
            <summary>
            By default, the text display depends of the menu container : The text is not displayed in toolbar by default.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.ShowTextAsTooltip">
            <summary>
            By default, the tooltip display depends of the menu container.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.ShowText">
            <summary>
            By default, the text display depends of the menu container : The text is not displayed in toolbar by default.
            (Obsolete : Use HideRootLevelText)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.ShowLabel">
            <summary>
            By default, the text display depends of the menu container : The text is not displayed in toolbar by default.
            (Obsolete : Use HideRootLevelText)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.Scrollable">
            <summary>
            Gets or sets if the menu have a vertical scroll bar when the list of sub-items is too large.
            WARNING ! Scrollable item list can't have sub-menus. 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.TagRendering">
            <summary>
            Text to display.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.TextRendering">
            <summary>
            Text to display.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.IconNameRendering">
            <summary>
            Icon name to use.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuItem.UriRendering">
            <summary>
            Uri to use.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuItem.MenuItemClickAsync">
            <summary>
            Handle click on menu item.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuItem.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuItem.IsRootLevelTextHidden">
            <summary>
            Check if the label must be shown.
            </summary>
            <returns><c>true</c> if the label must be shown.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuItem.IsDropDownArrowVisible">
            <summary>
            Check the dropdown arrow must be show
            </summary>
            <returns><c>true</c> if the dropdown arrow must be showtooltip must be hidden.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuItem.IsTextAsTooltipVisible">
            <summary>
            Check if the tooltip must be hidden.
            </summary>
            <returns><c>true</c> if the tooltip must be hidden.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuItem.GetDropDownMenuCssClassAttribute">
            <summary>
            Get CSS classes for the drop down menu.
            </summary>
            <returns>CSS classes.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuItem.GetNavItemCssClass(System.Boolean)">
            <summary>
            Get CSS classes for the nav item.
            </summary>
            <param name="dropdown">Indicate if the item have a drop down menu.</param>
            <returns>CSS classes.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuItem.GetDropdownToggleCssClass">
            <summary>
            Define css class on navlink having submenu
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgMenuSeparator">
            <summary>
            Menu item separator.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuSeparator.MenuRender">
            <summary>
            Menu position (MenuTop, MenuToolbar, MenuSidebar, MenuAppTabContainer)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuSeparator.Text">
            <summary>
            Get or set the title text
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuSeparator.IsVisible">
            <summary>
            Gets if the component must be visible.
            </summary>
            <returns><c>true</c> if the component must be visible.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgMenuTitle">
            <summary>
            Menu item title.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuTitle.MenuRender">
            <summary>
            Menu position (MenuTop, MenuToolbar, MenuSidebar, MenuAppTabContainer)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuTitle.Text">
            <summary>
            Get or set the title text
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuTitle.IsVisible">
            <summary>
            Gets if the component must be visible.
            </summary>
            <returns><c>true</c> if the component must be visible.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgSearchMenuItem">
            <summary>
            Item to do a global search.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSearchMenuItem.Items">
            <summary>
            Gets or sets the items.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.MenuService">
            <summary>
            Menu provider service.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.MenuService._menuRenderKey">
            <summary>
            A unique key for each MenuDataChanged event.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.MenuService._menuConfiguration">
            <summary>
            Menu configuration
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.MenuService.Logger">
            <summary>
            Logger for menu service.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.MenuService.IsLoading">
            <summary>
            Gets or sets if the menu configuration is loading.
            </summary>
        </member>
        <member name="E:Lagoon.UI.Components.MenuService.OnMenuDataChange">
            <summary>
            Even fired when the <see cref="T:Lagoon.UI.Components.LgMenuConfiguration"/> is loaded or explicitly refreshed.
            </summary>
        </member>
        <member name="E:Lagoon.UI.Components.MenuService.OnRefresh">
            <summary>
            Event used to explicitly refresh the menu 
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.MenuService.#ctor(Microsoft.Extensions.Logging.ILogger{Lagoon.UI.Components.MenuService})">
            <summary>
            Create a new <see cref="T:Lagoon.UI.Components.MenuService" /> instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.MenuService.MenuDataChanged">
            <summary>
            Associated to the OnMenuDataChange event, new menu data available
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.MenuService.RefreshAll">
            <summary>
            Can be called to refresh all existing menus.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.MenuService.Refresh(Lagoon.UI.Components.MenuPosition)">
            <summary>
            Can be called to refresh a combination of menu.
            </summary>
            <param name="menuPositionCombinaison"></param>
        </member>
        <member name="M:Lagoon.UI.Components.MenuService.RegisterMenuConfiguration(Lagoon.UI.Components.LgMenuConfiguration)">
            <summary>
            Remove the reference to the menu configuration.
            </summary>
            <param name="menuConfiguration">Menu configuration.</param>
        </member>
        <member name="M:Lagoon.UI.Components.MenuService.UnregisterMenuConfiguration(Lagoon.UI.Components.LgMenuConfiguration)">
            <summary>
            Keep a reference to the menu configuration.
            </summary>
            <param name="menuConfiguration">Menu configuration.</param>
        </member>
        <member name="M:Lagoon.UI.Components.MenuService.RenderKey(Lagoon.UI.Components.MenuPosition)">
            <summary>
            Return a unique key for each MenuDataChanged event.
            (To force refresh when a state as change is done on the menu configuration)
            </summary>
            <param name="menuPosition">Menu ID.</param>
            <returns>A unique key for each MenuDataChanged event.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.MenuService.IsMenuDefined(Lagoon.UI.Components.MenuPosition)">
            <summary>
            Indicate if the menu content is defined.
            </summary>
            <param name="menuPosition">The menu to retreive.</param>
        </member>
        <member name="M:Lagoon.UI.Components.MenuService.GetMenuContent(Lagoon.UI.Components.MenuPosition)">
            <summary>
            Return the render fragment for the menu.
            </summary>
            <param name="menuPosition">The menu to retreive.</param>
        </member>
        <member name="M:Lagoon.UI.Components.MenuService.RenderMenuSet(System.String)">
            <summary>
            Return the render fragment for the menuset.
            </summary>
            <param name="menuSetId">ID of the menu set.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgDebugMenuSet">
            <summary>
            Debug menu item set.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDebugMenuSet.JS">
            <summary>
            Give access to the JS Runtime
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDebugMenuSet.ChildContent">
            <summary>
            Menu set composition.
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.LgDebugMenuSet.Id">
            <summary>
            Id of this toolbar instance.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgDebugMenuSet.Visible">
            <summary>
            Indicate if menu items will be shown.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgIncludeMenuSet">
            <summary>
            Component used to link <see cref="T:Lagoon.UI.Components.LgMenuSet" /> within a menu.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgIncludeMenuSet.MenuService">
            <summary>
            Menu service.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgIncludeMenuSet.Id">
            <summary>
            This id should be related to the id of an <see cref="T:Lagoon.UI.Components.LgMenuSet" />
            </summary>
            <value></value>
        </member>
        <member name="T:Lagoon.UI.Components.LgMenuSet">
            <summary>
            Component used to declare a set of menu inside a <see cref="P:Lagoon.UI.Components.LgMenuConfiguration.MenuSetDeclarations"/> identified by an Id
            A <see cref="T:Lagoon.UI.Components.LgMenuSet"/> can specify a PolicyVisible to restrict the menu to an existing Policy
            Used by <see cref="T:Lagoon.UI.Components.LgMenuConfiguration" />
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgMenuSet.ChildContent">
            <summary>
            Menu set composition.
            </summary>
            <value></value>
        </member>
        <member name="M:Lagoon.UI.Components.LgMenuSet.GetContent">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LgSearchMenuSet">
            <summary>
            Menu set including a <see cref="T:Lagoon.UI.Components.LgSearchMenuItem"/>
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSearchMenuSet.Id">
            <summary>
            Id of this toolbar instance.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSearchMenuSet.Items">
            <summary>
            Gets or sets the items.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.RefreshMenuEventArgs">
            <summary>
            Refresh menu event args.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.RefreshMenuEventArgs.MenuPosition">
            <summary>
            Menu position 
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.RefreshMenuEventArgs.#ctor(Lagoon.UI.Components.MenuPosition)">
            <summary>
            Instance initialization.
            </summary>
            <param name="menuPosition">Menu position.</param>
        </member>
        <member name="T:Lagoon.UI.Components.ToggleSidebarEventArgs">
            <summary>
            Toggle side bar events args.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ToggleSidebarEventArgs.Collapsed">
            <summary>
            Sidebar is collasped ?
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgActionPanel">
            <summary>
            Component to group actions.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgActionPanel._buttonSize">
            <summary>
            Toolbar button size definition from parameter or application configuration
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgActionPanel.CssClass">
            <summary>
            Gets or sets css class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgActionPanel.ActionContent">
            <summary>
            Gets or sets the action panel left content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgActionPanel.Toolbar">
            <summary>
            Gets or sets the action panel Toolbar definition
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgActionPanel.ToolbarButtonSize">
            <summary>
            Toolbar button size
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgActionPanel.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgActionPanel.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgAriaComponentBase">
            <summary>
            Base component with ARIA attributes.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgAriaComponentBase._ariaLabel">
            <summary>
            Arial label
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgAriaComponentBase.AriaLabel">
            <summary>
            Gets or sets aria label
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgAriaComponentBase.AriaLabelledBy">
            <summary>
            Gets or sets id of component for aria label
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgComponentBase">
            <summary>
            Base class for Lagoon components.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgComponentBase._isDisposed">
            <summary>
            Flag used to track if we already have disposed this component
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgComponentBase._anonymousHttpClient">
            <summary>
            The anonymous http client.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgComponentBase._authenticatedHttpClient">
            <summary>
            The authenticated http client.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgComponentBase.App">
            <summary>
            Give access to LgApplication context
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgComponentBase.JS">
            <summary>
            Give access to the JS Runtime
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgComponentBase.HttpClientFactory">
            <summary>
            HttpClient provider.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgComponentBase.Http">
            <summary>
            Shortcut to AuthenticatedHttpClient.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgComponentBase.AuthenticatedHttpClient">
            <summary>
            Authenticated HttpClient instance.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgComponentBase.AnonymousHttpClient">
            <summary>
            Anonymous HttpClient instance.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgComponentBase.AuthenticationStateProvider">
            <summary>
            Used to retrieve current logged user
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgComponentBase.PolicyService">
            <summary>
            Used to check policy for the connected user
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgComponentBase.WaitingContextProvider">
            <summary>
            Waiting context provider.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.OnInitialized">
            <summary>
            LgBaseComponent initialization:
            - Handle LanguageChanged event
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.GetNewElementId(System.Char)">
            <summary>
            Generates a new DOM element identifier in order to associate it with a label.
            </summary>
            <returns>The new id.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.LanguageChangedAsync(System.Boolean)">
            <summary>
            On language changed, update cookie and refresh state
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.OnLanguageChangedAsync(Lagoon.UI.Components.LanguageChangedEventArgs)">
            <summary>
            Method called when UI language is changed.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.ShowException(System.Exception)">
            <summary>
            Show and trace an exception message
            </summary>
            <param name="ex">Exception to trace and display</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.ShowWarning(System.String,System.String)">
            <summary>
            Display a warning message
            </summary>
            <param name="message">toastr message</param>
            <param name="title">toastr title</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.ShowWarning(Microsoft.AspNetCore.Components.MarkupString,System.Nullable{Microsoft.AspNetCore.Components.MarkupString})">
            <summary>
            Display a warning HTML message.
            </summary>
            <param name="message">toastr message</param>
            <param name="title">toastr title</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.ShowSuccess(System.String,System.String)">
            <summary>
            Display a success message
            </summary>
            <param name="message">toastr message</param>
            <param name="title">toastr title</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.ShowSuccess(Microsoft.AspNetCore.Components.MarkupString,System.Nullable{Microsoft.AspNetCore.Components.MarkupString})">
            <summary>
            Display a success HTML message.
            </summary>
            <param name="message">toastr message</param>
            <param name="title">toastr title</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.ShowError(System.String,System.String)">
            <summary>
            Display an error message.
            </summary>
            <param name="message">The message.</param>
            <param name="title">The title of the message.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.ShowError(Microsoft.AspNetCore.Components.MarkupString,System.Nullable{Microsoft.AspNetCore.Components.MarkupString})">
            <summary>
            Display a HTML error message.
            </summary>
            <param name="message">The message.</param>
            <param name="title">The title of the message.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.ShowInformation(System.String,System.String)">
            <summary>
            Display an information message.
            </summary>
            <param name="message">The message.</param>
            <param name="title">The title of the message.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.ShowInformation(Microsoft.AspNetCore.Components.MarkupString,System.Nullable{Microsoft.AspNetCore.Components.MarkupString})">
            <summary>
            Display a HTML information message.
            </summary>
            <param name="message">The message.</param>
            <param name="title">The title of the message.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.ShowMessage(Lagoon.UI.Components.Level,System.String,System.String,System.Boolean)">
            <summary>
            Display a configurable message.
            </summary>
            <param name="level">toastr level</param>
            <param name="message">toastr message</param>
            <param name="title">toastr title</param>
            <param name="escapeHtml">Indicate if the message and the title are using raw text or HTML format.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.ShowScreenReaderInformation(System.String)">
            <summary>
            Display information for the screen reader only
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.ShowConfirm(System.String,System.Func{System.Threading.Tasks.Task},System.String)">
            <summary>
            Show the confirmation modal
            </summary>
            <param name="confirmationMessage">Confirmation message</param>
            <param name="callback">Confirmation callback</param>
            <param name="title">Confirmation title</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.TryShowConfirmAsync(System.String,System.Func{System.Threading.Tasks.Task},System.String)">
            <summary>
            Execute async method to show a modal window.
            </summary>
            <param name="confirmationMessage">Confirmation message</param>
            <param name="callback">Confirmation callback</param>
            <param name="title">Confirmation title</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.IsUserAuthenticatedAsync">
            <summary>
            Return user authentication state
            </summary>
            <returns>True if authenticated, false otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.IsInPolicyAsync(System.Security.Claims.ClaimsPrincipal,System.String)">
            <summary>
            Check if current user is in a specified policy
            </summary>
            <param name="user">Informations about the user.</param>
            <param name="policyName">Policy name to check</param>
            <returns><c>true</c> is user is in policy or if the <paramref name="policyName"/> is null or empty; <c>false</c> otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.IsInPolicyAsync(System.String)">
            <summary>
            Check if current user is in a specified policy
            </summary>
            <param name="policyName">Policy name to check</param>
            <returns><c>true</c> is user is in policy or if the <paramref name="policyName"/> is null or empty; <c>false</c> otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.GetUserAsync">
            <summary>
            Return user ClaimsPrincipal
            </summary>
            <returns>True if authenticated, false otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.UserInfoAsync(System.String)">
            <summary>
            Retrieve information added by AddInfo() during OnSignIn
            </summary>
            <param name="key">Key info</param>
            <returns>Value if found, null otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.IsUserAuthenticate">
            <summary>
            Return user authentication state
            </summary>
            <returns>True if authenticated, false otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.GetUser">
            <summary>
            Return user ClaimsPrincipal
            </summary>
            <returns>True if authenticated, false otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.UserInfo(System.String)">
            <summary>
            Retrieve information added by AddInfo() during OnSignIn
            </summary>
            <param name="key">Key info</param>
            <returns>Value if found, null otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.IsInPolicy(System.String)">
            <summary>
            Check if current user is in <paramref name="policyName"/>
            </summary>
            <param name="policyName">Policy to check</param>
            <returns>True is user is in policy, false otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.Dispose">
            <summary>
            Don't modify the content of this method. If you want to free some resources, use <c>Dispose(bool disposing)</c>
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.Dispose(System.Boolean)">
            <summary>
            Free used resources
            </summary>
            <param name="disposing">Will be always true, we don't use finalize in this component</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.GetClassAttribute">
            <summary>
            Return the content to set in "class" attribute.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.GetAdditionalAttributes(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}[])">
            <summary>
            Get the list of additional attributes to add to component.
            </summary>
            <param name="lists">Attribute lists.</param>
            <returns>The list of additional attributes to add to component.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.GetTooltipAttributes(System.String,Lagoon.UI.Components.TooltipPosition,System.Boolean)">
            <summary>
            Get the list of attributes to add to render a tooltip.
            </summary>
            <param name="tooltip">Tooltip content.</param>
            <param name="position">Tooltip position.</param>
            <param name="ignoreTooltip">Indicate if tooltip must be ignore.</param>
            <returns>The list of attributes to add to render a tooltip.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.GetNewWaitingContext">
            <summary>
            Return a new waiting context with a cancellation token source.
            </summary>
            <returns>A new waiting context with a cancellation token source.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.ExecuteActionAsync(Microsoft.AspNetCore.Components.EventCallback{Lagoon.UI.Components.ActionEventArgs},System.String)">
            <summary>
            Execute an event action after showing confirmation.
            </summary>
            <param name="onAction">Action to execute.</param>
            <param name="confirmation">Confirmation to show before action execution.</param>
            <returns>The executing task.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.ExecuteActionAsync(Microsoft.AspNetCore.Components.EventCallback{Lagoon.UI.Components.ActionEventArgs},Microsoft.AspNetCore.Components.NavigationManager,System.String,System.String)">
            <summary>
            Execute an event action after showing confirmation.
            </summary>
            <param name="onAction">Action to execute.</param>
            <param name="navigationManager">Navigation manager.</param>
            <param name="navigateToUri">URI to navigate to is the action is not defined.</param>
            <param name="confirmation">Confirmation to show before action execution.</param>
            <returns>The executing task.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.ExecuteActionAsync``1(Microsoft.AspNetCore.Components.EventCallback{``0},System.Func{Lagoon.UI.Components.WaitingContext,``0},System.String)">
            <summary>
            Execute an event action after showing confirmation.
            </summary>
            <param name="onAction">Action to execute.</param>
            <param name="newArgCallback">Function returning the arg to pass to the event.</param>
            <param name="confirmation">Confirmation to show before action execution.</param>
            <returns>The executing task.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.ExecuteActionAsync``1(Microsoft.AspNetCore.Components.EventCallback{``0},System.Func{Lagoon.UI.Components.WaitingContext,``0},Microsoft.AspNetCore.Components.NavigationManager,System.String,System.String)">
            <summary>
            Execute an event action after showing confirmation.
            </summary>
            <param name="onAction">Action to execute.</param>
            <param name="newArgCallback">Function returning the arg to pass to the event.</param>
            <param name="navigationManager">Navigation manager.</param>
            <param name="navigateToUri">URI to navigate to is the action is not defined.</param>
            <param name="confirmation">Confirmation to show before action execution.</param>
            <returns>The executing task.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.InitPolicyState(Lagoon.UI.Components.PolicyState@,Lagoon.UI.Components.LgAuthorizeView,System.Boolean,System.Boolean)">
            <summary>
            Initialise the visibility and editable state of a component with policies.
            </summary>
            <param name="policyState">The component policy state.</param>
            <param name="parentPolicy">The parent policy manager.</param>
            <param name="hasPolicyVisible">Indicate if the current component has visibility policy sets.</param>
            <param name="hasPolicyEditable">Indicate if the current component has editable policy sets.</param>
            <returns>True if the policies parameters must be evaluated.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgComponentBase.GetLambdaExpression``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Create lambda expression from function
            </summary>
            <typeparam name="TItem"></typeparam>
            <typeparam name="TResult"></typeparam>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.Level">
            <summary>
            Message level.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Level.Error">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Level.Info">
            <summary>
            Information message.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Level.Warning">
            <summary>
            Warning message.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Level.Success">
            <summary>
            Success message.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.Position">
            <summary>
            Position.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Position.TopLeft">
            <summary>
            Top left
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Position.TopRight">
            <summary>
            Top right
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Position.BottomLeft">
            <summary>
            Bottom left
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Position.BottomRight">
            <summary>
            Bottom right
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Position.TopCenter">
            <summary>
            Top center
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Position.BottomCenter">
            <summary>
            Bottom center
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.ButtonKind">
            <summary>
            Kind of component button render (from boostrap) 
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ButtonKind.Primary">
            <summary>
            Primary kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ButtonKind.Secondary">
            <summary>
            Secondary kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ButtonKind.Success">
            <summary>
            Success kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ButtonKind.Error">
            <summary>
            Error kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ButtonKind.Warning">
            <summary>
            Warning kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ButtonKind.Info">
            <summary>
            Info kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ButtonKind.Link">
            <summary>
            Link kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ButtonKind.Ghost">
            <summary>
            Ghost kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ButtonKind.Custom">
            <summary>
            Custom kind.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.ToolbarGroupKind">
            <summary>
            Kind of component toolbar button group render (from boostrap)
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ToolbarGroupKind.Primary">
            <summary>
            Primary kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ToolbarGroupKind.Secondary">
            <summary>
            Secondary kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ToolbarGroupKind.Success">
            <summary>
            Success kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ToolbarGroupKind.Error">
            <summary>
            Error kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ToolbarGroupKind.Warning">
            <summary>
            Warning kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ToolbarGroupKind.Info">
            <summary>
            Info kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ToolbarGroupKind.Ghost">
            <summary>
            Ghost kind.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.Kind">
            <summary>
            Kind of component render (from boostrap)
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Kind.Primary">
            <summary>
            Primary kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Kind.Default">
            <summary>
            Default kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Kind.Secondary">
            <summary>
            Secondary kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Kind.Success">
            <summary>
            Success kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Kind.Error">
            <summary>
            Error kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Kind.Warning">
            <summary>
            Warning kind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.Kind.Info">
            <summary>
            Information kind.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.InputMaskKind">
            <summary>
            Input mask lind.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.InputMaskKind.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.InputMaskKind.Mask">
            <summary>
            Mask using 9 : numeric, a : alphabetical, * : alphanumeric.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.InputMaskKind.Regex">
            <summary>
            Mask using regular expression.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.InputMaskKind.Email">
            <summary>
            Email mask.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.TextBoxMode">
            <summary>
            Represents the different display types of a textbox component.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.TextBoxMode.Multiline">
            <summary>
            The textbox is a textarea
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.TextBoxMode.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.CheckBoxKind">
            <summary>
            Represents the different display types of a checkbox component.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.CheckBoxKind.Check">
            <summary>
            The component will appear as a typical checkbox.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.CheckBoxKind.Toggle">
            <summary>
            The component will appear as a toogle button.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.CheckBoxTextPosition">
            <summary>
            Represents the different position types for labels.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.CheckBoxTextPosition.Left">
            <summary>
            The label will be displayed to the left.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.CheckBoxTextPosition.Right">
            <summary>
            The label will be displayed to the right.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.ProgressLabelPosition">
            <summary>
            Represents the different position types for labels.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ProgressLabelPosition.Left">
            <summary>
            The label will be displayed to the left.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ProgressLabelPosition.Center">
            <summary>
            The label will be displayed on the center.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ProgressLabelPosition.Right">
            <summary>
            The label will be displayed to the right.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.DisplayOrientation">
            <summary>
            Enum display orientation (vertical, horizontal)
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.DisplayOrientation.Vertical">
            <summary>
            Vertical orientation.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.DisplayOrientation.Horizontal">
            <summary>
            Horizontal orientation.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.RadioButtonDisplayKind">
            <summary>
            Enum display kind
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.RadioButtonDisplayKind.Classic">
            <summary>
            A check box is shown beside the text.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.RadioButtonDisplayKind.Modern">
            <summary>
            Text style change without check box.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.EditFormErrorsDisplayOptions">
            <summary>
            EditForm toastr configuration for the ValidationSummary
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.EditFormErrorsDisplayOptions.None">
            <summary>
            Don't display any message when validation occur on LgEditForm
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.EditFormErrorsDisplayOptions.ToastrGenericMessage">
            <summary>
            Show only a generic message in toastr when validation errors occur on LgEditForm
            </summary>
            <remark>
            This is a default option
            </remark>
        </member>
        <member name="F:Lagoon.UI.Components.EditFormErrorsDisplayOptions.ToastrAllMessages">
            <summary>
            Show all validation message in toastr
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.EditFormErrorsDisplayOptions.ToastrOnBlur">
            <summary>
            Show validation message in a toastr after input change
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.EditFormErrorsDisplayOptions.Summary">
            <summary>
            Show all validation message in a summary at the beginning of the form
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.EditFormErrorsDisplayOptions.InlineValidation">
            <summary>
            Show erros message under input
            </summary>
            <remark>
            This is a default option
            </remark>
        </member>
        <member name="T:Lagoon.UI.Components.TitleLevel">
            <summary>
            Enum display title level
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.TitleLevel.Level1">
            <summary>
            h1
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.TitleLevel.Level2">
            <summary>
            h2
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.MenuPosition">
            <summary>
            Enum menu position 
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.MenuPosition.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.MenuPosition.MenuTop">
            <summary>
            Main horizontal menu
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.MenuPosition.MenuToolbar">
            <summary>
            Main toolbar menu
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.MenuPosition.MenuSidebar">
            <summary>
            Left menu
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.MenuPosition.MenuToolbarTabContainer">
            <summary>
            Menu on the main nav tab bar
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.InputLabelType">
            <summary>
            Indicate if it's simple text or icon from library.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.InputLabelType.Text">
            <summary>
            Simple text.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.InputLabelType.IconName">
            <summary>
            Icon's name from icon library.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.RequiredInputDisplayMode">
            <summary>
            Value to customize the display of required field.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.RequiredInputDisplayMode.None">
            <summary>
            No indication added to required or optional fields
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.RequiredInputDisplayMode.OptionalOnly">
            <summary>
            Indication added to optional fields
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.RequiredInputDisplayMode.MandatoryOnly">
            <summary>
            Indication added to required fields
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.RequiredInputDisplayMode.Both">
            <summary>
            Indication added to required and optional fields
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.MediaType">
            <summary>
            Enum types of Media type (mobile, classic) 
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.MediaType.Desktop">
            <summary>
            Desktop size
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.MediaType.Mobile">
            <summary>
            Mobile size
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.MediaOrientation">
            <summary>
            Enum media orientation (vertical, horizontal)
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.MediaOrientation.Portrait">
            <summary>
            Device is in vertical position
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.MediaOrientation.Landscape">
            <summary>
            Device is in horizontal position
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.ButtonSize">
            <summary>
            Enum button size
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ButtonSize.Medium">
            <summary>
            Regular size for button.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ButtonSize.Small">
            <summary>
            Smaller size for button.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ButtonSize.Large">
            <summary>
            Bigger size for button.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.ModalSize">
            <summary>
            Enum modal size 
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ModalSize.Small">
            <summary>
            300px
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ModalSize.Medium">
            <summary>
            500px
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ModalSize.Large">
            <summary>
            800px
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ModalSize.ExtraLarge">
            <summary>
            1140px
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ModalSize.ExtraExtraLarge">
            <summary>
            1600px
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.TooltipPosition">
            <summary>
            Tooltip postion.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.TooltipPosition.None">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.TooltipPosition.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.TooltipPosition.Right">
            <summary>
            Right
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.TooltipPosition.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.TooltipPosition.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.PostLogoutMode">
            <summary>
            Post logout mode
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.PostLogoutMode.Navigation">
            <summary>
            Navigate to the PostLogoutUri 
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.PostLogoutMode.XHR">
            <summary>
            Stay on application logout page and send an XHR to the specified PostLogoutUri
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.PageClosingSourceEvent">
            <summary>
            Event source of a closing event.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.PageClosingSourceEvent.PageClose">
            <summary>
            User close the page.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.PageClosingSourceEvent.PageReload">
            <summary>
            User reload the page.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.PageClosingSourceEvent.ApplicationQuit">
            <summary>
            User quit application.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.ProgressType">
            <summary>
            Progress type.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ProgressType.Bar">
            <summary>
            Progress bar.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ProgressType.Circle">
            <summary>
            Circle progress.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.UploadMode">
            <summary>
            Upload mode supported by the LgInputFile component
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.UploadMode.Automatic">
            <summary>
            Upload all selected file directly after selection
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.UploadMode.Button">
            <summary>
            Show a button inside the LgInputFile component to fire the upload event
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.UploadMode.Manual">
            <summary>
            You have to call manually the Upload method on LgInputFile
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgListView`1">
            <summary>
            List view component.
            </summary>
            <typeparam name="TItem">Items type.</typeparam>
        </member>
        <member name="F:Lagoon.UI.Components.LgListView`1._sortModel">
            <summary>
            sort model
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgListView`1._sortAscending">
            <summary>
            Indicate sortproteprties must be ordered by asc or desc
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgListView`1._sortButtonIcon">
            <summary>
            Corresponding button to sort ascending choice
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgListView`1._isLoading">
            <summary>
            State of the load/sort items method.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgListView`1.AdditionalAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will be applied to the created element.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgListView`1.CssClass">
            <summary>
            Gets or sets the CSS classes.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgListView`1.Title">
            <summary>
            Gets or sets the view title
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgListView`1.ItemTemplate">
            <summary>
            Get or seets the item template (card for example)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgListView`1.Items">
            <summary>
            Gets or sets the list of items
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgListView`1.SelectedItems">
            <summary>
            Gets or sets the list of selected items
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgListView`1.Toolbar">
            <summary>
            Gets or sets the selection toolbar (bottom)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgListView`1.ToolbarSelection">
            <summary>
            Gets or sets the selection toolbar (bottom)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgListView`1.SortProperties">
            <summary>
            Sorting with properties list
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgListView`1.DefaultSortProperty">
            <summary>
            Gets or sets the default property selected.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgListView`1.SortOptions">
            <summary>
            Gets or set the sort dropdown content.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgListView`1.SortListViewModel.SortProperty">
            <summary>
            Search ter into list
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgListView`1.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgListView`1.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgListView`1.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgListView`1.ItemSelection(`0)">
            <summary>
            Call on item selection 
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Lagoon.UI.Components.LgListView`1.SelectAll">
            <summary>
            Select all items
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgListView`1.UnSelectAll">
            <summary>
            Unselect all items
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgListView`1.IsSelected(`0)">
            <summary>
            Return if item is selected
            </summary>
            <param name="item">Item</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgListView`1.HasSelection">
            <summary>
            Return if there is a selection item list
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgListView`1.HasSelectedItems">
            <summary>
            Return if there is at least one item selected 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgListView`1.SortListViewAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Sort items
            </summary>
            <param name="e">Change arguments</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgListView`1.SetSortOrderAsync">
            <summary>
            Set sort properties order and button icon
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgLoaderView">
            <summary>
            Loader indicator
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgLoaderView._loaderImgUri">
            <summary>
            Uri for the default indeterminated image
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgLoaderView._progress">
            <summary>
            Progress state.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgLoaderView._hasProgression">
            <summary>
            Indicate if a progression has been passed as parameter.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgLoaderView._isLoading">
            <summary>
            Indicate if the current state.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLoaderView.CssClass">
            <summary>
            Gets or sets css class of the container.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLoaderView.CustomTemplate">
            <summary>
            Gets or sets content to display after loading.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLoaderView.ChildContent">
            <summary>
            Gets or sets content to display after loading.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLoaderView.IsLoading">
            <summary>
            Gets or sets loading indicator.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLoaderView.Label">
            <summary>
            Gets or sets description label
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLoaderView.RgaaTextLoading">
            <summary>
            Gets or sets loading rgaa text.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLoaderView.RgaaTextLoaded">
            <summary>
            Gets or sets loading finished rgaa text.  
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLoaderView.Progress">
            <summary>
            Get or sets the progress parameter.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgLoaderView.ProgressType">
            <summary>
            Gets or sets the progress type.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgLoaderView.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgLoaderView.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgLoaderView.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgLoaderView.OnProgress(Lagoon.Helpers.Progress)">
            <summary>
            Running progression.
            </summary>
            <param name="progress">Source.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgLoaderView.OnEndProgress(Lagoon.Helpers.Progress)">
            <summary>
            End of the progression.
            </summary>
            <param name="progress">Source.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgLoaderView.UpdateLoadingState">
            <summary>
            Update the loading state.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgLoaderView.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LgBigMessage">
            <summary>
            Show centred message with icon, title and description.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBigMessage.CssClass">
            <summary>
            Gets or sets the CSS classes.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBigMessage.IconName">
            <summary>
            Gets or sets the icon.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBigMessage.Description">
            <summary>
            Gets or sets the description.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgBigMessage.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgBigMessage.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgEmptyMessage">
            <summary>
            Empty message component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEmptyMessage.CssClass">
            <summary>
            Gets or sets the Class css
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEmptyMessage.IconName">
            <summary>
            Gets or sets the icon
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEmptyMessage.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgEmptyMessage.Title">
            <summary>
            Gets or sets the title
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgEmptyMessage.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgEmptyMessage.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.CloseModalEventArgs">
            <summary>
            Contains close modal event data.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.CloseModalEventArgs.Cancel">
            <summary>
            Indicate if window closing must be cancelled.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.ConfirmEventArgs">
            <summary>
            Contains close confirm event data.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgColorPickerModal">
            <summary>
            Window to show color picker palette.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgColorPickerModal._colors">
            <summary>
            Color list
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColorPickerModal.OnClose">
            <summary>
            Gets or sets on close modal event
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColorPickerModal.CssClass">
            <summary>
            Gets or sets the modal cssclass
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColorPickerModal.Visible">
            <summary>
            Gets or sets modal display
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColorPickerModal.VisibleChanged">
            <summary>
            Event raised when modal show value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColorPickerModal.SelectedColor">
            <summary>
            Gets or sets the selected color.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgColorPickerModal.Palette">
            <summary>
            Palette of availlabled colors.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgColorPickerModal.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgColorPickerModal.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgColorPickerModal.OnCloseClickAsync(System.String)">
            <summary>
            </summary>
            <param name="selectedColor">Selected color</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgConfirm">
            <summary>
            Confirm message modal popup.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgConfirm.ConfirmationMessage">
            <summary>
            Gets or sets the modal message
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgConfirm.ConfirmCallback">
            <summary>
            Gets or sets on close modal event
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgConfirm.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgConfirm.Dispose(System.Boolean)">
            <summary>
            Free event handler(s)
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgConfirm.RenderBodyContent">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgConfirm.RenderFooterContent">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgConfirm.OnAppShowConfirmAsync(System.String,System.Func{System.Threading.Tasks.Task},System.String)">
            <summary>
            Show confirmation message
            </summary>
            <param name="confirmationMessage">confirmation message</param>
            <param name="callBack">Callback</param>
            <param name="title"></param>
        </member>
        <member name="M:Lagoon.UI.Components.LgConfirm.ConfirmAsync(Lagoon.UI.Components.ActionEventArgs)">
            <summary>
            invoked when content change (lost focus)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgModal">
            <summary>
            Container to show in modal window.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgModal._headerId">
            <summary>
            Header unique Id for rgaa
            </summary>
            <returns></returns>
        </member>
        <member name="F:Lagoon.UI.Components.LgModal._id">
            <summary>
            Modal unique Id
            </summary>
            <returns></returns>
        </member>
        <member name="F:Lagoon.UI.Components.LgModal._hasBeenVisible">
            <summary>
            Indicate if the modal has been showed
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgModal._pageTitle">
            <summary>
            Title defined in the LgPage.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgModal._pageIconName">
            <summary>
            Iconname defined in the LgPage.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgModal._pageCssClass">
            <summary>
            CSS classes associated to the LgPage.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgModal._formTrackerList">
            <summary>
            List des form trackers
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgModal._dotNetObjectReference">
            <summary>
            Reference to modal
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgModal._disposeJs">
            <summary>
            Indicate call of the JS dispose 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.NavigationManager">
            <summary>
            Gets or sets the navigation manager service.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.ChildContent">
            <summary>
            Gets or sets modal body content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.FooterContent">
            <summary>
            Gets or sets modal footer content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.Toolbar">
            <summary>
            Get or set the toolbar content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.FormTracker">
            <summary>
            Gets or sets form tracker parent component 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.ParentFormTrackerHandler">
            <summary>
            Parent "FormTrackerHandler".
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.Closable">
            <summary>
            Gets or set modal closable
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.Draggable">
            <summary>
            Gets or sets modal draggable
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.Centered">
            <summary>
            Gets or sets modal centered
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.CssClass">
            <summary>
            Gets or sets the modal cssclass
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.Title">
            <summary>
            Gets or sets the modal title
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.IconName">
            <summary>
            Gets or sets the modal header icon
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.Summary">
            <summary>
            Gets or sets modal description content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.ModalSize">
            <summary>
            Gets or sets the modal size
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.DefaultVisible">
            <summary>
            Gets or sets if the modal is displayed by default.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.Visible">
            <summary>
            Gets or sets modal display
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.VisibleChanged">
            <summary>
            Event raised when modal show value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModal.OnClose">
            <summary>
            Gets or sets on close modal event
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgModal.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgModal.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgModal.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgModal.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgModal.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgModal.RenderBodyContent">
            <summary>
            Modal body content render
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgModal.RenderFooterContent">
            <summary>
            Modal child content render
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgModal.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgModal.GetDialogClassAttribute">
            <summary>
            Get the CSS class attribute for dialog part.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgModal.ShowAsync">
            <summary>
            invoked when display modal
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgModal.CloseAsync">
            <summary>
            Ask to close the modal.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgModal.ForceCloseAsync">
            <summary>
            Close modal without confirmation.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgModal.CloseFromJsAsync">
            <summary>
            Invokable close function
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgModal.Lagoon#UI#Components#Internal#IPageTitleHandler#SetPageTitleAsync(Lagoon.UI.Components.LgPage)">
            <summary>
            Method called by page when title or icon change.
            </summary>
            <param name="page">Page instance.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgModal.GetRenderTitle">
            <summary>
            Gets the modal title.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgModal.GetRenderIconName">
            <summary>
            Gets the modal title.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgModalContainer">
            <summary>
            Container for modal windows.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgModalContainer.ChildContent">
            <summary>
            Render modals
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.LgModalContainer.WindowManager">
            <summary>
            Window Manager
            </summary>
            <value></value>
        </member>
        <member name="M:Lagoon.UI.Components.LgModalContainer.ModalAdded">
            <summary>
            Modal opened
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgModalContainer.ModalRemoved">
            <summary>
            Modal closed
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgModalContainer.ModalChanged">
            <summary>
            Modal changed
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgPager">
            <summary>
            Pager component
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPager.OnChange">
            <summary>
            Gets or sets a callback that updates the bound value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPager.TotalPages">
            <summary>
            Gets or sets the total pages.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPager.CurrentPage">
            <summary>
            Gets or sets the current page.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPager.MaxPagesToDisplay">
            <summary>
            Gets or sets the max pages to display.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPager.DisplayText">
            <summary>
            Display text (First,Last,Next,Previous) if true
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPager.CssClass">
            <summary>
            Gets or sets the Root container class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPager.IsTotalPagesUnknown">
            <summary>
            True if total pages is unknown
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPager.DisableNextButton">
            <summary>
            True to disable next button
            Only used if total pages is unknown
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPager.PagerHelper">
            <summary>
            Pager helper
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgPager.OnChangeAsync(System.Int32)">
            <summary>
            invoked when page change
            </summary>
            <param name="selectedPage">selected page</param>
        </member>
        <member name="T:Lagoon.UI.Components.PagerHelper">
            <summary>
            Pager helper
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.PagerHelper.StartPage">
            <summary>
            Start page
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.PagerHelper.EndPage">
            <summary>
            End page
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.PagerHelper.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.PagerHelper.TotalPages">
            <summary>
            Total Pages
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.PagerHelper.HideLeftPages">
            <summary>
            Return true to hide left pages
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.PagerHelper.HideRightPages">
            <summary>
            Return true to right pages
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.PageActivatedEventArgs">
            <summary>
            Information about the page activation.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.PageActivatedEventArgs.#ctor(System.Threading.CancellationToken)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
        </member>
        <member name="T:Lagoon.UI.Components.PageClosingEventArgs">
            <summary>
            Information about the page closing.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.PageClosingEventArgs.Cancel">
            <summary>
            Gets or sets if the close of the page must be cancelled.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.PageClosingEventArgs.ConfirmationMessage">
            <summary>
            Show a confirmation box if this message is not empty.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.PageLoadEventArgs">
            <summary>
            Information about the page loading.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.PageLoadEventArgs.#ctor(System.Threading.CancellationToken)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgPage">
            <summary>
            Base class for "Page".
            Use Title and Icon to set tab properties in Tabbed mode
            </summary>
            <remark>
            By default an authenticated user is required but can be disabled by adding @attribute [AllowAnonymous()]
            </remark>
        </member>
        <member name="F:Lagoon.UI.Components.LgPage.LOADING_TITLE">
            <summary>
            Title show while loading.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgPage.LOADING_ICON_NAME">
            <summary>
            Icon name to show while loading.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgPage._hasPendingChange">
            <summary>
            Gets or sets if a descriptive property (Title, IconName, ...) changed.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgPage._isActivated">
            <summary>
            Gets or sets if the OnActivated event has been called.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgPage._isCloseAccepted">
            <summary>
            Indicate if the closing event hasn't been cancelled.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgPage._hasPendingTask">
            <summary>
            Indicate if a loading task is already running.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgPage._iconName">
            <summary>
            Icon name for the tab
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgPage._setIconName">
            <summary>
            Get if the page icon name has been set.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgPage._title">
            <summary>
            Title for the tab
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgPage._setTitle">
            <summary>
            Get if the page title has been set.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgPage._cssClass">
            <summary>
            CSS class of the page.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgPage._tabCssClass">
            <summary>
            CSS class for the tab.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgPage._waitingContextList">
            <summary>
            The list of cancellable token for running tasks.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgPage._initialized">
            <summary>
            Time of the intialisation.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPage.PageContext">
            <summary>
            Component provider for waiting context to LgComponent base components.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPage.PageManager">
            <summary>
            Handle the activate, close for the page.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPage.PageTitleHandler">
            <summary>
            Class handling the SetTitle method.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPage.PageCloser">
            <summary>
            Class handling the close method.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPage.PageReloader">
            <summary>
            Class handling the reload method.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPage.FormTrackerHandler">
            <summary>
            Handler for FormTrackers.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPage.Tab">
            <summary>
            Tab information when tab navigation is enabled.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPage.LoadingIconName">
            <summary>
            Get or sets the loading icon name to replace the icon name;
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPage.IconName">
            <summary>
            Gets or sets icon name to display in the tab
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPage.Title">
            <summary>
            Gets or sets title to display in the tab
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPage.ModalCssClass">
            <summary>
            CSS classes to add to the page container.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPage.TabCssClass">
            <summary>
            CSS classes to add to the page container.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPage.FormTracking">
            <summary>
            Getrs or sets trackinf forms for the page
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPage.ChildContent">
            <summary>
            Getrs or sets child content
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.OnGetNewWaitingContext">
            <summary>
            Return a new waiting context with a cancellation token source.
            </summary>
            <returns>A new waiting context with a cancellation token source.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.OnPageManagerActivatedAsync">
            <summary>
            Method called when a tab is activated.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.CallOnActivatedAsync(System.Boolean)">
            <summary>
            Launch the activated method.
            </summary>
            <param name="firstActivation">Gets if it's the first activation of the page.</param>
            <returns>The task.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.WaitOnActivatedAsync(System.Boolean,System.Threading.Tasks.Task,Lagoon.UI.Components.WaitingContext)">
            <summary>
            Wait until the OnLoadAsync or OnActivated task is ended to update the page state.
            </summary>
            <param name="firstActivation">Gets if it's the first activation of the page.</param>
            <param name="onEventTask">Task of the event.</param>
            <param name="wc">The waiting context.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.UpdatePageTitleVoidAsync(System.Boolean)">
            <summary>
            Init the page title after the page is activated.
            </summary>
            <param name="firstActivation">Gets if it's the first activation of the page.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.UpdatePageTitleAsync(System.Boolean)">
            <summary>
            Init the page title after the page is activated.
            </summary>
            <param name="firstActivation">Gets if it's the first activation of the page.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.OnLoadAsync(Lagoon.UI.Components.PageLoadEventArgs)">
            <summary>
            Method invoked when page is initialized.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.OnActivatedAsync(Lagoon.UI.Components.PageActivatedEventArgs)">
            <summary>
            Method invoked when page is re-activated(when the tab is selected).
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.ShouldRender">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.SetTitleAsync(Lagoon.UI.Components.LgPageLink)">
            <summary>
            Set the page title and icon.
            </summary>
            <param name="link">The new page title and icon name from link.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.SetTitleAsync(Lagoon.UI.Components.LgPageLink,System.String)">
            <summary>
            Set the page title and icon.
            </summary>
            <param name="link">The new page title and icon name from link.</param>
            <param name="tabCssClass">CSS class to add to the tab header</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.SetTitleAsync(System.String,System.String)">
            <summary>
            Set the page title.
            </summary>
            <param name="title">The new page title.</param>
            <param name="iconName">The icon namefor the page.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.SetTitleAsync(System.String,System.String,System.String)">
            <summary>
            Set the page title.
            </summary>
            <param name="title">The new page title.</param>
            <param name="iconName">The icon namefor the page.</param>
            <param name="tabCssClass">CSS class to add to the tab header</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.SetTitleAsync(System.String)">
            <summary>
            Set the page title.
            </summary>
            <param name="title">The new page title.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.UpdatePageTitleAsync">
            <summary>
            Ask to tabcontainer or main container to show the page title.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.TryUpdatePageTitleAsync">
            <summary>
            Ask to tabcontainer or main container to show the page title.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.SetTitle(Lagoon.UI.Components.LgPageLink)">
            <summary>
            Set the page title and icon.
            </summary>
            <param name="link">The new page title and icon name from link.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.SetTitle(System.String,System.String)">
            <summary>
            Set the page title.
            </summary>
            <param name="title">The new page title.</param>
            <param name="iconName">The icon namefor the page.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.SetTitle(System.String)">
            <summary>
            Set the page title.
            </summary>
            <param name="title">The new page title.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.OnPageManagerClosingAsync(Lagoon.UI.Components.PageClosingSourceEvent,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Method called when the page is asked to close.
            </summary>
            <param name="sourceEvent">Source event.</param>
            <param name="confirmationMethod">Method to call when the validation message is confirmed.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.HasModificationAsync">
            <summary>
            Indicate if the page contains unsaved modifications.
            </summary>
            <returns><c>true</c> if the page contains unsaved modifications.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.OnCloseConfirmedAsync(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Execute pending action after a closing confirmation.
            </summary>
            <param name="callback">Action to execute.</param>
            <returns>The executing task</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.OnPageManagerCloseAsync">
            <summary>
            Method called when tab is closed.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.OnClosingAsync(Lagoon.UI.Components.PageClosingEventArgs)">
            <summary>
            Methods called when the interface asks to close the current page.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.OnCloseAsync(System.EventArgs)">
            <summary>
            Methods called when the interface asks to close the current page.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.Close">
            <summary>
            Close current page.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.TryCloseAsync">
            <summary>
            Encapsulate async method.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.ForceCloseAsync">
            <summary>
            Close current page without user confirmation.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.CloseAsync(System.Boolean)">
            <summary>
            Close current page.
            </summary>
            <param name="force">Indicate if we must bypass user confirmations.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.Reload">
            <summary>
            Reload current page.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.TryReloadAsync">
            <summary>
            Encapsulate async method.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.ForceReloadAsync">
            <summary>
            Reload current page without user confirmation.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.ReloadAsync(System.Boolean)">
            <summary>
            Reload the current page.
            </summary>
            <param name="force">Indicate if we must bypass user confirmations.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgPage.Refresh">
            <summary>
            Refresh content of the current page
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgPageLink">
            <summary>
            Informations needed to create link on specific page.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPageLink.Uri">
            <summary>
            The URI to use to show the page.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPageLink.Title">
            <summary>
            The page title.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPageLink.IconName">
            <summary>
            The icon name of page.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgPageLink.#ctor(System.String,System.String,System.String)">
            <summary>
            New link instance.
            </summary>
            <param name="uri">URI of the page.</param>
            <param name="title">Title for the page.</param>
            <param name="iconName">Icon name for the page</param>
        </member>
        <member name="M:Lagoon.UI.Components.IWaitingContextProvider.GetNewWaitingContext">
            <summary>
            Return a new waiting context with a cancellation token source.
            </summary>
            <returns>A new waiting context with a cancellation token source.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.PageWaitingContext">
            <summary>
            Class to encapsulate a block of code with encapsulate a long treatment.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.PageWaitingContext._page">
            <summary>
            Page associated.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.PageWaitingContext.#ctor(Lagoon.UI.Components.LgPage)">
            <summary>
            Initialise a new instance.
            </summary>
            <param name="page">Page.</param>
        </member>
        <member name="M:Lagoon.UI.Components.PageWaitingContext.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.WaitingContext">
            <summary>
            Class to encapsulate a block of code with encapsulate a long treatment.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.WaitingContext._isDisposed">
            <summary>
            Flag used to track if we already have disposed this component
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.WaitingContext._cts">
            <summary>
            Cancellation token source.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WaitingContext.CancellationToken">
            <summary>
            Gets the System.Threading.CancellationToken associated.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.WaitingContext.#ctor">
            <summary>
            Initialise a new instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.WaitingContext.Dispose">
            <summary>
            Don't modify the content of this method. If you want to free some resources, use <c>Dispose(bool disposing)</c>
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.WaitingContext.Dispose(System.Boolean)">
            <summary>
            Free used resources
            </summary>
            <param name="disposing">Will be always true, we don't use finalize in this component</param>
        </member>
        <member name="M:Lagoon.UI.Components.WaitingContext.Cancel">
            <summary>
            Communicates a request for cancellation.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.ILgComponentPolicies">
            <summary>
            Interface to use when a component can have a different visual behavior (visible, editable) depending on the roles of the user
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ILgComponentPolicies.PolicyService">
            <summary>
            Service to help policy check for the connected user
            </summary>
            <remark>
            This property should be injected via DI (width [Inject] annotation).
            PolicyService is added by Lagoon as Scoped Service
            </remark>
        </member>
        <member name="P:Lagoon.UI.Components.ILgComponentPolicies.PolicyVisible">
            <summary>
            Get or set the applicable policy to view the control
            </summary>
            <remark>
            This property should be a [Parameter] on component wich implement this interface
            </remark>
        </member>
        <member name="P:Lagoon.UI.Components.ILgComponentPolicies.PolicyEdit">
            <summary>
            Get or set the applicable policy to edit the control
            </summary>
            <remark>
            This property should be a [Parameter] on component wich implement this interface
            </remark>
        </member>
        <member name="P:Lagoon.UI.Components.ILgComponentPolicies.ParentPolicy">
            <summary>
            To retrieve policy defined by <see cref="P:Lagoon.UI.Components.ILgComponentPolicies.ParentPolicy" /> 
            MUST be a [CascadingParameter] 
            </summary>
            <value>CascadingPolicy if defined, null otherwise</value>
        </member>
        <member name="M:Lagoon.UI.Components.ILgComponentPolicies.UpdatePolicyStateAsync(System.Threading.Tasks.Task{Microsoft.AspNetCore.Components.Authorization.AuthenticationState},Lagoon.UI.Components.PolicyState,System.Boolean)">
            <summary>
            Get if the current component can be visible and editable.
            </summary>
            <param name="authenticationStateTask">Task returning informations about the user.</param>
            <param name="state">Result of the policy evaluation.</param>
            <param name="authorizeView">Indicate the state is updated for an authorize view.</param>
            <returns>Get if the current component can be visible or editable.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.ILgComponentPolicies.IsEditableAsync">
            <summary>
            Pré-implemented method to check if IsEditable = true or false according to the current PolicyEdit or ParentPolicy
            </summary>
            <returns>True if editable, false otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.ILgComponentPolicies.IsVisibleAsync">
            <summary>
            Pré-implemented method to check if IsVisible = true or false according to the current PolicyVisible or ParentPolicy
            </summary>
            <returns>True if visible, false otherwise</returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgAuthorizeView">
            <summary>
            Component used to define the 'PolicyVisible' and 'PolicyEdit' properties and apply the defined policies to children 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgAuthorizeView.PolicyService">
            <summary>
            Used to check policy for the connected user
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgAuthorizeView.ChildContent">
            <summary>
            The content that will be displayed if the user is authorized.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgAuthorizeView.NotAuthorized">
            <summary>
            The content that will be displayed if the user is not authorized.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgAuthorizeView.Authorized">
            <summary>
            The content that will be displayed if the user is authorized.
            If you specify a value for this parameter, do not also specify a value for <see cref="P:Lagoon.UI.Components.LgAuthorizeView.ChildContent"/>.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgAuthorizeView.Authorizing">
            <summary>
            The content that will be displayed while asynchronous authorization is in progress.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgAuthorizeView.CssClass">
            <summary>
            Gets or sets the DIV CSS class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgAuthorizeView.ShowDiv">
            <summary>
            Indicate if the LgAuthorizeView should encapsulate it's content in a div
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.LgAuthorizeView.PolicyVisible">
            <summary>
            Get or set the policy wich allow to show a control
            </summary>
            <value>Policy name</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgAuthorizeView.PolicyEdit">
            <summary>
            Get or set the policy wich allow to edit a control
            </summary>
            <value>Policy name</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgAuthorizeView.ParentPolicy">
            <summary>
            To retrieve policy defined by <see cref="P:Lagoon.UI.Components.LgAuthorizeView.ParentPolicy" /> 
            </summary>
            <value>CascadingPolicy if defined, null otherwise</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgAuthorizeView.IsEditable">
            <summary>
            Get or set the 'Editable' state for the current CascadingPolicy component
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgAuthorizeView.IsVisible">
            <summary>
            Get or set the 'Visible' state for the current CascadingPolicy component
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgAuthorizeView.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgAuthorizeView.OnParametersSetAsync">
            <summary>
            Update state on parameter change
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgAuthorizeView.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgAuthorizeView.AuthorizedContent">
            <summary>
            Get the authorized content.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.PolicyService">
            <summary>
            Service that can be used to check if a user belongs to a policy
            </summary>
            <remarks>
            This Class 
                - is added by default as a Scoped Services (and can be accessed via [Inject])
                - should be used by components implementing the interface <see cref="T:Lagoon.UI.Components.ILgComponentPolicies" />
                - LgComponentBase expose the "IsInPolicyAsync" method
            </remarks>
        </member>
        <member name="F:Lagoon.UI.Components.PolicyService._authenticationStateProvider">
            <summary>
            To check authentication state of the current user, roles, claims ...
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.PolicyService._authorizationService">
            <summary>
            To check policies for authenticate user
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.PolicyService._currentUserAuthenticationSate">
            <summary>
            Keep a reference to the authentication state of user to avoid async call to <see cref="F:Lagoon.UI.Components.PolicyService._authenticationStateProvider"/>
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.PolicyService.#ctor(Microsoft.AspNetCore.Components.Authorization.AuthenticationStateProvider,Microsoft.AspNetCore.Authorization.IAuthorizationService)">
            <summary>
            PolicyServices intialisation
            </summary>
            <param name="authenticationStateProvider">AuthenticationState to retrieve authenticated user</param>
            <param name="authorizationService">AuthorizationService to check if user match a policy</param>
        </member>
        <member name="M:Lagoon.UI.Components.PolicyService.IsInPolicyAsync(System.Security.Claims.ClaimsPrincipal,System.String)">
            <summary>
            Check if current user is in a specified policy
            </summary>
            <param name="user">Informations about the user.</param>
            <param name="policy">Policy name to check</param>
            <returns><c>true</c> is user is in policy or if the <paramref name="policy"/> is null or empty; <c>false</c> otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.PolicyService.IsInPolicy(System.String)">
            <summary>
            Check if current user is in a specified policy
            </summary>
            <param name="policy">Policy name to check</param>
            <returns><c>true</c> is user is in policy or if the <paramref name="policy"/> is null or empty; <c>false</c> otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.PolicyService.IsInPolicyAsync(System.String)">
            <summary>
            Check if current user is in a specified policy
            </summary>
            <param name="policy">Policy name to check</param>
            <returns><c>true</c> is user is in policy or if the <paramref name="policy"/> is null or empty; <c>false</c> otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.PolicyService.GetUser">
            <summary>
            Return user ClaimsPrincipal
            </summary>
            <returns>User's claims if authenticated, null otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.PolicyService.GetUserAsync">
            <summary>
            Return user ClaimsPrincipal
            </summary>
            <returns>User's claims if authenticated, null otherwise</returns>
        </member>
        <member name="T:Lagoon.UI.Components.PolicyState">
            <summary>
            Policy state for a component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.PolicyState.IsAuthenticated">
            <summary>
            Gets or sets if the authentication is done.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.PolicyState.Visible">
            <summary>
            Gets or sets if the component display is allowed.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.PolicyState.Editable">
            <summary>
            Gets or sets if the component edition mode is allowed.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.PolicyState.AuthenticationState">
            <summary>
            Gets or sets informations about the user.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.PolicyState.#ctor">
            <summary>
            Initialize a new instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.PolicyState.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="visible">Component is allowed to display.</param>
            <param name="editable">Component is allowed to edit.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgPopover">
            <summary>
            Defines a popover container.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPopover.Id">
            <summary>
            Gets the identifier.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPopover.OnBlur">
            <summary>
            Gets or sets the event raised when the popover loses the focus.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPopover.ChildContent">
            <summary>
            Gets or sets the content that needs to be handled.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPopover.Visible">
            <summary>
            Gets or sets visibility flag.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPopover.AdditionalAttributes">
            <summary>
            Gets or sets a collection of additional attributes.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgPopover.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgPopover.OnBlurInternalAsync">
            <summary>
            The method is invoked when the component loses the focus.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgCircleProgress">
            <summary>
            Component used to display progression.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCircleProgress.ValueCirclePath">
            <summary>
            Gets the circle value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCircleProgress.CircleDash">
            <summary>
            Circle circumference
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCircleProgress.KindAutoSuccess">
            <summary>
            When it's 100%, and the kind parameter is different from "Warning" or "Error", the kind "Success" is used.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgCircleProgress.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgCircleProgress.GetDoneIconName">
            <summary>
            Return the name of the icon when the process is done.
            </summary>
            <returns>The name of the icon when the process is done.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgProgress">
            <summary>
            Component used to display progression.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgProgress._cssProgressKind">
            <summary>
            Button Css class defined by kind value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgProgress.LabelPosition">
            <summary>
            Gets or sets the label position
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgProgress.Striped">
            <summary>
            Gets or sets the striped flag.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgProgress.Animated">
            <summary>
            Gets or sets the animated flag.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgProgress.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgProgress.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgProgress.GetProgressBarClass">
            <summary>
            Gets the progress bar CSS class.
            </summary>
            <returns>The progress bar CSS class</returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgProgressBase">
            <summary>
            Interface to expose the LgSelect property
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgProgressBase.CssClass">
            <summary>
            Gets or sets the CSS classes.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgProgressBase.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgProgressBase.Min">
            <summary>
            Gets or sets the minimum value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgProgressBase.Max">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgProgressBase.Label">
            <summary>
            Gets or sets the label.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgProgressBase.Kind">
            <summary>
            Gets or sets the kind of the button.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgProgressBase.IsIndeterminate">
            <summary>
            Indicate if the status is indeterminate.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgProgressBase.ValuePercent">
            <summary>
            The percentage of the value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgProgressBase.LabelRendering">
            <summary>
            Label to show.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgProgressBase.HasAutoLabel">
            <summary>
            Indicate if a label haven't been set to the component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgProgressBase.IsDone">
            <summary>
            Gets progress done.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgProgressBase.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.GroupOption">
            <summary>
            Column option class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.GroupOption.ElementId">
            <summary>
            Gets the DOM element id.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.GroupOption.Columns">
            <summary>
            Gets or sets columns keys
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.GroupOption.IsRemovable">
            <summary>
            Gets or sets if the group is removable
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.GroupOption.IsMovable">
            <summary>
            Gets or sets if the group is movable
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgGroupOptions">
            <summary>
            Component GroupOptions.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgGroupOptions._draggedGroup">
            <summary>
            The dragged Group
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgGroupOptions._lgModal">
            <summary>
            Lg Modal ref
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgGroupOptions.Columns">
            <summary>
            Gets or sets list of columns
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgGroupOptions.GroupsByOrder">
            <summary>
            Gets or sets list of groups by order
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgGroupOptions.AllowDragDrop">
            <summary>
            Gets or sets if the drag and drop is active
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgGroupOptions.OnSave">
            <summary>
            Gets or sets on close modal event
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgGroupOptions.OnClose">
            <summary>
            Gets or sets on close modal event
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgGroupOptions.DisableAddButton">
            <summary>
            Return true if user can not add column
            Can not have more than 5 groups
            </summary>
            <returns></returns>
        </member>
        <member name="P:Lagoon.UI.Components.LgGroupOptions.DisableSaveButton">
            <summary>
            Return true if user can not save
            Can not have an empty group
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgGroupOptions.RemoveGroup(Lagoon.UI.Components.GroupOption)">
            <summary>
            Remove the group
            </summary>
            <param name="group"></param>
        </member>
        <member name="M:Lagoon.UI.Components.LgGroupOptions.AddGroup">
            <summary>
            Add a group
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgGroupOptions.GetAvailableColumns(System.Collections.Generic.List{System.String})">
            <summary>
            Get a list of available columns to choose from
            </summary>
            <param name="columns"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgGroupOptions.SaveGroupOptionsAsync">
            <summary>
            Save group options
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgGroupOptions.GetItemCssClass(Lagoon.UI.Components.GroupOption)">
            <summary>
            Get a group line CSS class.
            </summary>
            <param name="groupOption">The grup</param>
            <returns>The CSS class.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgGroupOptions.HandleDragStart(Microsoft.AspNetCore.Components.Web.DragEventArgs,Lagoon.UI.Components.GroupOption)">
            <summary>
            Drag and drop Start
            </summary>
            <param name="args">Drag event</param>
            <param name="draggedGroup">The dragged group</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgGroupOptions.HandleDrop(Lagoon.UI.Components.GroupOption)">
            <summary>
            Drag and drop End
            </summary>
            <param name="droppedGroup">the dropped group</param>
        </member>
        <member name="F:Lagoon.UI.Components.LgGroupOptions.groupOptionToFocus">
            <summary>
            Flag used to focus moved group after Render
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgGroupOptions.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Remark ElementReference will be available only after OnAfterRender/OnAfterRenderAsync
            </summary>
            <param name="firstRender">Is it the first render for this component ?</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgGroupOptions.ChangeColumn(Microsoft.AspNetCore.Components.ChangeEventArgs,System.Collections.Generic.List{System.String})">
            <summary>
            Fill list of selected columns of a group
            </summary>
            <param name="args"></param>
            <param name="columns"></param>
        </member>
        <member name="M:Lagoon.UI.Components.LgGroupOptions.ShowAsync">
            <summary>
            Invoked to display the group options modal
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.SaveGroupOptionsEventArgs">
            <summary>
            Contains save 'group options' event data.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.SaveGroupOptionsEventArgs.#ctor(System.Collections.Generic.List{Lagoon.UI.Components.GroupOption})">
            <summary>
            Constructor
            </summary>
            <param name="groupsByOrder">list of groups</param>
        </member>
        <member name="P:Lagoon.UI.Components.SaveGroupOptionsEventArgs.GroupsByOrder">
            <summary>
            Gets list of groups
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgSelectionView">
            <summary>
            Component displaying its content if there is a selection.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSelectionView.SelectedItemsCount">
            <summary>
            Get the number of selected values from a int cascading value.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSelectionView.ChildContent">
            <summary>
            Child content of the component if the selected items count is between <see cref="P:Lagoon.UI.Components.LgSelectionView.MinimumSelectionCount" /> and <see cref="P:Lagoon.UI.Components.LgSelectionView.MaximumSelectionCount" />.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSelectionView.MinimumSelectionCount">
            <summary>
            Gets or sets the minimum number of items that must be selected to show the component.
            Defauly value : 1
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSelectionView.MaximumSelectionCount">
            <summary>
            Gets or sets the maximum number of selected items before hide the component.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectionView.BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Lagoon.UI.Components.LgSelectionView.IsSelectionVisible">
            <summary>
            Indicate if the number of selected items allow the display of the component
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.ActivateTabEventArgs">
            <summary>
            Arguments of the active tab event
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ActivateTabEventArgs.Tab">
            <summary>
            Gets unique id of the active tab
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.ActivateTabEventArgs.#ctor(Lagoon.UI.Components.ITab)">
            <summary>
            Initialise new instance.
            </summary>
            <param name="tab">Tab identifier.</param>
        </member>
        <member name="T:Lagoon.UI.Components.CloseTabEventArgs">
            <summary>
            Arguments of the remove tab event
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.CloseTabEventArgs.Key">
            <summary>
            Gets unique id of the active tab
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.CloseTabEventArgs.#ctor(System.String)">
            <summary>
            Initialise new instance.
            </summary>
            <param name="key">Tab identifier.</param>
        </member>
        <member name="T:Lagoon.UI.Components.ClosingTabEventArgs">
            <summary>
            Arguments of the remove tab event
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ClosingTabEventArgs.Cancel">
            <summary>
            Gets or sets if the tab close must be cancelled.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ClosingTabEventArgs.Key">
            <summary>
            Gets unique id of the active tab
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.ClosingTabEventArgs.#ctor(System.String)">
            <summary>
            Initialise new instance.
            </summary>
            <param name="key">Tab identifier.</param>
        </member>
        <member name="T:Lagoon.UI.Components.DropTabEventArgs">
            <summary>
            Arguments of the dropping tab event
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.DropTabEventArgs.Key">
            <summary>
            Gets unique id of the active tab
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.DropTabEventArgs.DropIndex">
            <summary>
            Gets or sets index of the dropped tab
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.DropTabEventArgs.#ctor(System.String,System.Int32)">
            <summary>
            Initialise new instance.
            </summary>
            <param name="key">Tab identifier.</param>
            <param name="dropIndex">Drop position.</param>
        </member>
        <member name="T:Lagoon.UI.Components.PinTabEventArgs">
            <summary>
            Arguments of the pinned tab event
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.PinTabEventArgs.Key">
            <summary>
            Gets unique id of the active tab
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.PinTabEventArgs.#ctor(System.String)">
            <summary>
            Initialise new instance.
            </summary>
            <param name="key">Tab identifier.</param>
        </member>
        <member name="T:Lagoon.UI.Components.ITab">
            <summary>
            Tab informations.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ITab.Key">
            <summary>
            Identifier of the tab.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ITab.Uri">
            <summary>
            Uri of the tab.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgStartupTab">
            <summary>
            Define a tab that must be openned when the application start.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgStartupTab.TabContainer">
            <summary>
            Application tab container.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgStartupTab.Uri">
            <summary>
            The URI to use to show the page.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgStartupTab.Title">
            <summary>
            The page title.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgStartupTab.IconName">
            <summary>
            The icon name of page.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgStartupTab.Link">
            <summary>
            Link to the page to open.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgStartupTab.Closable">
            <summary>
            Gets or sets if the tab is closable.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgStartupTab.Default">
            <summary>
            Gets or sets if the tab is activated by default.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgStartupTab.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LgSideTab">
            <summary>
            Tab of the side container
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSideTab.ButtonContent">
            <summary>
            Gets or sets the tab button content.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSideTab.CssClass">
            <summary>
            Gets or sets css class
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgSideTab.OnRegisterTab(Lagoon.UI.Components.Internal.LgTabRenderData)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSideTab.OnUnregisterTab(Lagoon.UI.Components.Internal.LgTabRenderData)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSideTab.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSideTab.GetAdditionalAttributes">
            <summary>
            Return the ARIA and tooltip attributes for the tab button.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgSideTabContainer">
            <summary>
            Tab container with navigation in side panel.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSideTabContainer.CssClassHead">
            <summary>
            Gets or sets css class of the header
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgSideTabContainer.CssClassContent">
            <summary>
            Gets or sets css class of the container
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgSideTabContainer.#ctor">
            <summary>
            Initialise a new instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgSideTabContainer.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgSideTabContainer.GetSidePanelCssClass">
            <summary>
            Return the CSS classes of the left panel.
            </summary>
            <returns>The CSS classes of the left panel.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgSideTabContainer.GetContentPanelCssClass">
            <summary>
            Return the CSS classes of the left panel.
            </summary>
            <returns>The CSS classes of the left panel.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgTab">
            <summary>
            Component Tab
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTab.Closable">
            <summary>
            Gets or sets if the tab is closable
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTab.Draggable">
            <summary>
            Gets or sets if the tab can be moved
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgTab.OnInitTabData(Lagoon.UI.Components.Internal.LgTabData)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LgTabContainer">
            <summary>
            Tab container
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTabContainer.BeforeHeaderContent">
            <summary>
            Content to place at the beginning of the header.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTabContainer.AfterHeaderContent">
            <summary>
            Content to place at the end of the header.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTabContainer.AllowClose">
            <summary>
            Gets or sets if the tabs can be closed
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTabContainer.AllowDragDrop">
            <summary>
            Gets or sets if the tabs can be moved
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTabContainer.ShowTabList">
            <summary>
            Show in the toolbar, the dropdown menu of the list of openned tabs.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgTabContainer.OnDropTab">
            <summary>
            Drop tab event
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgTabContainer.#ctor">
            <summary>
            Initialise a new instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgTabContainer.OpenTabAsync(System.String,System.Boolean)">
            <summary>
            Open tab by its Uri
            </summary>
            <param name="uri">URI of the page to open</param>
            <param name="closable">Indicate if the table is closable.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgTabContainer.DropTab(Lagoon.UI.Components.DropTabEventArgs)">
            <summary>
            Drop tab management
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Lagoon.UI.Components.LgTabContainer.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.Toastr.Internal.LgToastr">
            <summary>
            Toast message component.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Toastr.Internal.LgToastr.OnInitialized">
            <summary>
            LgToastr initialization
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Toastr.Internal.LgToastr.OnApplicationShowToastrAsync(System.String,System.String,Lagoon.UI.Components.Level,System.Boolean)">
            <summary>
            Display toastr
            </summary>
            <param name="message">Toastr message</param>
            <param name="title">Toastr title</param>
            <param name="level">Toastr level</param>
            <param name="escapeHtml">Indicate if the message and the title are using raw text or HTML format.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Toastr.Internal.LgToastr.ShowToastAsync(System.String,System.String,Lagoon.UI.Components.Level,System.Boolean)">
            <summary>
            Show a toastr message.
            </summary>
            <param name="message">Toastr title</param>
            <param name="title">Toastr message</param>
            <param name="level">Toastr level</param>
            <param name="escapeHtml">Indicate if the message and the title are using raw text or HTML format.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Toastr.Internal.LgToastr.Dispose(System.Boolean)">
            <summary>
            Free event handler(s)
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgToastrOptions">
            <summary>
            Toastr parameters
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToastrOptions.CloseButton">
            <summary>
            Show a close button
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToastrOptions.Debug">
            <summary>
            Toastr debug mode
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToastrOptions.NewestOnTop">
            <summary>
            Show new message on top if true, append a the end otherwise
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToastrOptions.ProgressBar">
            <summary>
            Show a progress bar which indicates the display time
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToastrOptions.PreventDuplicates">
            <summary>
            Don't display to message at the same time with the same content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToastrOptions.Position">
            <summary>
            Toastr position
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.LgToastrOptions.PositionClass">
            <summary>
            Toastr position class.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToastrOptions.Onclick">
            <summary>
            Toastr onclick event callback
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToastrOptions.ShowDuration">
            <summary>
            Show animation duration (ms)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToastrOptions.HideDuration">
            <summary>
            Hide animation duration (ms)
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.LgToastrOptions.TimeOut">
            <summary>
            Delay before hiding messages non error messages.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToastrOptions.ExtendedTimeOut">
            <summary>
            Delay before hidding messages after hover.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToastrOptions.ShowEasing">
            <summary>
            CSS Show transition
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToastrOptions.HideEasing">
            <summary>
            CSS hide transition
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToastrOptions.ShowMethod">
            <summary>
            CSS show transition animation
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToastrOptions.HideMethod">
            <summary>
            CSS hide transition animation
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgCrudToolbarButton">
            <summary>
            CRUD Toolbar button
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCrudToolbarButton.OnSave">
            <summary>
            Gets or sets the save button Onclick eventCallback
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCrudToolbarButton.OnSaveConfirmationMessage">
            <summary>
            Gets or sets the confirmation message to show before doing the save action.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCrudToolbarButton.SaveButtonTooltip">
            <summary>
            Gets or sets the save button tooltip.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCrudToolbarButton.SaveButtonAria">
            <summary>
            Gets or sets the save button aria label.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCrudToolbarButton.OnRemove">
            <summary>
            Gets or sets the remove button Onclick eventCallback
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCrudToolbarButton.OnRemoveConfirmationMessage">
            <summary>
            Gets or sets the confirmation message to show before doing the remove action.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCrudToolbarButton.RemoveButtonTooltip">
            <summary>
            Gets or sets the remove button tooltip.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgCrudToolbarButton.RemoveButtonAria">
            <summary>
            Gets or sets the remove button aria label.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.LgToolbar">
            <summary>
            Toolbar component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbar.CssClass">
            <summary>
            Gets or sets the Root container class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbar.ChildContent">
            <summary>
            Gets or sets the child content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbar.ButtonKind">
            <summary>
            Get or sets the default button kind for the buttons.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbar.ButtonSize">
            <summary>
            Gets or sets the buttons size into toolbar.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbar.GroupKind">
            <summary>
            Get or sets the default button kind for the buttons.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgToolbar.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgToolbar.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgToolbarButton">
            <summary>
            Toolbar button
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbarButton.Toolbar">
            <summary>
            Parent toolbar object
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbarButton.ToolbarMenuParent">
            <summary>
            Parent ToolbarMenu object
            </summary>
            <value></value>
        </member>
        <member name="M:Lagoon.UI.Components.LgToolbarButton.#ctor">
            <summary>
            Initialize new instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgToolbarButton.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgToolbarButton.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgToolbarButton.HasAction">
            <summary>
            Check if onclick is defined
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.LgToolbarGroup">
            <summary>
            Toolbar items group.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbarGroup.Toolbar">
            <summary>
            Parent toolbar object
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbarGroup.CssClass">
            <summary>
            Gets or sets the CSS classes.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbarGroup.Kind">
            <summary>
            Gets or sets the group kind
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbarGroup.ChildContent">
            <summary>
            Gets or sets the child content
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgToolbarGroup.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgToolbarGroup.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgToolbarMenu">
            <summary>
            Toolbar component.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbarMenu.CssClass">
            <summary>
            Gets or sets the CSS classes.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbarMenu.Kind">
            <summary>
            Gets or sets the menu button kind
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbarMenu.Text">
            <summary>
            Gets or sets the button label
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbarMenu.IconName">
            <summary>
            Gets or sets the button icon name
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbarMenu.ChildContent">
            <summary>
            Gets or sets the child content
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbarMenu.Toolbar">
            <summary>
            Gets or sets parent toolbar object
            </summary>
            <value></value>
        </member>
        <member name="M:Lagoon.UI.Components.LgToolbarMenu.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgToolbarMenuItemSeparator">
            <summary>
            Toolbar menu item separators.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbarMenuItemSeparator.CssClass">
            <summary>
            Gets or sets the CSS classes.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgToolbarMenuItemSeparator.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgToolbarMenuItemTitle">
            <summary>
            Toolbar menu items.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbarMenuItemTitle.CssClass">
            <summary>
            Gets or sets the CSS classes.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgToolbarMenuItemTitle.Text">
            <summary>
            Gets or sets the toolabr menu item title object
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgToolbarMenuItemTitle.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <summary>
            Add CSS classes to the "class" attribute.
            </summary>
            <param name="builder">CSS class builder.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgValidationBase">
            <summary>
            Provides a base implementation for validation related classes.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgValidationBase.CssClass">
            <summary>
            Gets or sets the CSS class
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgValidationBase.EditContext">
            <summary>
            Gets or sets the form editing context .
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgValidationBase.ErrorsDisplayOptions">
            <summary>
            Gets or sets the error display option for this <see cref="T:Lagoon.UI.Components.LgValidationSummary" />.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgValidationBase.CascadingErrorsDisplayOptions">
            <summary>
            Gets or sets the optional cascading parameter provided by <see cref="T:Lagoon.UI.Components.LgEditForm" />.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgValidationBase.ActualErrorsDisplayOptions">
            <summary>
            Gets the error display options.
            </summary>
            <remarks>The options are retrieved in that order: local => cascading => application configuration.</remarks>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidationBase.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LgValidationMessage`1">
            <summary>
            Validator used by input to display validation's message
            </summary>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.LgValidationMessage`1.For">
            <summary>
            Gets or sets the linked field's identifier.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgValidationMessage`1._fieldIdentifier">
            <summary>
            The linked field.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidationMessage`1.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidationMessage`1.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidationMessage`1.HandleValidationStateChanged(System.Object,Microsoft.AspNetCore.Components.Forms.ValidationStateChangedEventArgs)">
            <summary>
            EditContext validation changes : notify ui
            </summary>
            <param name="o"></param>
            <param name="args"></param>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidationMessage`1.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LgValidationSummary">
            <summary>
            Add a validation summary inside EditForm. 
            This component is automatically added in <see cref="T:Lagoon.UI.Components.LgEditForm" />
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgValidationSummary.Title">
            <summary>
            Optionnal title added before error message list
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidationSummary.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidationSummary.Dispose(System.Boolean)">
            <summary>
            Unsubscribe from validation events
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidationSummary.OnValidationRequested(System.Object,Microsoft.AspNetCore.Components.Forms.ValidationRequestedEventArgs)">
            <summary>
            Show validation message at the beginning of the form
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidationSummary.OnBuildClassAttribute(Lagoon.UI.Components.LgCssClassBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LgValidator">
            <summary>
            Component to handle validation.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgValidator.messageStore">
            <summary>
            The list of errors to display.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgValidator._errors">
            <summary>
            The current error list.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgValidator.HasError">
            <summary>
            Returns <c>true</c> if we have at least one error to display, <c>false</c> otherwise.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgValidator.Title">
            <summary>
            Gets or sets the title displayed in the toastr error message
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidator.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidator.OnValidationRequested(System.Object,Microsoft.AspNetCore.Components.Forms.ValidationRequestedEventArgs)">
            <summary>
            Clears the errors list before new validation requests.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidator.OnFieldChanged(System.Object,Microsoft.AspNetCore.Components.Forms.FieldChangedEventArgs)">
            <summary>
            Removes the errors for updated field.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidator.ShowMessageInToastr">
            <summary>
            Displays the errors (or a generic message) if any in the application toastr.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidator.ShowMessageList(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Show all validation messages in the toastr.
            </summary>
            <param name="messages">List of the messages.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidator.ThrowPendingErrors(System.Boolean)">
            <summary>
            Displays the errors list.
            </summary>
            <param name="showInToastr">Errors to display</param>
            <exception cref="T:Lagoon.UI.Helpers.LgValidationException"></exception>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidator.ClearErrors">
            <summary>
            Clears all the errors.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidator.AddError(System.String,System.String)">
            <summary>
            Adds an error message for a specific field.
            </summary>
            <param name="fieldName">The name of the field.</param>
            <param name="errorMessage">The error to display (string or dico key).</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidator.AddErrorList(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}})">
            <summary>
            Add a set of errors 
            </summary>
            <param name="errors">Errors to show</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidator.SetErrorList(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}})">
            <summary>
            Add a set of errors 
            </summary>
            <param name="errors">Errors to show</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgValidator.Dispose(System.Boolean)">
            <summary>
            Dispose resources
            </summary> 
        </member>
        <member name="T:Lagoon.UI.Components.TimelineMode">
            <summary>
            Supported timeline mode
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.TimelineMode.YearMonth">
            <summary>
            Year on fist line, month on second line
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.TimelineMode.MonthDay">
            <summary>
            Month on first line, days on second line
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.TimelineMode.DayAmPm">
            <summary>
            Day on first line, Am/Pm on second line
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.TimelineMode.MonthWeek">
            <summary>
            Month on first line, week number on second line
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.DisplayMode">
            <summary>
            LgWorkScheduler display modes
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.DisplayMode.Timeline">
            <summary>
            Bars and Milestones with project list
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.DisplayMode.Agenda">
            <summary>
            Calendar mode (x: hours, y: month/days or other timeline)
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.GroupState">
            <summary>
            Group state
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.GroupState.Open">
            <summary>
            The group is open
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.GroupState.Close">
            <summary>
            The group is close
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.GroupItem`1">
            <summary>
            Class used to store grouping data
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.GroupItem`1.Key">
            <summary>
            Group key
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.GroupItem`1.GroupLevel">
            <summary>
            Group level
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.GroupItem`1.Closed">
            <summary>
            Group state (<c>true</c> for collapsed)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.GroupItem`1.Items">
            <summary>
            Data in this group
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.WorkScheduler.Internal.AgendaProjectTimeline`1">
            <summary>
            Internal component used to draw a timeline inside project area
            </summary>
            <typeparam name="TItem">Item data type</typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.AgendaProjectTimeline`1._lgWorkScheduler">
            <summary>
            Parent component
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.WorkScheduler.Internal.ProjectViewGroup`1">
            <summary>
            Internal component used to draw the Project area
            </summary>
            <typeparam name="TItem">Data item type</typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.ProjectViewGroup`1._lgWorkScheduler">
            <summary>
            Get or set the parent component
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.ProjectViewGroup`1.RowHeight">
            <summary>
            Shortcut for LgWorkScheduler RowHeight
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.ProjectViewGroup`1.GroupByLevel">
            <summary>
            Get or set the current grouping level
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.ProjectViewGroup`1.GroupKey">
            <summary>
            Get or set the current group key
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.ProjectViewGroup`1.CurrentGroup">
            <summary>
            Current group. If null Items will be used as first grouping element
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.WorkScheduler.Internal.SchedulerViewGroup`1">
            <summary>
            Internal component used to draw the Schedule area
            </summary>
            <typeparam name="TItem">Data item type</typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.SchedulerViewGroup`1._lgWorkScheduler">
            <summary>
            Get or set the parent component
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.SchedulerViewGroup`1.RowHeight">
            <summary>
            Shortcut for LgWorkScheduler RowHeight
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.SchedulerViewGroup`1.GroupByLevel">
            <summary>
            Get or set the current grouping level
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.SchedulerViewGroup`1.GroupKey">
            <summary>
            Get or set the current group key
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.SchedulerViewGroup`1.CurrentGroup">
            <summary>
            Current group. If null Items will be used as first grouping element
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLDayAmPm`1">
            <summary>
            Timeline with Month on first row, Am / Pm on second rows
            </summary>
            <typeparam name="TItem">IWorkSchedulerData</typeparam>
        </member>
        <member name="T:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLMonthDay`1">
            <summary>
            Timeline with Month on first row, day number on second row
            </summary>
            <typeparam name="TItem">IWorkSchedulerData</typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLMonthDay`1.TimelineRowHeight">
            <summary>
            Timeline height
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLMonthDay`1.DayWidth">
            <summary>
            Return the number of px to used for one day
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLMonthDay`1.IsToday(System.DateTime)">
            <summary>
            Check if this date is today
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLMonthDay`1.GetDisplayDays(System.Int32,System.Int32)">
            <summary>
            How many days to display for this year/month (with From / To constraints)
            </summary>
            <param name="year">Year</param>
            <param name="month">Mont</param>
            <returns>Days count excluding From/To start area</returns>
        </member>
        <member name="T:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLMonthWeek`1">
            <summary>
            Timeline with Month on first row, day number on second row
            </summary>
            <typeparam name="TItem">IWorkSchedulerData</typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLMonthWeek`1.LgWorkScheduler">
            <summary>
            Parent component
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLMonthWeek`1._timelineRowHeight">
            <summary>
            Timeline height
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLMonthWeek`1._dayWidth">
            <summary>
            Number of ox representing a day
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLMonthWeek`1._zoomLevel">
            <summary>
            Acutal zoom level
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLMonthWeek`1.TimelineRowHeight">
            <summary>
            Timeline height
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLMonthWeek`1.DayWidth">
            <summary>
            Number of ox representing a day
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLMonthWeek`1.IsToday(System.DateTime)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLYearMonth`1">
            <summary>
            Timeline with Year on first level and month on second level
            </summary>
            <typeparam name="TItem">WorkScheduler item type</typeparam>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLYearMonth`1.LgWorkScheduler">
            <summary>
            Parent component
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLYearMonth`1._timelineRowHeight">
            <summary>
            Timeline height
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLYearMonth`1._dayWidth">
            <summary>
            Number of ox representing a day
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLYearMonth`1._zoomLevel">
            <summary>
            Acutal zoom level
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLYearMonth`1.TimelineRowHeight">
            <summary>
            Timeline height
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLYearMonth`1.DayWidth">
            <summary>
            Number of ox representing a day
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLYearMonth`1.IsToday(System.DateTime)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.TLYearMonth`1.GetDisplayDays(System.Int32,System.Int32)">
            <summary>
            How many days to display for this year/month (with From / To constraints)
            </summary>
            <param name="year">Year</param>
            <param name="month">Mont</param>
            <returns>Days count excluding From/To start area</returns>
        </member>
        <member name="T:Lagoon.UI.Components.WorkScheduler.Internal.Timelines.WsTimeline`1">
            <summary>
            Workscheduler timeline manager
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="T:Lagoon.UI.Components.LgWorkScheduler`1">
            <summary>
            Component used to display workload in a schedule view
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.OnSort">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.Timeline">
            <summary>
            Get or set the timeline mode
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.DisplayMode">
            <summary>
            LgWorkScheduler display mode
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.AgendaRowStep">
            <summary>
            Used when <c>DisplayMode</c>=<c>DisplayMode.Agenda</c> to specify vertical axis increments in minutes
            </summary>
            <value>30 minutes by default</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.AgendaHoursFrom">
            <summary>
            Used when <c>DisplayMode</c>=<c>DisplayMode.Agenda</c> to specify vertical axis start time
            </summary>
            <value>0h as default value</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.AgendaHoursTo">
            <summary>
            Used when <c>DisplayMode</c>=<c>DisplayMode.Agenda</c> to specify vertical axis stop time
            </summary>
            <value>23h as default value</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.AgendaHoursFromHighlight">
            <summary>
            Used when <c>DisplayMode</c>=<c>DisplayMode.Agenda</c> to specify vertical axis highlight start time
            </summary>
            <value>8h by default</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.AgendaHoursToHighlight">
            <summary>
            Used when <c>DisplayMode</c>=<c>DisplayMode.Agenda</c> to specify vertical axis highlight stop time
            </summary>
            <value>19h by default</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.TimelineHeight">
            <summary>
            Get or set the timeline height in px. 50px by default
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.ShowWeekend">
            <summary>
            Get or set a value indicating if weekend should be displayed or not
            </summary>
            <value><c>true</c> by default</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.From">
            <summary>
            Get or set the start date displayed.
            If not set the <c>From</c> value will be retrieved from datasource
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.To">
            <summary>
            Get or set the end date displayed
            If not set the <c>To</c> value will be retrieved from datasource
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.ZoomLevel">
            <summary>
            Get or set the amount of pixels representing one hour
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.ProjectListWidth">
            <summary>
            Get or set the value in pixel of project list width. 200px by default
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.RowHeight">
            <summary>
            Get or set the value in pixel of a row height
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.PaddingRow">
            <summary>
            Get or set the value in pixel of a row padding
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.Items">
            <summary>
            Get or set data
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.ItemsChanged">
            <summary>
            Gets or sets event for the binding
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.ShowMouseIndicator">
            <summary>
            Get or set a flag to show / hide mouse position. 
            </summary>
            <value><c>true</c> by default</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.VirtualScrolling">
            <summary>
            Get or set a value indicating if virtual scrolling functionnality is enable or not. 
            Should be used when you have a lot of data to display
            </summary>
            <value><c>false</c> by default</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.ShowProjectResizing">
            <summary>
            Get or set a value indicating if the project list should be resizable by dragging an element
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.RowField">
            <summary>
            Field to use for groupping rows
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.GroupBy">
            <summary>
            Get or set the list of GroupBy properties to apply on <see cref="P:Lagoon.UI.Components.LgWorkScheduler`1.Items" /> data
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.OrderBy">
            <summary>
            Field to use for groupping rows
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.GroupMargin">
            <summary>
            Get or set the margin identation used to display grouped data (30px by default)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.DefaultGroupsState">
            <summary>
            Get or set the default group state <see cref="T:Lagoon.UI.Components.GroupState"/>. (Closed by default)
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.DefaultJalonCssClass">
            <summary>
            Classe Css utilisé par défaut pour le rendu des jalons. Valeur par défaut "wk-milestone-square"
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.ProjectHeader">
            <summary>
            Get or set the RenderFragment used to display a header for project 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.ProjectItems">
            <summary>
            Get or set the RenderFragement used to display row in project list area
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.ProjectItemsGroup">
            <summary>
            Get or set the RenderFragement used to display Group in project list area
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.SchedulerItems">
            <summary>
            Get or set the RenderFragement used to display bar and milestones 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.SchedulerItemsGroup">
            <summary>
            Get or set the RenderFragement used to display bar and milestones 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.AgendaHoursRender">
            <summary>
            Get or set the RenderFragement used to display bar and milestones 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.TimelineFirstLevel">
            <summary>
            Get or set the RenderFragment used to display the first level of the timeline
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.TimelineSecondLevel">
            <summary>
            Get or set the RenderFragment used to display the second level of the timeline
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.ChildContent">
            <summary>
            Should not be used ...
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.OnInitialized">
            <summary>
            Create a reference to this component instance and register a js callback when gripper position change
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Attach an event listener to detect window size change and synchronise scrollbar
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.ScrollToTodayAsync">
            <summary>
            Try to set the horizontal scrollbar to current day
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.GetTaskPosition(`0)">
            <summary>
            Return the horizontal position of a task (depending on it's From date, 1st date displayed and weekend displayed or not)
            </summary>
            <param name="item">Item for which we want the horizontal position in px</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.GetTaskWidth(`0)">
            <summary>
            Return the width of a task (depending on it's duration and weekend displayed or not)
            </summary>
            <param name="item">Item for which we want the duration in px</param>
            <returns>A duration in px according to ZoomLevel</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.OnScrollChanged(System.Int32,System.Int32)">
            <summary>
            Retrieve vertical scroll position and update visibles rows according to scroll position
            </summary>
            <param name="scrollPosition">Vertical scroll position</param>
            <param name="height">Main container height</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.OnHeightChanged(System.Int32)">
            <summary>
            When available height is update, redraw the view
            </summary>
            <param name="height">New available height</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.GetVisibleItems(System.Boolean)">
            <summary>
            Get visible items. In VirtualScrolling mode, visible items are based on scroll position
            </summary>
            <param name="groupByRowField">if <c>true</c> the datasource will be grouped on RowField + return first + counted as one row. Otherwise it will return all visible items + counted as one row</param>
            <returns>Visible items from the datasource</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.CountVisibleRows(System.Boolean,System.Int32,System.Linq.IGrouping{System.Object,`0},System.String)">
            <summary>
            Return the number of visible row
            </summary>
            <param name="ignoreGroupState">If <c>true</c> ignore groupe state (Open/Close)</param>
            <param name="groupLevel">Current grouping level</param>
            <param name="currentGroup">Current group</param>
            <param name="groupKey">Current groupKey</param>
            <returns>Return the number of visible row</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.GetSortedItems">
            <summary>
            Returns all binded data with orderby applied if handled by the dev
            </summary>
            <returns>List of TItems</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.CollapseGroup(System.String)">
            <summary>
            Collapse/Expand a group by it's key
            </summary>
            <param name="key">Group key identifier</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.IsGroupOpen(System.String)">
            <summary>
            Check if a group is opened
            </summary>
            <param name="key">Group key to check</param>
            <returns><c>true</c> for opened group, <c>false</c> for collapsed group</returns>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.AlternanceColumnCount">
            <summary>
            Return the number of column alternance to match timeline column.
            Depending on timeline mode
            </summary>
            <value>Number of columns to display</value>
        </member>
        <member name="P:Lagoon.UI.Components.LgWorkScheduler`1.TotalTimelineWidth">
            <summary>
            Return the width of the timeline in px. Depending on From/To datetime, zoom level and weekend displayed or not
            </summary>
            <value>The width of the timeline in px</value>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.IsWeekend(System.DateTime)">
            <summary>
            Check if a date is a weekend
            </summary>
            <param name="d">Date to check</param>
            <returns><c>true</c> if 'd' is a weekend, false otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.NbWeekend(System.Int32,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Return weekend count for a particular month
            </summary>
            <param name="year">Year date part</param>
            <param name="month">Month date part</param>
            <param name="startingDay">An optionnal starting day</param>
            <returns>Weekend count</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.NbWeekend(System.DateTime,System.DateTime)">
            <summary>
            Return weekend count between to date
            </summary>
            <param name="from">Start date</param>
            <param name="to">End date</param>
            <returns>Weekend count</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.IsAgendaRowHighlight(System.DateTime)">
            <summary>
            Check if t is between highlighted row
            </summary>
            <param name="t">Time to check</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.GetAgendaTaskPosition(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Lagoon.UI.Components.LgWorkScheduler`1.Dispose(System.Boolean)">
            <summary>
            Free event handlers
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.DataCalculationType">
            <summary>
            Calculation type 
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.DataCalculationType.None">
            <summary>
            Not active
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.DataCalculationType.Count">
            <summary>
            Number of elements
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.DataCalculationType.Sum">
            <summary>
            Sum
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.DataCalculationType.Average">
            <summary>
            Average
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.DataCalculationType.Min">
            <summary>
            Min value
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.DataCalculationType.Max">
            <summary>
            Max value
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.DynamicModal">
            <summary>
            Modal parameters
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.DynamicModal.Key">
            <summary>
            Gets or sets unique key
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.DynamicModal.Title">
            <summary>
            Gets or sets title
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.DynamicModal.CssClass">
            <summary>
            Gets or sets css class
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.DynamicModal.ModalSize">
            <summary>
            Gets or sets modal size
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.DynamicModal.Show">
            <summary>
            Gets or sets display state
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.DynamicModal.IsConfirm">
            <summary>
            Gets or sets if modal is an confirm
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.DynamicModal.ConfirmMessage">
            <summary>
            Gets or sets confirmation message
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.DynamicModal.ConfirmCallback">
            <summary>
            Gets or sets on close modal event
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Components.DynamicModal.RouteData">
            <summary>
            Gets or sets route of the modal content
            </summary>
            <value></value>
        </member>
        <member name="T:Lagoon.UI.Components.ActionEventArgs">
            <summary>
            Event with "CancelationToken".
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.ActionEventArgs._cancellationToken">
            <summary>
            Propagates notification that operations should be canceled.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.ActionEventArgs.CancellationToken">
            <summary>
            Propagates notification that operations should be canceled.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.ActionEventArgs.#ctor">
            <summary>
            Initialize a new instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.ActionEventArgs.#ctor(Lagoon.UI.Components.WaitingContext)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="waitingContext">Waiting context.</param>
        </member>
        <member name="M:Lagoon.UI.Components.ActionEventArgs.#ctor(System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
        </member>
        <member name="T:Lagoon.UI.Components.ClickEventArgs">
            <summary>
            Event raised when user click on a component.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.ClickEventArgs.#ctor(System.Threading.CancellationToken)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgHttpFetchException">
            <summary>
            Exception raised when an HTTP request failed.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgHttpFetchException.#ctor(System.Exception)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="ex">Exception.</param>
        </member>
        <member name="M:Lagoon.UI.Components.LgHttpFetchException.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Lagoon.UI.Components.LgRemoteException">
            <summary>
            Exception raised after a server side exception.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgRemoteException.#ctor(System.String)">
            <summary>
            Initialize a new instance.
            </summary>
            <param name="message">Exception description.</param>
        </member>
        <member name="T:Lagoon.UI.Components.Extensions">
            <summary>
            Extensions methods
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.GetLoadingAnimationAsync(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Return the loading animation defined in index.html (cf app-init.js)
            </summary>
            <param name="js">Extension for IJSRuntime</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.GetBaseHref(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Retrieve the basePath used by the application
            </summary>
            <param name="js">Extension for IJSRuntime</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.HasAcceptedCgu(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Return true if localstorage contain a key with 'LgEula' + application base path. False otherwise
            </summary>
            <param name="js">Extension for IJSRuntime</param>
            <returns>Return true if localstorage contain a key with 'LgEula' + application base path. False otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.GetCguSupportedLanguage(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Return true if localstorage contain a key with 'LgEula' + application base path. False otherwise
            </summary>
            <param name="js">Extension for IJSRuntime</param>
            <returns>Return true if localstorage contain a key with 'LgEula' + application base path. False otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.AcceptCgu(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Accept the last version of EULA
            </summary>
            <param name="js"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.InitLagoonServiceWorkerAsync(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Lauch Lagoon service worker initialisation process.
            </summary>
            <param name="js">Extension for IJSRuntime</param>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.UnregisterServiceWorkerAsync(Microsoft.JSInterop.IJSRuntime)">
            <summary>
            Try to unregister all services workers
            </summary>
            <param name="js">Extension for IJSRuntime</param>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.ScriptIncludeAsync(Microsoft.JSInterop.IJSRuntime,System.String)">
            <summary>
            Include a script tag in the DOM (if not already exist)
            </summary>
            <param name="js">Extension for IJSRuntime</param>
            <param name="scriptPath">Script src to include</param>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.ScriptGetNewRefAsync(Microsoft.JSInterop.IJSRuntime,System.String,System.Object[])">
            <summary>
            Call a function which return a JS object (JsObjectRef)
            </summary>
            <param name="js">Extension for IJSRuntime</param>
            <param name="fn">Function to call (which return an JS Object)</param>
            <param name="fnArgs">Optional args for fn</param>
            <returns>A JsObjectRef which should be passed as an argument to js function</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.DownloadFromUrl(Microsoft.JSInterop.IJSRuntime,System.String)">
            <summary>
            Download a file from url
            </summary>
            <param name="js">IJSRuntime extension</param>
            <param name="url">Download url</param>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.DownloadRawContent(Microsoft.JSInterop.IJSRuntime,System.String,System.String,System.Byte[],System.Boolean)">
            <summary>
            Send a raw file to the browser
            </summary>
            <param name="js">JSRuntime extension</param>
            <param name="filename">Browser download file name</param>
            <param name="contentType">Content Type</param>
            <param name="content">File content</param>
            <param name="attachment">True if navigator should open the file, otherwise false</param>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.DownloadTextBasedContent(Microsoft.JSInterop.IJSRuntime,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Send a text based file to the browser
            </summary>
            <param name="js">JSRuntim extension</param>
            <param name="filename">Filename</param>
            <param name="contentType">Content type</param>
            <param name="content">File content</param>
            <param name="attachment">True if navigator should open the file, otherwise false</param>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.DownloadText(Microsoft.JSInterop.IJSRuntime,System.String,System.String,System.Boolean)">
            <summary>
            Send a text file to the browser (text/plain)
            </summary>
            <param name="js">JSRuntim extension</param>
            <param name="filename">Filename</param>
            <param name="content">File content</param>
            <param name="attachment">True if navigator should open the file, otherwise false</param>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.DownloadCsv(Microsoft.JSInterop.IJSRuntime,System.String,System.String,System.Boolean)">
            <summary>
            Send a text file to the browser (text/csv)
            </summary>
            <param name="js">JSRuntim extension</param>
            <param name="filename">Filename</param>
            <param name="content">File content</param>
            <param name="attachment">True if navigator should open the file, otherwise false</param>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.UserClaimValue(Microsoft.AspNetCore.Components.Authorization.AuthenticationState,System.String)">
            <summary>
            Gets the first value of the specified claim type if exists; <c>null</c> ortherwise.
            </summary>
            <param name="authenticationState">The authentication state.</param>
            <param name="key">The claim type to get the value from.</param>
            <returns>The first value of the specified claim type if exists; <c>null</c> ortherwise.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.UserClaimValues(Microsoft.AspNetCore.Components.Authorization.AuthenticationState,System.String)">
            <summary>
            Gets all the values of the specified claim type if exists; <c>null</c> ortherwise.
            </summary>
            <param name="authenticationState">The authentication state.</param>
            <param name="key">The claim type to get the values from.</param>
        </member>
        <member name="M:Lagoon.UI.Components.Extensions.UserClaimTypes(Microsoft.AspNetCore.Components.Authorization.AuthenticationState)">
            <summary>
            Get all the user claim types.
            </summary>
            <param name="authenticationState">The authentication state.</param>
            <returns>All the user claim types.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.AboutAdditionalInformation">
            <summary>
            Additional informations.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.AboutAdditionalInformation.Label">
            <summary>
            Label of the information.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.AboutAdditionalInformation.Name">
            <summary>
            Information.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.AboutAdditionalInformation.Uri">
            <summary>
            Email address of user.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Components.AboutAdditionalInformationList">
            <summary>
            Information list.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.AboutAdditionalInformationList.Add(System.String,System.String,System.String)">
            <summary>
            Add new about information.
            </summary>
            <param name="label">Label.</param>
            <param name="text">Information.</param>
            <param name="uri">URI</param>
        </member>
        <member name="T:Lagoon.UI.Components.LgPageAbout">
            <summary>
            Page to display application informations
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.LgPageAbout.ROUTE">
            <summary>
            Route to reach the page.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgPageAbout.Link">
            <summary>
            Gets the URL for this page.
            </summary>
            <returns>The URL for this page.</returns>
        </member>
        <member name="P:Lagoon.UI.Components.LgPageAbout.Configuration">
            <summary>
            Gets or sets the appSettings manager.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPageAbout.ApplicationInformation">
            <summary>
            Gets or sets applications informations.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Components.LgPageAbout.AdditionalInformationList">
            <summary>
            Additional informations.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Components.LgPageAbout.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Components.LgPageAbout.GetApplicationName">
            <summary>
            Return the displayed name.
            </summary>
            <returns>The displayed name.</returns>
        </member>
        <member name="M:Lagoon.UI.Components.LgPageAbout.GetVersion">
            <summary>
            Return the displayed version.
            </summary>
            <returns>The displayed version.</returns>
        </member>
        <member name="T:Lagoon.UI.Components.IconNames.IconAliases">
            <summary>
            You can add here alias to icon names from icons library.
            </summary>
            <remarks>
            WARNING :
            - After changes in this file, you must compile and use constants from <c>IconNames</c> class.
            - The syntax must be "private const string {MyIcon} = All.{OtherIcon};"
            </remarks>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.About">
            <summary>
            Alias to All.InfoCircleFill
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Add">
            <summary>
            Alias to All.Plus
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Admin">
            <summary>
            Alias to All.GearFill
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Cancel">
            <summary>
            Alias to All.XCircle
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Close">
            <summary>
            Alias to All.X
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Collapse">
            <summary>
            Alias to All.ChevronUp
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.CollapseH">
            <summary>
            Alias to All.ChevronLeft
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Delete">
            <summary>
            Alias to All.TrashFill
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Edit">
            <summary>
            Alias to All.Pencil
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Empty">
            <summary>
            Alias to All.BoxOpen
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Error">
            <summary>
            Alias to All.ShieldFillExclamation
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Expand">
            <summary>
            Alias to All.ChevronDown
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.ExpandH">
            <summary>
            Alias to All.ChevronRight
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Export">
            <summary>
            Alias to All.Download
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.ExportCsv">
            <summary>
            Alias to All.FileEarmarkCsv
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.ExportExcel">
            <summary>
            Alias to All.FileEarmarkExcel
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.ExportImage">
            <summary>
            Alias to All.FileEarmarkImage
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.ExportPdf">
            <summary>
            Alias to All.FileEarmarkPdf
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.ExportWord">
            <summary>
            Alias to All.FileEarmarkWord
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.ExportZip">
            <summary>
            Alias to All.FileEarmarkZip
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Home">
            <summary>
            Alias to All.HouseFill
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Info">
            <summary>
            Alias to All.InfoCircleFill
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Loading">
            <summary>
            Alias to All.ArrowClockwise
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Login">
            <summary>
            Alias to All.KeyFill
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Logout">
            <summary>
            Alias to All.Logout
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Question">
            <summary>
            Alias to All.QuestionCircleFill
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Save">
            <summary>
            Alias to All.Check
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Success">
            <summary>
            Alias to All.Check
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.UploadBoxIcon">
            <summary>
            Alias to All.Image
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.View">
            <summary>
            Alias to All.EyeFill
            </summary>
        </member>
        <member name="F:Lagoon.UI.Components.IconNames.Warning">
            <summary>
            Alias to All.ExclamationTriangleFill
            </summary>
        </member>
        <member name="T:Lagoon.UI.Internal.BlazorInputFile.FileListEntryExtensions">
            <summary>
            Extension pack for FileListEntry
            </summary>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.FileListEntryExtensions.ReadAllAsync(Lagoon.UI.Components.IFileListEntry,System.Int32)">
            <summary>
            Reads the entire uploaded file into a <see cref="T:System.IO.MemoryStream"/>. This will allocate
            however much memory is needed to hold the entire file, or will throw if the client
            tries to supply more than <paramref name="maxSizeBytes"/> bytes. Be careful not to
            let clients allocate too much memory on the server.
            </summary>
            <param name="fileListEntry">The <see cref="T:Lagoon.UI.Components.IFileListEntry"/>.</param>
            <param name="maxSizeBytes">The maximum amount of data to accept.</param>
        </member>
        <member name="T:Lagoon.UI.Internal.BlazorInputFile.FileListEntryImpl">
            <summary>
            This is public only because it's used in a JSInterop method signature,
            but otherwise is intended as internal
            </summary>
        </member>
        <member name="E:Lagoon.UI.Internal.BlazorInputFile.FileListEntryImpl.OnDataRead">
            <summary>
            Read event
            </summary>
        </member>
        <member name="P:Lagoon.UI.Internal.BlazorInputFile.FileListEntryImpl.Id">
            <summary>
            Get or set the file identifier
            </summary>
        </member>
        <member name="P:Lagoon.UI.Internal.BlazorInputFile.FileListEntryImpl.LastModified">
            <summary>
            Get or set the last modification date
            </summary>
        </member>
        <member name="P:Lagoon.UI.Internal.BlazorInputFile.FileListEntryImpl.Name">
            <summary>
            Get or set the file name
            </summary>
        </member>
        <member name="P:Lagoon.UI.Internal.BlazorInputFile.FileListEntryImpl.Size">
            <summary>
            Get or set the file size
            </summary>
        </member>
        <member name="P:Lagoon.UI.Internal.BlazorInputFile.FileListEntryImpl.Type">
            <summary>
            Get or set the file content type
            </summary>
        </member>
        <member name="P:Lagoon.UI.Internal.BlazorInputFile.FileListEntryImpl.RelativePath">
            <summary>
            Get or set the original file path
            </summary>
        </member>
        <member name="P:Lagoon.UI.Internal.BlazorInputFile.FileListEntryImpl.Data">
            <summary>
            Access to the underlying file stream
            </summary>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.FileListEntryImpl.ToImageFileAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Create a new file as an image with the specified dimension.
            The file content must be retrieved with the <see cref="P:Lagoon.UI.Internal.BlazorInputFile.FileListEntryImpl.Data"/> stream
            </summary>
            <param name="format">Content type</param>
            <param name="maxWidth">Max width</param>
            <param name="maxHeight">Max height</param>
            <returns>A new file entry</returns>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.FileListEntryImpl.ToBlobUrl">
            <summary>
            Create a blob url for the specified file
            </summary>
            <returns>A local blob url</returns>
        </member>
        <member name="T:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream">
             <summary>
             TODO: When ReadAsync is called, don't just fetch the segment of data that's being requested.
             That will be very slow, as you may be doing a separate round-trip for each 1KB or so of data.
             Instead, have a larger buffer whose size == SignalR.MaxMessageSize and populate that. Then
             many of the ReadAsync calls can return immediately with already-loaded data.
            
             This is still not as fast as allowing the client to send as much data as it wants, and using
             TCP to apply backpressure. In the future we could achieve something closer to that by having
             an even larger buffer, and telling the client to send N messages in parallel. The ReadAsync
             calls would return whenever their portion of the buffer was populated. This is much more
             complicated to implement.
             </summary>
        </member>
        <member name="F:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream._jsRuntime">
            <summary>
            JSRuntime to retrieve data from JS
            </summary>
        </member>
        <member name="F:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream._inputFileElement">
            <summary>
            Reference to the HTMLInputElement (wich hold files data)
            </summary>
        </member>
        <member name="F:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream._file">
            <summary>
            A file entry
            </summary>
        </member>
        <member name="F:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream._position">
            <summary>
            Stream position
            </summary>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream.#ctor(Microsoft.JSInterop.IJSRuntime,Microsoft.AspNetCore.Components.ElementReference,Lagoon.UI.Internal.BlazorInputFile.FileListEntryImpl)">
            <summary>
            Initialise a new <see cref="T:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream"/>
            </summary>
            <param name="jsRuntime">JSRuntime</param>
            <param name="inputFileElement">HTMLInputElement reference</param>
            <param name="file">File entry</param>
        </member>
        <member name="P:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream.CanRead">
            <summary>
            Is the stream readable
            </summary>
        </member>
        <member name="P:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream.CanSeek">
            <summary>
            Is the stream seekable
            </summary>
        </member>
        <member name="P:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream.CanWrite">
            <summary>
            Is the stream writable
            </summary>
        </member>
        <member name="P:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream.Length">
            <summary>
            Stream length
            </summary>
        </member>
        <member name="P:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream.Position">
            <summary>
            Current stream position
            </summary>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream.Flush">
            <summary>
            Not supported for this stream
            </summary>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Not supported for this stream
            </summary>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Not supported for this stream
            </summary>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream.SetLength(System.Int64)">
            <summary>
            Not supported for this stream
            </summary>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Not supported for this stream
            </summary>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Read a part of the stream
            </summary>
            <param name="buffer">Data to read</param>
            <param name="offset">Start offset</param>
            <param name="count">Number of bytes readed</param>
            <param name="cancellationToken">A CancellationToken to interrup the process</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.FileListEntryStream.CopyFileDataIntoBuffer(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Copy data
            </summary>
            <param name="sourceOffset">Source from</param>
            <param name="destination">Destination array</param>
            <param name="destinationOffset">Destination offset</param>
            <param name="maxBytes">Byte to retrives</param>
            <param name="cancellationToken">CancellationToken</param>
        </member>
        <member name="T:Lagoon.UI.Internal.BlazorInputFile.InputFile">
            <summary>
            Not intended to be used directly. This component is used by the LgInputFile
            </summary>
        </member>
        <member name="P:Lagoon.UI.Internal.BlazorInputFile.InputFile.UnmatchedParameters">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lagoon.UI.Internal.BlazorInputFile.InputFile.OnChange">
            <summary>
            Event fired when the selected file list change
            </summary>
        </member>
        <member name="P:Lagoon.UI.Internal.BlazorInputFile.InputFile.MaxMessageSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Lagoon.UI.Internal.BlazorInputFile.InputFile.MaxBufferSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.InputFile.OnAfterRenderAsync(System.Boolean)">
            <summary>
            
            </summary>
            <param name="firstRender"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.InputFile.NotifyChange(Lagoon.UI.Internal.BlazorInputFile.FileListEntryImpl[])">
            <summary>
            
            </summary>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.InputFile.ToBlobUrlAsync(Lagoon.UI.Internal.BlazorInputFile.FileListEntryImpl)">
            <summary>
            Create a local blobl url for the specified file
            </summary>
            <param name="file">File for which we want a blob url</param>
            <returns>A local blob url</returns>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.InputFile.DirectJsUploadAsync(System.IDisposable,System.String,System.String[],System.String)">
            <summary>
            Upload file from JS without using the HttpClient to be able to show the upload progression
            </summary>
            <param name="dotnetRef">A dotnef red</param>
            <param name="uploadUrl">Upload url</param>
            <param name="filesName">Files name to upload</param>
            <param name="token">An optional token to add to post header in authorization</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.InputFile.CancelDirectJs(System.Boolean,System.Boolean)">
            <summary>
            Cancel the upload and clear the selection list
            </summary>
            <param name="upload"><c>true</c> to cancel an upload in progress</param>
            <param name="download"><c>true</c> to cancel all download in progress</param>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.InputFile.DirectJsDownloadAsync(System.IDisposable,System.String,System.String,System.String,System.String)">
            <summary>
            Download a file from JS side
            </summary>
            <param name="dotnetRef">C# object red</param>
            <param name="fileId">File identifier</param>
            <param name="filename">File name</param>
            <param name="downloadUrl">Download url</param>
            <param name="token">Optional authorization header</param>
            <returns><c>true</c> if success, <c>false</c> otherwise</returns>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.InputFile.CancelDirectJsDownload(System.String)">
            <summary>
            Cancel the download
            </summary>
        </member>
        <member name="M:Lagoon.UI.Internal.BlazorInputFile.InputFile.RemoveFile(Lagoon.UI.Components.IFileListEntry)">
            <summary>
            Remove a file from the selection
            </summary>
        </member>
        <member name="T:Lagoon.UI.Attributes.ServiceWorkerEnabledAttribute">
            <summary>
            Indicate if the service worker is enabled for this application.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Attributes.ServiceWorkerEnabledAttribute.Value">
            <summary>
            Indicate if the service worker is enabled for this application.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Attributes.ServiceWorkerEnabledAttribute.#ctor(System.Boolean)">
            <summary>
            Initialise a new instance.
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:Lagoon.UI.Helpers.Date">
            <summary>
            Class containing date helpers.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Helpers.Date.rollingYear">
            Date from which a two-character year entry changes to 1900 instead of 2000.
        </member>
        <member name="M:Lagoon.UI.Helpers.Date.MagicStrToDate(System.String,System.Boolean)">
            <summary>
            Return a date from a string
            </summary>
            <param name="p_s_date">date</param>
            <param name="p_b_yearFirst">year before month</param>
            <returns></returns>
        </member>
        <member name="P:Lagoon.UI.Helpers.Date.RollingYear">
             <summary>
            Date from which a two-character year entry changes to 1900 instead of 2000.Date from which a two-character year entry changes to 1900 instead of 2000.
             </summary>
        </member>
        <member name="M:Lagoon.UI.Helpers.Date.TryGetMonthValue(System.String,System.Int32@)">
            <summary>
            Try to find the month index from the month label.
            </summary>
            <param name="p_s_month">Month label</param>
            <param name="p_i_month">Month index</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Helpers.Date.GetShortMonthArray">
            <summary>
            Returns the table of short month names.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Helpers.RawDate">
            <summary>
             Structure containing the different values of a date extracted from a text string.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Helpers.RawDate.IsEmpty">
            <summary>
            Date is  emmpty ? 
            </summary>
        </member>
        <member name="P:Lagoon.UI.Helpers.RawDate.HasData">
            <summary>
            Flag if  all date parts are finded .
            Warning : Do not indicate if the date is valid.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Helpers.RawDate.Day">
            <summary>
            Day
            </summary>
        </member>
        <member name="P:Lagoon.UI.Helpers.RawDate.Month">
            <summary>
            Month
            </summary>
        </member>
        <member name="P:Lagoon.UI.Helpers.RawDate.Year">
            <summary>
            Year
            </summary>
        </member>
        <member name="M:Lagoon.UI.Helpers.RawDate.ToDate">
            <summary>
            Return the date with eah parts
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Helpers.RawDate.IsValid">
            <summary>
            Check if the date is valid
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Helpers.RawDate.CheckValidity">
            <summary>
            We check that a valid date can be created from the value in the text box.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Helpers.JsDico">
            <summary>
            Handle multi-langual dictionnary from javascript.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Helpers.JsDico.JsDicoTranslate(System.String,System.String[])">
            <summary>
            Access dictionnary from javascript side
            </summary>
            <param name="dicoKey">The key to translate</param>
            <param name="args">Args to be replaced in string</param>
        </member>
        <member name="T:Lagoon.UI.Helpers.JsObjectRef">
            <summary>
            Handler for Javascript references.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Helpers.JsObjectRef.JS">
            <summary>
            Need a reference to JSRuntime for disposing a JsObjectRef on JS side
            </summary>
        </member>
        <member name="P:Lagoon.UI.Helpers.JsObjectRef.JsObjectRefId">
            <summary>
            This key is used to map this object with an JS object
            </summary>
        </member>
        <member name="M:Lagoon.UI.Helpers.JsObjectRef.DisposeAsync">
            <summary>
            Remove the reference on JS Side
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Helpers.JsObjectRef.Dispose">
            <summary>
            Dispose reference
            </summary>
        </member>
        <member name="T:Lagoon.UI.Helpers.Numeric">
            <summary>
            Class containing numeric helpers.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Helpers.Numeric.CleanNumericValue(System.String)">
            <summary>
            Clean numeric input value
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Helpers.Route.Route">
            <summary>
            Definition of a route.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Helpers.Route.Route.UriSegments">
            <summary>
            Gets  parameter parts of the route
            </summary>
        </member>
        <member name="P:Lagoon.UI.Helpers.Route.Route.UriParameters">
            <summary>
            Gets parameters of the route
            </summary>
        </member>
        <member name="P:Lagoon.UI.Helpers.Route.Route.Handler">
            <summary>
            Gets the type of component linked to the route
            </summary>
        </member>
        <member name="M:Lagoon.UI.Helpers.Route.Route.#ctor(System.String[],Microsoft.AspNetCore.Routing.Template.TemplatePart[],System.Type)">
            <summary>
            Initialize new instance
            </summary>
        </member>
        <member name="M:Lagoon.UI.Helpers.Route.Route.Match(System.String[])">
            <summary>
            Search of the route
            </summary>
            <param name="segments"></param>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Helpers.Route.Route.TypeParseConstraint`1">
            <summary>
            Class used to parse constraint following is Type
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Lagoon.UI.Helpers.Route.Route.TypeParseConstraint`1.Match(System.String,System.Object@)">
            <summary>
            Parse value
            </summary>
            <param name="value"></param>
            <param name="convertedValue"></param>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Helpers.Route.RouteManager">
            <summary>
            Build assemblies routes list with parameters
            </summary>
        </member>
        <member name="P:Lagoon.UI.Helpers.Route.RouteManager.Routes">
            <summary>
            Gets or sets list of assemblies routes
            </summary>
        </member>
        <member name="M:Lagoon.UI.Helpers.Route.RouteManager.#ctor(Lagoon.UI.Application.LgApplication)">
            <summary>
            Inialialise the route manager.
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Lagoon.UI.Helpers.Route.RouteManager.LoadRoutesFromAssembly(System.Reflection.Assembly)">
            <summary>
            Build routes list of each assembly
            </summary>
            <param name="assembly"></param>
        </member>
        <member name="M:Lagoon.UI.Helpers.Route.RouteManager.Match(System.String)">
            <summary>
            Find route for an URI.
            </summary>
            <param name="relativeUri">Target URI.</param>
        </member>
        <member name="M:Lagoon.UI.Helpers.Route.RouteManager.Match(System.String[])">
            <summary>
            Find route by splitted parts of Uri
            </summary>
            <param name="segments"></param>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Helpers.Size">
            <summary>
            Size.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Helpers.Size.Width">
            <summary>
            Width.
            </summary>
        </member>
        <member name="P:Lagoon.UI.Helpers.Size.Height">
            <summary>
            Height.
            </summary>
        </member>
        <member name="T:Lagoon.UI.Helpers.Toolbar.ToolBarHelper">
            <summary>
            Help to add predifined items to a tool bar.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Helpers.Toolbar.ToolBarHelper.RenderToolbarExportMenu(System.Object,Lagoon.Helpers.ExportProviderManager,System.Func{Lagoon.Helpers.IExportProvider,System.Threading.CancellationToken,System.Threading.Tasks.Task})">
            <summary>
            Render the export menu.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.UI.Helpers.Toolbar.ToolBarHelper.RenderToolbarExport(System.Object,Lagoon.Helpers.ExportProviderManager,System.Func{Lagoon.Helpers.IExportProvider,System.Threading.CancellationToken,System.Threading.Tasks.Task},System.String,System.String)">
            <summary>
            Render all the export buttons.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.UI.Helpers.WindowManager">
            <summary>
            Window manager service
            </summary>
        </member>
        <member name="F:Lagoon.UI.Helpers.WindowManager._modalList">
            <summary>
            Modal list
            </summary>
        </member>
        <member name="P:Lagoon.UI.Helpers.WindowManager.RouteManager">
            <summary>
            Gets or sets route manager dependency
            </summary>
        </member>
        <member name="P:Lagoon.UI.Helpers.WindowManager.OnModalAdded">
            <summary>
            Event rising when modal is added
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Helpers.WindowManager.OnModalRemoved">
            <summary>
            Event rising when modal is closed
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.UI.Helpers.WindowManager.OnModalChanged">
            <summary>
            Event rising when modal parameter has changed
            </summary>
            <value></value>
        </member>
        <member name="M:Lagoon.UI.Helpers.WindowManager.#ctor(Lagoon.UI.Helpers.Route.RouteManager)">
            <summary>
            Routing service.
            </summary>
            <param name="routeManager">Routing service</param>
        </member>
        <member name="M:Lagoon.UI.Helpers.WindowManager.OpenConfirm(System.String,System.Func{System.Threading.Tasks.Task},System.String,System.String,Lagoon.UI.Components.ModalSize)">
            <summary>
            Add confirmation modal to build
            </summary>
            <param name="confirmMessage">Confirmation message</param>
            <param name="confirmCallback">Method call after confirmation</param>
            <param name="title">Modal title</param>
            <param name="cssClass">Css class</param>
            <param name="modalSize">Modal size</param>
        </member>
        <member name="M:Lagoon.UI.Helpers.WindowManager.OpenModal(System.String,System.String,System.String,Lagoon.UI.Components.ModalSize)">
            <summary>
            Add modal to build
            </summary>
            <param name="uri">Route uri</param>
            <param name="title">Modal title</param>
            <param name="cssClass">Modal css class</param>
            <param name="modalSize">Modal size</param>
        </member>
        <member name="M:Lagoon.UI.Helpers.WindowManager.CloseModal(System.String)">
            <summary>
            Remove modal on close
            </summary>
            <param name="key">Key of the modal</param>
        </member>
        <member name="M:Lagoon.UI.Helpers.WindowManager.Render(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder)">
            <summary>
            Render modals
            </summary>
            <param name="builder">RenderTreeBuilder</param>
        </member>
        <member name="T:Lagoon.UI.Pages.LgPageIcons">
            <summary>
            Page showing the icon library.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Pages.LgPageIcons.ROUTE">
            <summary>
            Route to reach the page.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Pages.LgPageIcons.Link">
            <summary>
            Gets the URL for this page.
            </summary>
            <returns>The URL for this page.</returns>
        </member>
        <member name="F:Lagoon.UI.Pages.LgPageIcons.appIcons">
            <summary>
            Names of all icons;
            </summary>
        </member>
        <member name="P:Lagoon.UI.Pages.LgPageIcons.ResultIcons">
            <summary>
            List of icons
            </summary>
        </member>
        <member name="P:Lagoon.UI.Pages.LgPageIcons.SearchTerm">
            <summary>
            Search term into list
            </summary>
        </member>
        <member name="M:Lagoon.UI.Pages.LgPageIcons.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.UI.Pages.LgPageIcons.LoadIconListAsync">
            <summary>
            Load icon library.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Pages.LgPageIcons.LoadIconNameListAsync">
            <summary>
            Load icon names from SVG file.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Pages.LgPageIcons.BuildName(System.String)">
            <summary>
            Build constant name from svg id.
            </summary>
            <param name="id">SVG id.</param>
            <returns>Le nom de la constante.</returns>
        </member>
        <member name="M:Lagoon.UI.Pages.LgPageIcons.SearchIcon(Microsoft.AspNetCore.Components.ChangeEventArgs)">
            <summary>
            Search icon action
            </summary>
            <param name="eventArgs">Event arguments</param>
        </member>
        <member name="T:Lagoon.UI.Pages.LgPageLogs">
            <summary>
            Page to download application logs.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Pages.LgPageLogs.ROUTE">
            <summary>
            Route to reach the page.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Pages.LgPageLogs.Link">
            <summary>
            Gets the URL for this page.
            </summary>
            <returns>The URL for this page.</returns>
        </member>
        <member name="F:Lagoon.UI.Pages.LgPageLogs._errors">
            <summary>
            Local errors
            </summary>
        </member>
        <member name="M:Lagoon.UI.Pages.LgPageLogs.OnInitializedAsync">
            <summary>
            Initialization
            </summary>
        </member>
        <member name="M:Lagoon.UI.Pages.LgPageLogs.DownloadLog">
            <summary>
            Send error file to the browser
            </summary>
        </member>
        <member name="M:Lagoon.UI.Pages.LgPageLogs.ClearErrorAsync">
            <summary>
            Clear local error
            </summary>
        </member>
        <member name="M:Lagoon.UI.Pages.LgPageLogs.DownloadServerLogAsync">
            <summary>
            Download the application log on server side
            </summary>
        </member>
        <member name="T:Lagoon.UI.Pages.LgPageNotFound">
            <summary>
            Page to download application logs.
            </summary>
        </member>
        <member name="F:Lagoon.UI.Pages.LgPageNotFound.ROUTE">
            <summary>
            Route to reach the page.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Pages.LgPageNotFound.Link">
            <summary>
            Gets the URL for this page.
            </summary>
            <returns>The URL for this page.</returns>
        </member>
        <member name="P:Lagoon.UI.Pages.LgPageNotFound.AppComponent">
            <summary>
            LgApp instance.
            </summary>
        </member>
        <member name="M:Lagoon.UI.Pages.LgPageNotFound.OnInitializedAsync">
            <summary>
            Initialization
            </summary>
        </member>
        <member name="T:Lagoon.Helpers.Data.CalculationOption">
            <summary>
            Calculation data definition
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.CalculationOption.Field">
            <summary>
            Gets or sets field name used in calculation
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.CalculationOption.ParametrizedValueExpression">
            <summary>
            Gets or sets the expression representing the value.
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.CalculationOption.CalculationType">
            <summary>
            Gets or sets calculation function
            </summary>
        </member>
        <member name="T:Lagoon.Helpers.Data.CustomDataPageLoader`1">
            <summary>
            This class allow to download partial data set using OData queries.
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.CustomDataPageLoader`1.CurrentPage">
            <summary>
            Gets or sets index of the current page
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.CustomDataPageLoader`1.PageSize">
            <summary>
            Gets or sets number of rows by page
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.CustomDataPageLoader`1.SortOptions">
            <summary>
            Gets or sets sorts parameters
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.CustomDataPageLoader`1.FilterOptions">
            <summary>
            Gets or sets filters parameters
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.CustomDataPageLoader`1.CalculationOptions">
            <summary>
            Gets or sets calculation parameters
            </summary>
        </member>
        <member name="M:Lagoon.Helpers.Data.CustomDataPageLoader`1.GetDataPageAsync">
            <summary>
            Gets the data of the current page.
            </summary>
            <returns>The data of the current page.</returns>
        </member>
        <member name="M:Lagoon.Helpers.Data.CustomDataPageLoader`1.GetCalculationAsync">
            <summary>
            Gets the calculation for each columns.
            </summary>
            <returns>The calculated values.</returns>
        </member>
        <member name="T:Lagoon.Helpers.Data.DataPage`1">
            <summary>
            Data and page context informations.
            </summary>
            <typeparam name="TItem">Data type.</typeparam>
        </member>
        <member name="P:Lagoon.Helpers.Data.DataPage`1.CurrentPage">
            <summary>
            Gets the curent page index.
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.DataPage`1.Data">
            <summary>
            Gets list of data.
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.DataPage`1.LastPage">
            <summary>
            Gets last page index.
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.DataPage`1.RecordCount">
            <summary>
            Gets the number of lines in the current page.
            </summary>
        </member>
        <member name="M:Lagoon.Helpers.Data.DataPage`1.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{`0},System.Int32)">
            <summary>
            Initialize new instance.
            </summary>
        </member>
        <member name="T:Lagoon.Helpers.Data.FilterOption">
            <summary>
            Filter data definition
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.FilterOption.ParameterizedValueExpression">
            <summary>
            The lambda expression to get the value.
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.FilterOption.Value">
            <summary>
            Gets or sets filter value
            </summary>        
        </member>
        <member name="P:Lagoon.Helpers.Data.FilterOption.Operator">
            <summary>
            Gets or sets filter operator
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.FilterOption.WorkingType">
            <summary>
            Type de travail.
            </summary>
        </member>
        <member name="T:Lagoon.Helpers.Data.LocalDataPageLoader`1">
            <summary>
            Data loader for local data
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Lagoon.Helpers.Data.LocalDataPageLoader`1.Items">
            <summary>
            Gets or sets data source list
            </summary>
        </member>
        <member name="M:Lagoon.Helpers.Data.LocalDataPageLoader`1.GetFilteredSortedItems">
            <summary>
            Return the filtered and sorted data source list
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.Helpers.Data.LocalDataPageLoader`1.GetDataPageAsync">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.Helpers.Data.LocalDataPageLoader`1.GetCalculationAsync">
            <summary>
            Calculation results for local data
            </summary>
            <returns></returns>
        </member>
        <member name="T:Lagoon.Helpers.Data.PageDataLoader`1">
            <summary>
            Help to sort, filter and paging data
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Lagoon.Helpers.Data.PageDataLoader`1.IsDynamicObject">
            <summary>
            Gets true if the type T is an dynamic object.
            </summary>
        </member>
        <member name="M:Lagoon.Helpers.Data.PageDataLoader`1.ApplyQueryPagedOptions(System.Linq.IQueryable{`0},Lagoon.Helpers.Data.FilterOption[],Lagoon.Helpers.Data.SortOption[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sort, filter paging data
            </summary>
            <param name="query">Query</param>        
            <param name="currentPage">current displayed page</param>
            <param name="filterOptions">filters parameters</param>
            <param name="pageSize">number of data</param>
            <param name="sortOptions">sort parameters</param>
            <param name="skipPagination">no apply pagination</param>
        </member>
        <member name="M:Lagoon.Helpers.Data.PageDataLoader`1.ApplyQueryPagination(System.Linq.IQueryable{`0},System.Int32,System.Int32)">
            <summary>
            Add pagination to query
            </summary>
            <param name="query"></param>
            <param name="currentPage"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.Helpers.Data.PageDataLoader`1.ApplyOrder(System.Linq.IQueryable{`0},System.String,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Apply sort parameter to query
            </summary>
            <param name="query">The query.</param>
            <param name="methodName">The orderby method name.</param>
            <param name="parameterizedValueExpression">Expression representing the function that return the wanted value with the item as parameter.</param>
            <returns>The new query.</returns>
        </member>
        <member name="M:Lagoon.Helpers.Data.PageDataLoader`1.AddWhere(System.Linq.IQueryable{`0},Lagoon.Helpers.Data.FilterOption[])">
            <summary>
            Add filter conditions to the query.
            </summary>
            <param name="query">Query.</param>
            <param name="filters">datagrid filter parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.Helpers.Data.PageDataLoader`1.GetWhereExpression(Lagoon.Helpers.Data.FilterOption[])">
            <summary>
            Convert filters to where expression.
            </summary>
            <param name="filters">Filter list.</param>
            <returns>The where expression.</returns>
        </member>
        <member name="M:Lagoon.Helpers.Data.PageDataLoader`1.Operator(Lagoon.UI.Components.DataFilterOperator,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Return linq expression following the operator calling
            </summary>
            <param name="filterOperator">operator</param>
            <param name="left">left part</param>
            <param name="right">right part</param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.Helpers.Data.PageDataLoader`1.ToLower(System.Linq.Expressions.Expression)">
            <summary>
            Return lower string linq expression
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.Helpers.Data.PageDataLoader`1.CreateInExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Create an expression to test if a list contains an item.
            </summary>
            <param name="item">Expression representing the item to found.</param>
            <param name="list">List to browse.</param>
            <returns>The build expression.</returns>
        </member>
        <member name="M:Lagoon.Helpers.Data.PageDataLoader`1.ApplyCalculations(Lagoon.Helpers.Data.CalculationOption[])">
            <summary>
            Return expression for calculations 
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Lagoon.Helpers.Data.PageDataLoader`1.Calculation(Lagoon.UI.Components.DataCalculationType,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
            <summary>
            Return expression relative of the calculation
            </summary>
            <param name="operation"></param>
            <param name="group"></param>
            <param name="parameterizedValueExpression">Expression representing the method to get the column value.</param>
        </member>
        <member name="M:Lagoon.Helpers.Data.PageDataLoader`1.GetDefault(System.Type)">
            <summary>
            Return default value following type
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Lagoon.Helpers.Data.RemoteDataPageLoader`1">
            <summary>
            This class allow to download partial data set using OData queries.
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.RemoteDataPageLoader`1.ControllerUri">
            <summary>
            URI of the controller.
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.RemoteDataPageLoader`1.HttpClient">
            <summary>
            HTTP client.
            </summary>
        </member>
        <member name="M:Lagoon.Helpers.Data.RemoteDataPageLoader`1.GetDataPageAsync">
            <inheritdoc/>
        </member>
        <member name="M:Lagoon.Helpers.Data.RemoteDataPageLoader`1.GetCalculationAsync">
            <summary>
            Calculation results for remote data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.Helpers.Data.RemoteDataPageLoader`1.BatchAggregateAsync``1(System.Net.Http.HttpClient,System.Linq.IQueryable,Lagoon.Helpers.Data.CalculationOption[])">
            <summary>
            Execute a single request OData with aggregate operations
            </summary>
            <typeparam name="TResponse"></typeparam>
            <param name="http"></param>
            <param name="query"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:Lagoon.Helpers.Data.SortOption">
            <summary>
            Sort data definition
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.SortOption.ParameterizedValueExpression">
            <summary>
            Gets or sets the expression representing the function that return the wanted value with the item as parameter.
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.Data.SortOption.Dir">
            <summary>
            Gets or sets sort direction
            </summary>
        </member>
        <member name="T:Lagoon.Helpers.BatchContext">
            <summary>
            Describe a batch operation
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.BatchContext.Requests">
            <summary>
            Get or set the batch request to execute
            </summary>
            <value>List of BatchRequest to execute</value>
        </member>
        <member name="P:Lagoon.Helpers.BatchContext.ResponseCount">
            <summary>
            Gets the number of received responses.
            </summary>
            <returns>The number of received response.</returns>
        </member>
        <member name="M:Lagoon.Helpers.BatchContext.#ctor">
            <summary>
            Initialize a new BatchContext
            </summary>
        </member>
        <member name="M:Lagoon.Helpers.BatchContext.HasError">
            <summary>
            Gets if at least one request failed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.Helpers.BatchContext.GetAllResponses">
            <summary>
            Return all response.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Lagoon.Helpers.BatchContext.GetAllResponses``1">
            <summary>
            Return all response.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Lagoon.Helpers.BatchContext.GetResponse``1(System.Int32)">
            <summary>
            Gets response from one request of the batch.
            </summary>
            <typeparam name="T">Response type.</typeparam>
            <param name="index">Index of the response.</param>
            <returns>One of the batch response.</returns>
        </member>
        <member name="M:Lagoon.Helpers.BatchContext.InitResponseList">
            <summary>
            Initialise a new response list.
            </summary>
            <returns>the new response list.</returns>
        </member>
        <member name="T:Lagoon.Helpers.BatchRequest">
            <summary>
            Describe a BatchRequest used in <see cref="T:Lagoon.Helpers.BatchContext"/>
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.BatchRequest.Url">
            <summary>
            Get or set the Url to 
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.Helpers.BatchRequest.ResponseType">
            <summary>
            Get or set the type returned by a call to <see cref="P:Lagoon.Helpers.BatchRequest.Url"/>
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.Helpers.BatchRequest.HttpMethod">
            <summary>
            Get or set the HttpMethod to use for this request
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.Helpers.BatchRequest.PostContent">
            <summary>
            Post content when <see cref="P:Lagoon.Helpers.BatchRequest.HttpMethod"/> is POST
            </summary>
            <value>Content to POST</value>
        </member>
        <member name="T:Lagoon.Helpers.BatchResponse`1">
            <summary>
            BatchResponse delivered by <see cref="T:Lagoon.Helpers.BatchContext"/>
            </summary>
            <typeparam name="TResponse">Expected response type</typeparam>
        </member>
        <member name="P:Lagoon.Helpers.BatchResponse`1.IsValid">
            <summary>
            Gets if the response is successfully returned.
            </summary>
        </member>
        <member name="P:Lagoon.Helpers.BatchResponse`1.StatusCode">
            <summary>
             Gets or sets the status code of the HTTP response.
            </summary>
            <value>The status code of the HTTP response.</value>
        </member>
        <member name="P:Lagoon.Helpers.BatchResponse`1.Content">
            <summary>
            Gets or sets the response content
            </summary>
            <value>The response content</value>
        </member>
        <member name="P:Lagoon.Helpers.BatchResponse`1.TotalCount">
            <summary>
            Gets or sets the TotalCount (cf $count)
            </summary>
            <value>The total count</value>
        </member>
        <member name="P:Lagoon.Helpers.BatchResponse`1.Exception">
            <summary>
            Exception.
            </summary>
        </member>
        <member name="M:Lagoon.Helpers.BatchResponse`1.CheckValidity">
            <summary>
            Throw an exception if the response is invalid.
            </summary>
        </member>
        <member name="T:Lagoon.Helpers.UpdateDataParametersSerializer`1">
            <summary>
            Class used to send data to the server.
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:Lagoon.Helpers.UpdateDataParametersSerializer`1.Data">
            <summary>
            Gets object of the row
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.Helpers.UpdateDataParametersSerializer`1.ColumnKey">
            <summary>
            Gets field name
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.Helpers.UpdateDataParametersSerializer`1.Value">
            <summary>
            Gets new value of the cell
            </summary>
            <value></value>
        </member>
        <member name="P:Lagoon.Helpers.UpdateDataParametersSerializer`1.PreviousValue">
            <summary>
            Gets previous value of the cell
            </summary>
            <value></value>
        </member>
        <member name="M:Lagoon.Helpers.UpdateDataParametersSerializer`1.#ctor(`0,System.String,System.Object,System.Object)">
            <summary>
            New instance to update an item.
            </summary>
            <param name="item">The item.</param>
            <param name="columnKey">The column identifier.</param>
            <param name="value">The new value.</param>
            <param name="previousValue">The old value.</param>
        </member>
        <member name="M:Lagoon.Helpers.UpdateDataParametersSerializer`1.#ctor(`0)">
            <summary>
            New instance for Add an item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.Rendering.LagoonExtensions">
            <summary>
            Helpers to dynamic render.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.Rendering.LagoonExtensions.AddCascadingValueComponent``1(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder,System.Int32,``0,System.MulticastDelegate,System.Boolean,System.Object,System.String)">
            <summary>
            Add a cascading element to the render tree.
            </summary>
            <typeparam name="TValue">Cascading value type.</typeparam>
            <param name="builder">Builder manager.</param>
            <param name="sequence">An integer that represents the position of the instruction in the source code.</param>
            <param name="value">The value to be provided.</param>
            <param name="childContent">The content to which the value should be provided.</param>
            <param name="isFixed">If true, indicates that Microsoft.AspNetCore.Components.CascadingValue`1.Value
                will not change. This is a performance optimization that allows the framework
                to skip setting up change notifications. Set this flag only if you will not change
                Microsoft.AspNetCore.Components.CascadingValue`1.Value during the component's
                lifetime.</param>
            <param name="key">Assigns the specified key value to the CascadingValue.</param>
            <param name="name">Assign the specified name value to the CascadingValue.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Components.WebAssembly.Hosting.LagoonExtensions">
            <summary>
            Extensions methods
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.WebAssembly.Hosting.LagoonExtensions.SetCulture(Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder,System.String)">
            <summary>
            Load the current application language to use from the cookie or from the defalut parameter.
            </summary>
            <param name="builder">A builder for configuring and creating a WebAssemblyHost.</param>
            <param name="defaultCulture">Defalut culture to use.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.WebAssembly.Hosting.LagoonExtensions.AddLagoonAsync(Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder,Lagoon.UI.Application.LgApplication,System.Action{Microsoft.AspNetCore.Authorization.AuthorizationOptions},System.Boolean,System.Boolean)">
            <summary>
            Inject required Lagoon.UI services
            </summary>
            <param name="builder">A builder for configuring and creating a WebAssemblyHost.</param>
            <param name="app">Application implementation</param>
            <param name="authConfigure">An action delegate to configure the Microsoft.AspNetCore.Authorization.AuthorizationOptions.</param>
            <param name="injectHttpClient">Inject the authenticated HttpClient instance as scoped service.</param>
            <param name="defaultAuthorizationCore">If <c>true</c> add the default authentication mecanism (the server act as an OIDC provider due to IdentityServer integration). If <c>false</c> the application must configure an OIDC provider before calling this <see cref="M:Microsoft.AspNetCore.Components.WebAssembly.Hosting.LagoonExtensions.AddLagoonAsync(Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder,Lagoon.UI.Application.LgApplication,System.Action{Microsoft.AspNetCore.Authorization.AuthorizationOptions},System.Boolean,System.Boolean)"/></param>
            <returns>Client services collection for chaining</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.WebAssembly.Hosting.LagoonExtensions.LoadConsentFromServerAsync(Microsoft.Extensions.DependencyInjection.ServiceProvider,Lagoon.UI.Application.LgApplication,System.String)">
            <summary>
            Retrieve EULA dat from Server
            </summary>
            <param name="serviceProvider">To retrieve services</param>
            <param name="app">Application manager</param>
            <param name="baseHref">Application base path </param>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.WebAssembly.Hosting.LagoonExtensions.AddApiAuthorizationCore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions{Microsoft.AspNetCore.Components.WebAssembly.Authentication.ApiAuthorizationProviderOptions}},System.String)">
            <summary>
            Add authorisation service with the good client application assembly name.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to add the services to.</param>
            <param name="configure">An action that will configure the <see cref="T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationOptions`1"/>.</param>
            <param name="inferredClientId">The client ID.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.WebAssembly.Hosting.LagoonExtensions.AddAppSettingsAsync(Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder,Microsoft.Extensions.DependencyInjection.ServiceProvider,System.String)">
            <summary>
            Get settings from the remote server.
            </summary>
            <param name="builder">A builder for configuring and creating a WebAssemblyHost.</param>
            <param name="serviceProvider">Services provider.</param>
            <param name="baseHref">Application base path</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.WebAssembly.Hosting.LagoonExtensions.LoadAppSettingsFromLocalStorageAsync(Microsoft.AspNetCore.Components.WebAssembly.Hosting.WebAssemblyHostBuilder,Blazored.LocalStorage.ILocalStorageService,System.String)">
            <summary>
            Try to load the configuration from the local storage.
            </summary>
            <param name="builder">A builder for configuring and creating a WebAssemblyHost.</param>
            <param name="localStorage">Browser local storage.</param>
            <param name="appSettingsKey">AppSettings local storage key</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Components.WebAssembly.Hosting.LagoonExtensions.AddLagoonHttpClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.Boolean)">
            <summary>
            Adds the System.Net.Http.IHttpClientFactory and related services to the Microsoft.Extensions.DependencyInjection.IServiceCollection
            and configures two System.Net.Http.HttpClient (One with authentication and one without). 
            </summary>
            <param name="services">Client services collection.</param>
            <param name="baseAddress">The base address for the application. This is typically derived from the 'base href' value in the host page.</param>
            <param name="injectHttpClient">Inject the authenticated HttpClient instance as scoped service.</param>
            <returns> An Microsoft.Extensions.DependencyInjection.IHttpClientBuilder that can be used to configure the client.</returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.LagoonExtension">
            <summary>
            Extensions methods
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.LagoonExtension.TryGetRequiredService``1(Microsoft.Extensions.DependencyInjection.ServiceProvider)">
            <summary>
            Try to retrieve an injected service (if no service registered, return null)
            </summary>
            <typeparam name="T">Service to retrieve</typeparam>
            <param name="sp">Extension for ServiceProvider</param>
            <returns>The service T or null</returns>
        </member>
        <member name="T:System.Net.Http.LagoonExtensions">
            <summary>
            Extensions methods
            </summary>
        </member>
        <member name="F:System.Net.Http.LagoonExtensions.AUTHENTICATED_HTTP_CLIENT_NAME">
            <summary>
            Name of the authenticated http client.
            </summary>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.CreateAnonymousClient(System.Net.Http.IHttpClientFactory)">
            <summary>
            Create anonymous http client that don't check the authorization of resources.
            </summary>
            <param name="httpClientFactory">Http client client factory instance.</param>
            <returns>A new anonymous http client that don't check the authorization of resources.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.CreateAuthenticatedClient(System.Net.Http.IHttpClientFactory)">
            <summary>
            Create anonymous http client that check the authorization of resources.
            </summary>
            <param name="httpClientFactory">Http client client factory instance.</param>
            <returns>A new anonymous http client that check the authorization of resources.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryGetFromJsonAsync``1(System.Net.Http.HttpClient,System.String,System.Nullable{System.Threading.CancellationToken},System.Nullable{System.Net.Http.HttpCompletionOption})">
            <summary>
            Retrieve data from controlleur
            </summary>
            <typeparam name="T">Expected type result</typeparam>
            <param name="http">HttpClient instance</param>
            <param name="requestUri">Api Uri to call</param>
            <param name="cancellationToken">Propagates notification that operations should be canceled.</param>
            <param name="completionOption">Indicates if System.Net.Http.HttpClient operations should be considered completed either as soon as a response is available, or after reading the entire response message including the content.</param>
            <returns>The deserialized api response</returns>
            <exception cref="T:Lagoon.Core.LgException.UserException">The (potential) user exception throw by the api call</exception>
            <exception cref="T:System.Exception">The (potential) raw exception throw by the api call</exception>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryPostFromJsonAsync``1(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgEditForm,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Post TIn data to request URI, read response and
                - return the TOut object
                - return null and display ModelState error if present
                -
            </summary>
            <typeparam name="TIn">Object type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestUri">Uri to post data to</param>
            <param name="model">Object to post</param>
            <param name="form">Optional LgEditForm reference if server need to perform additionnal model validation</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryPostAsJsonAsync``1(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgEditForm,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Post TIn data to request URI, read response and
                - return the TOut object
                - return null and display ModelState error if present
                -
            </summary>
            <typeparam name="TIn">Object type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestUri">Uri to post data to</param>
            <param name="model">Object to post</param>
            <param name="form">Optional LgEditForm reference if server need to perform additionnal model validation</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryPostAsJsonAsync``1(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgValidator,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Post TIn data to request URI, read response and
                - return the TOut object
                - return null and display ModelState error if present
                -
            </summary>
            <typeparam name="TIn">Object type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestUri">Uri to post data to</param>
            <param name="model">Object to post</param>
            <param name="validator">Optional LgEditForm reference if server need to perform additionnal model validation</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryPostFromJsonAsync``2(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgValidator,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Post TIn data to request URI, read response and
                - return the TOut object
                - return null and display ModelState error if present
            </summary>
            <typeparam name="TIn">POST Object type</typeparam>
            <typeparam name="TOut">Response Object type</typeparam>
            <param name="http">HttpClient extension method</param>
            <param name="requestUri">Uri to post data to</param>
            <param name="model">Object to post</param>
            <param name="validator">Optional LgValidator reference if server need to perform additionnal model validation</param>
            <param name="cancellationToken">Optional token to cancel the task</param>
            <returns>Response (TOut) object if posted successfully handled, null if errors</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryPostFromJsonAsync``2(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgEditForm,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Post TIn data to request URI, read response and
                - return the TOut object
                - return null and display ModelState error if present
            </summary>
            <typeparam name="TIn">POST Object type</typeparam>
            <typeparam name="TOut">Response Object type</typeparam>
            <param name="http">HttpClient extension method</param>
            <param name="requestUri">Uri to post data to</param>
            <param name="model">Object to post</param>
            <param name="form">Optional LgEditForm reference if server need to perform additionnal model validation</param>
            <param name="cancellationToken">Optional token to cancel the task</param>
            <returns>Response (TOut) object if posted successfully handled, null if errors</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryPostAsJsonAsync``2(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgEditForm,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Post TIn data to request URI, read response and
                - return the TOut object
                - return null and display ModelState error if present
            </summary>
            <typeparam name="TIn">POST Object type</typeparam>
            <typeparam name="TOut">Response Object type</typeparam>
            <param name="http">HttpClient extension method</param>
            <param name="requestUri">Uri to post data to</param>
            <param name="model">Object to post</param>
            <param name="form">Optional LgEditForm reference if server need to perform additionnal model validation</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>Response (TOut) object if posted successfully handled, null if errors</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryPostAsJsonAsync``2(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgValidator,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Post TIn data to request URI, read response and
                - return the TOut object
                - return null and display ModelState error if present
            </summary>
            <typeparam name="TIn">POST Object type</typeparam>
            <typeparam name="TOut">Response Object type</typeparam>
            <param name="http">HttpClient extension method</param>
            <param name="requestUri">Uri to post data to</param>
            <param name="model">Object to post</param>
            <param name="validator">Optional LgValidator reference if server need to perform additionnal model validation</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>Response (TOut) object if posted successfully handled, null if errors</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryDeleteAsync(System.Net.Http.HttpClient,System.String,Lagoon.UI.Components.LgEditForm,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.
            </summary>
            <param name="http">HttpClient extension</param>
            <param name="requestURI">The Uri the request is sent to.</param>
            <param name="form">Optionnal LgEditForm</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
            <returns> The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryDeleteAsync(System.Net.Http.HttpClient,System.String,Lagoon.UI.Components.LgValidator,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.
            </summary>
            <param name="http">HttpClient extension</param>
            <param name="requestURI">The Uri the request is sent to.</param>
            <param name="validator">Optionnal LgValidator</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
            <returns> The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryDeleteAsync``1(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgEditForm,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.
            </summary>
            <typeparam name="TIn">Object type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestURI">The Uri the request is sent to.</param>
            <param name="model">Object data to send</param>
            <param name="form">Optionnal LgEditForm</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
            <returns> The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryDeleteAsync``1(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgValidator,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Send a DELETE request to the specified Uri with a body and an optionnal cancellation token as an asynchronous operation.
            </summary>
            <typeparam name="TIn">Object type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestURI">The Uri the request is sent to.</param>
            <param name="model">Object data to send</param>
            <param name="validator">Optionnal LgValidtor</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
            <returns> The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryDeleteAsync``1(System.Net.Http.HttpClient,System.String,Lagoon.UI.Components.LgEditForm,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Send a DELETE request to the specified Uri with an optionnal cancellation token as an asynchronous operation.
            </summary>
            <typeparam name="TOut">Object response type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestURI">The Uri the request is sent to.</param>
            <param name="form">Optionnal LgEditForm</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
            <returns> The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryDeleteAsync``1(System.Net.Http.HttpClient,System.String,Lagoon.UI.Components.LgValidator,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Send a DELETE request to the specified Uri with an optionnal cancellation token as an asynchronous operation.
            </summary>
            <typeparam name="TOut">Object response type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestURI">The Uri the request is sent to.</param>
            <param name="validator">Optionnal LgValidtor</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
            <returns> The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryDeleteAsync``2(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgEditForm,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Send a DELETE request to the specified Uri with an optionnal cancellation token as an asynchronous operation.
            </summary>
            <typeparam name="TIn">Object content type</typeparam>
            <typeparam name="TOut">Object response type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestURI">The Uri the request is sent to.</param>
            <param name="model">Object to post.</param>
            <param name="form">Optionnal LgEditForm</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
            <returns> The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryDeleteAsync``2(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgValidator,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Send a DELETE request to the specified Uri with an optionnal cancellation token as an asynchronous operation.
            </summary>
            <typeparam name="TIn">Object content type</typeparam>
            <typeparam name="TOut">Object response type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestURI">The Uri the request is sent to.</param>
            <param name="model">Object to post.</param>
            <param name="validator">Optionnal LgValidtor</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
            <returns> The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryPutAsJsonAsync``1(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgEditForm,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with the given value serialized as JSON.
            </summary>
            <typeparam name="TIn">PUT Object type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestURI">The Uri the request is sent to.</param>
            <param name="model">Object to post with the PUT request</param>
            <param name="form">Optional LgEditForm reference if server need to perform additionnal model validation</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
            <returns> The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryPutAsJsonAsync``1(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgValidator,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with the given value serialized as JSON.
            </summary>
            <typeparam name="TIn">PUT Object type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestURI">The Uri the request is sent to.</param>
            <param name="model">Object to post with the PUT request</param>
            <param name="validator">Optional LgValidator reference if server need to perform additionnal model validation</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
            <returns> The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryPutAsJsonAsync``2(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgEditForm,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with the given value serialized as JSON.
            </summary>
            <typeparam name="TIn">PUT Object type</typeparam>
            <typeparam name="TOut">Response Object type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestURI">The Uri the request is sent to.</param>
            <param name="model">Object to post with the PUT request</param>
            <param name="form">Optional LgEditForm reference if server need to perform additionnal model validation</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
            <returns> The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryPutAsJsonAsync``2(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgValidator,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Sends a PUT request as an asynchronous operation to the specified Uri with the given value serialized as JSON.
            </summary>
            <typeparam name="TIn">PUT Object type</typeparam>
            <typeparam name="TOut">Response Object type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestURI">The Uri the request is sent to.</param>
            <param name="model">Object to post with the PUT request</param>
            <param name="validator">Optional LgValidator reference if server need to perform additionnal model validation</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
            <returns> The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryPatchAsJsonAsync``1(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgEditForm,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Sends a PATCH request as an asynchronous operation to the specified Uri with the given value serialized as JSON.
            </summary>
            <typeparam name="TIn">PATCH Object type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestURI">The Uri the request is sent to.</param>
            <param name="model">Object to post with the PUT request</param>
            <param name="form">Optional LgEditForm reference if server need to perform additionnal model validation</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
            <returns> The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryPatchAsJsonAsync``1(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgValidator,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Sends a PATCH request as an asynchronous operation to the specified Uri with the given value serialized as JSON.
            </summary>
            <typeparam name="TIn">PATCH Object type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestURI">The Uri the request is sent to.</param>
            <param name="model">Object to post with the PUT request</param>
            <param name="validator">Optional LgValidator reference if server need to perform additionnal model validation</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
            <returns> The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryPatchAsJsonAsync``2(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgEditForm,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Sends a PATCH request as an asynchronous operation to the specified Uri with the given value serialized as JSON.
            </summary>
            <typeparam name="TIn">PATCH Object type</typeparam>
            <typeparam name="TOut">Object response type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestURI">The Uri the request is sent to.</param>
            <param name="model">Object to post with the PUT request</param>
            <param name="form">Optional LgEditForm reference if server need to perform additionnal model validation</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
            <returns> The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryPatchAsJsonAsync``2(System.Net.Http.HttpClient,System.String,``0,Lagoon.UI.Components.LgValidator,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Sends a PATCH request as an asynchronous operation to the specified Uri with the given value serialized as JSON.
            </summary>
            <typeparam name="TIn">PATCH Object type</typeparam>
            <typeparam name="TOut">Object response type</typeparam>
            <param name="http">HttpClient extension</param>
            <param name="requestURI">The Uri the request is sent to.</param>
            <param name="model">Object to post with the PUT request</param>
            <param name="validator">Optional LgValidator reference if server need to perform additionnal model validation</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive otice of cancellation.</param>
            <returns> The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.TryParseError``1(System.Net.HttpStatusCode,System.String,Lagoon.UI.Components.LgValidator)">
            <summary>
            Try to decode an server error response
            </summary>
            <param name="statusCode">Http response status code</param>
            <param name="serverResponse">Raw server response</param>
            <param name="validator">Validator used to display errors</param>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.DownloadFileAsync(System.Net.Http.HttpClient,Microsoft.JSInterop.IJSRuntime,System.String,System.Func{System.Int64,System.Int64,System.Threading.Tasks.Task})">
            <summary>
            Download a file sended by an application controller
            </summary>
            <param name="http">HttpClient extension method</param>
            <param name="js">JSRuntime to create local url and send file to browser</param>
            <param name="uri">Controller uri</param>
            <param name="onProgress">Optionnal on progress callback if you want to show download progression</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.StreamToJsByteArrayAsync(Microsoft.JSInterop.IJSRuntime,System.IO.Stream,System.Func{System.Int64,System.Int64,System.Threading.Tasks.Task})">
            <summary>
            Read a stream and return content as a byte array
            </summary>
            <param name="js">IJSRuntime</param>
            <param name="input">Stream to read</param>
            <param name="onProgress">On progress callback</param>
            <returns>Content as byte array</returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.BytesChunkToJs(Microsoft.JSInterop.IJSRuntime,System.String,System.Byte[],System.Int64,System.Int64)">
            <summary>
            Send a bunch of bytes to JS. The idea is to sent a lot of bytes without having to send them in one call
            </summary>
            <param name="js">IJSRuntime</param>
            <param name="id">Unique identifier</param>
            <param name="bytes">Array of bytes</param>
            <param name="offset">Start offset</param>
            <param name="size">Total size</param>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.CompleteBytesChunkAsync(Microsoft.JSInterop.IJSRuntime,System.String,System.String,System.String)">
            <summary>
            Complete a file created with <see cref="M:System.Net.Http.LagoonExtensions.BytesChunkToJs(Microsoft.JSInterop.IJSRuntime,System.String,System.Byte[],System.Int64,System.Int64)"/> method
            </summary>
            <param name="js"></param>
            <param name="id"></param>
            <param name="filename"></param>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.BatchSendAsync(System.Net.Http.HttpClient,Lagoon.Helpers.BatchContext,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Execute an OData batch request
            </summary>
            <param name="http">Extension for HttpClient</param>
            <param name="batchContext">Batch description <see cref="T:Lagoon.Helpers.BatchContext" /></param>
            <param name="cancellationToken">Token to know if the task must be cancelled.</param>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.BatchGetAsync``1(System.Net.Http.HttpClient,System.String,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Execute a single request with OData $batch endpoint and return
            </summary>
            <param name="http">HttpClient extension for OData batch request</param>
            <param name="uri">Controller URI with ODATA url parameters.</param>
            <param name="cancellationToken">Token to know if the task must be cancelled.</param>
            <typeparam name="TResponse"></typeparam>
            <returns></returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.BatchGetAsync``1(System.Net.Http.HttpClient,System.Linq.IQueryable,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Execute a single request with OData $batch endpoint and return
            </summary>
            <param name="http">HttpClient extension for OData batch request</param>
            <param name="query">"DataServiceQuery" instance created by the method "BuildOdataQuery".</param>
            <param name="cancellationToken">Token to know if the task must be cancelled.</param>
            <typeparam name="TResponse"></typeparam>
            <returns></returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.BatchRequestAsync``1(System.Net.Http.HttpClient,System.String,System.Net.Http.HttpMethod,System.Nullable{System.Threading.CancellationToken})">
            <summary>
            Execute a single request with OData $batch endpoint and return
            </summary>
            <param name="http">HttpClient extension for OData batch request</param>
            <param name="url">URL to query.</param>
            <param name="httpMethod">Method HTTP.</param>
            <param name="cancellationToken">Token to know if the task must be cancelled.</param>
            <typeparam name="TResponse"></typeparam>
            <returns></returns>
        </member>
        <member name="M:System.Net.Http.LagoonExtensions.GetRemoteQuery``1(System.Net.Http.HttpClient,System.String)">
            <summary>
            Prepare a IQueryable to create a odata uri filter
            </summary>
            <param name="http">HttpClient extension method</param>
            <param name="route">Controller route</param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:System.Text.LagoonExtensions">
            <summary>
            Extensions methods
            </summary>
        </member>
        <member name="M:System.Text.LagoonExtensions.JsonDeserialize``1(System.String)">
            <summary>
            Deserialize JSON "camelCase" names response to "PascalCase" names.
            </summary>
            <typeparam name="T">The target type of the JSON value.</typeparam>
            <param name="json">The JSON text to parse.</param>
            <returns>A TValue representation of the JSON value.</returns>
        </member>
        <member name="M:System.Text.LagoonExtensions.JsonDeserialize(System.String,System.Type)">
            <summary>
            Deserialize JSON "camelCase" names response to "PascalCase" names.
            </summary>
            <param name="json">The JSON text to parse.</param>
            <param name="returnType">The type of the object to convert to and return.</param>
            <returns>A returnType representation of the JSON value.</returns>
        </member>
    </members>
</doc>
