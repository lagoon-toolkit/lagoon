<Project>

  <!-- Check resources folder updates -->
  <ItemGroup>
    <UpToDateCheckInput Include="resources\javascripts\**" />
    <UpToDateCheckInput Include="resources\icons\sprites\**" />
    <UpToDateCheckInput Include="resources\icons\svg\**" />
    <UpToDateCheckInput Include="resources\styles\**" />
  </ItemGroup>

  <!-- ******************************************************************** -->
  <!-- Generate the "LagoonModule.xml" file for the package -->
  <Import Project="LagoonPreBuild.targets" />

  <!-- ******************************************************************** -->
  <!-- Register the source generator ("IconNames.g.cs" / "icons.svg" / "res.xml" / "main.scss") -->
  <ItemGroup>
    <ProjectReference Include="..\Lagoon.Generators\Lagoon.Generators.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
  </ItemGroup>

  <!-- Initialize variables for the source generator -->
  <Target Name="LagoonPrepareForBuild" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <LagoonBuildContext>$(Configuration)|$(TargetFramework)|$(MSBuildProjectDirectory)|$(IntermediateOutputPath)</LagoonBuildContext>
    </PropertyGroup>
    <!-- Make the variable visible to the source generators -->
    <ItemGroup>
      <CompilerVisibleProperty Include="LagoonBuildContext" />
    </ItemGroup>
    <!-- Remove the old file previously generated by lgn build -->
    <ItemGroup Condition="Exists('resources\icons\auto\IconNames.auto.cs')">
      <Compile Remove="resources\icons\auto\IconNames.auto.cs" />
    </ItemGroup>
    <RemoveDir Directories="resources\icons\auto" Condition="Exists('resources\icons\auto')" />
  </Target>

  <!-- ******************************************************************** -->
  <!-- Generate "main.min.js" -->
  <PropertyGroup>
    <TargetForLagoonPrepareMainJs>LagoonConcatMainJs</TargetForLagoonPrepareMainJs>
    <TargetForLagoonPrepareMainJs Condition="'$(Configuration)' == 'Release'">LagoonMinimifyMainJs</TargetForLagoonPrepareMainJs>
    <_LagoonMainJs>wwwroot\js\main.min.js</_LagoonMainJs>
  </PropertyGroup>
  <ItemGroup>
    <_LagoonMainJsContent Include="wwwroot\js\main\**\*.js" />
  </ItemGroup>

  <!-- Remove generated files from the source folder -->
  <Target Name="LagoonUIClean" BeforeTargets="BeforeClean" Condition="'$(LagoonIsFirstTarget)' == 'true'">
    <Delete Files="$(_LagoonMainJs)" Condition="Exists('$(_LagoonMainJs)')" />
    <RemoveDir Directories="resources\auto" Condition="Exists('resources\auto')" />
  </Target>

  <!-- Concatenate all js file into one file in DEBUG mode -->
  <Target Name="LagoonConcatMainJs"
    Inputs="@(_LagoonMainJsContent)"
    Outputs="$(_LagoonMainJs)">
    <ItemGroup>
      <_LagoonMainJsLine Include='// %(_LagoonMainJsContent.FileName)%0a$([System.IO.File]::ReadAllText(%(_LagoonMainJsContent.Identity)))%0a' />
    </ItemGroup>
    <WriteLinesToFile
            File="$(_LagoonMainJs)"
            Lines="@(_LagoonMainJsLine)"
            Overwrite="true"
            Encoding="utf-8"/>
  </Target>

  <!-- Minimify all js file into one file in RELEASE mode -->
  <Target Name="LagoonMinimifyMainJs">
    <!-- <Message Importance="High" Text="XXX LagoonMinimifyMainJs $(Configuration)" /> -->
    <PropertyGroup>
      <_LgnMinVersion>2.0.6</_LgnMinVersion>
    </PropertyGroup>
    <Exec Command='lgn build "$(MSBuildProjectFullPath)" "$(ConfigurationName)" --js --min-version $(_LgnMinVersion)' ContinueOnError="true" IgnoreExitCode="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' == '7007'" Text="LGN tool must be updated before build, please update it with the following command : dotnet tool update -g LGN" />
    <Error Condition="'$(ErrorCode)' == '9009'" Text="LGN tool is required to build this project. To continue, please install it with the following command : dotnet tool install -g LGN" />
    <Error Condition="'$(ErrorCode)' != '0'" Text="An error occured during Lagoon build. Check output for more details." />
  </Target>

  <!-- Bundle the js/main/**/* files -->
  <Target Name="LagoonPrepareMainJs" DependsOnTargets="$(TargetForLagoonPrepareMainJs)">
    <!-- <Message Importance="High" Text="XXX $(MSBuildProjectName) LagoonPrepareMainJs $(Configuration) ZZZ {@(StaticWebAsset)}" /> -->
    <ItemGroup>
      <Content Remove="$(_LagoonMainJs)" />
    </ItemGroup>
    <!-- Remove the main.min.js file if it's empty -->
    <Delete Files="$(_LagoonMainJs)" Condition="'@(_LagoonMainJsContent->Count())' == '0'" />
  </Target>

  <!-- Used by the command : dotnet build Lagoon.UI.csproj -->
  <Target Name="LagoonPrepareMainJsCrossTargeting"
    BeforeTargets="DispatchToInnerBuilds"
    DependsOnTargets="LagoonPrepareMainJs">
    <!-- <Message Importance="High" Text="XXX DispatchToInnerBuilds !" /> -->
  </Target>

  <!-- Used by the command : dotnet publish Server\Demo.Server.csproj -p:PublishLinkedProject=true -c Release...  -->
  <Target Name="LagoonPrepareMainJsPublishLinkedProject"
    BeforeTargets="BeforeBuild"
    DependsOnTargets="LagoonPrepareMainJs"
    Condition="'$(PublishLinkedProject)'=='true'" />

  <Target Name="LagoonBeforeAssignTargetPaths" BeforeTargets="AssignTargetPaths">
    <!-- <Message Importance="High" Text="XXX Before AssignTargetPaths ($(TargetFramework))..." /> -->
    <ItemGroup>
      <Content Remove="@(_LagoonMainJsContent)" />
      <Content Remove="$(_LagoonMainJs)" />
      <Content Include="$(_LagoonMainJs)" PackagePath="staticwebassets\js" Condition="'@(_LagoonMainJsContent->Count())' != '0'"/>
    </ItemGroup>
  </Target>

</Project>
